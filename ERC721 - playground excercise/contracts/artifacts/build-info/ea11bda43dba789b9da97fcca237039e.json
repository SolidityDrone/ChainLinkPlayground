{
	"id": "ea11bda43dba789b9da97fcca237039e",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Missions.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\ninterface INFTGame {\r\n       function getTrophies(uint256) external returns (uint256);\r\n}\r\n\r\ncontract Staking is ReentrancyGuard {\r\n    IERC20 public parentToken;\r\n    IERC721 public parentNFT;\r\n    INFTGame public parentNftFunctions;\r\n    address public parentNFTAddress;\r\n    constructor(address _nftContract, address _tokenContract){\r\n        parentNFT = IERC721(_nftContract);\r\n        parentNftFunctions = INFTGame(_nftContract);\r\n        parentToken = IERC20(_tokenContract);\r\n        parentNFTAddress = _nftContract;\r\n        \r\n    }\r\n\r\n    function stake(uint256 _tokenID) public nonReentrant() {\r\n        require(parentNFT.ownerOf(_tokenID) == msg.sender, \"Not owner\");\r\n        parentNFT.approve(address(this), 1);\r\n       \r\n        \r\n    }\r\n    \r\n    uint256 hello = 0;\r\n    function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\r\n        hello = 1;\r\n        return this.onERC721Received.selector;\r\n    }\r\n    \r\n    \r\n \r\n\r\n   \r\n \r\n\r\n    \r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Missions.sol": {
				"INFTGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getTrophies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTrophies(uint256)": "a0c4442d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTrophies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"INFTGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0xef36c2d7af0b3adafa860ffa325b8fd4077ba9557d5cadbc19ed407eb16af6e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec7a5c648e791b37e13fc3301fde223095a34d566d213b6fb679a4052486f14d\",\"dweb:/ipfs/QmazA5p8mZqgQVg4Ch1GQkfPHUHmtCvw5YyUWJoYzDZcpr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFTAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNftFunctions",
							"outputs": [
								{
									"internalType": "contract INFTGame",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Missions.sol\":341:1247  contract Staking is ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Missions.sol\":1026:1027  0 */\n  0x00\n    /* \"contracts/Missions.sol\":1010:1027  uint256 hello = 0 */\n  0x05\n  sstore\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":614:626  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":594:603  parentNFT */\n  0x02\n  0x00\n    /* \"contracts/Missions.sol\":594:627  parentNFT = IERC721(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":668:680  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":638:656  parentNftFunctions */\n  0x03\n  0x00\n    /* \"contracts/Missions.sol\":638:681  parentNftFunctions = INFTGame(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":713:727  _tokenContract */\n  dup1\n    /* \"contracts/Missions.sol\":692:703  parentToken */\n  0x01\n  0x00\n    /* \"contracts/Missions.sol\":692:728  parentToken = IERC20(_tokenContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":758:770  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":739:755  parentNFTAddress */\n  0x04\n  0x00\n    /* \"contracts/Missions.sol\":739:770  parentNFTAddress = _nftContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  pop\n  pop\n    /* \"contracts/Missions.sol\":341:1247  contract Staking is ReentrancyGuard {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":260:379   */\ntag_15:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_18\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_19\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_22:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_24\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_25:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_17:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_13:\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_32:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Missions.sol\":341:1247  contract Staking is ReentrancyGuard {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Missions.sol\":341:1247  contract Staking is ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x66bb863b\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x80a54001\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfead3d6e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Missions.sol\":1034:1209  function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\r... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_17\n      swap2\n      swap1\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_5:\n      tag_19\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":796:998  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      tag_26\n      jump\t// in\n    tag_23:\n      stop\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_7:\n      tag_27\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_8:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1034:1209  function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\r... */\n    tag_12:\n        /* \"contracts/Missions.sol\":1125:1131  bytes4 */\n      0x00\n        /* \"contracts/Missions.sol\":1152:1153  1 */\n      0x01\n        /* \"contracts/Missions.sol\":1144:1149  hello */\n      0x05\n        /* \"contracts/Missions.sol\":1144:1153  hello = 1 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1171:1201  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/Missions.sol\":1164:1201  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":1034:1209  function onERC721Received(address, address, uint256, bytes memory) public virtual returns (bytes4) {\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_16:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_20:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":796:998  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n    tag_26:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_37\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_38\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_37:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":901:911  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":870:911  parentNFT.ownerOf(_tokenID) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":870:879  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":870:887  parentNFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/Missions.sol\":888:896  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":870:897  parentNFT.ownerOf(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_43\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_43:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_45\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_45:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"contracts/Missions.sol\":870:911  parentNFT.ownerOf(_tokenID) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Missions.sol\":862:925  require(parentNFT.ownerOf(_tokenID) == msg.sender, \"Not owner\") */\n      tag_48\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_49\n      swap1\n      tag_50\n      jump\t// in\n    tag_49:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_48:\n        /* \"contracts/Missions.sol\":936:945  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":936:953  parentNFT.approve */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x095ea7b3\n        /* \"contracts/Missions.sol\":962:966  this */\n      address\n        /* \"contracts/Missions.sol\":969:970  1 */\n      0x01\n        /* \"contracts/Missions.sol\":936:971  parentNFT.approve(address(this), 1) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_51\n      swap3\n      swap2\n      swap1\n      tag_52\n      jump\t// in\n    tag_51:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_53\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_53:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_55\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_55:\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":796:998  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_28:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_32:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_57:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_59\n        /* \"#utility.yul\":125:173   */\n      tag_60\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_61\n      jump\t// in\n    tag_60:\n        /* \"#utility.yul\":109:174   */\n      tag_62\n      jump\t// in\n    tag_59:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_64\n      tag_65\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":249:361   */\n    tag_63:\n        /* \"#utility.yul\":370:411   */\n      tag_66\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_68:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_70\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:711   */\n    tag_72:\n        /* \"#utility.yul\":625:630   */\n      0x00\n        /* \"#utility.yul\":656:662   */\n      dup2\n        /* \"#utility.yul\":650:663   */\n      mload\n        /* \"#utility.yul\":641:663   */\n      swap1\n      pop\n        /* \"#utility.yul\":672:705   */\n      tag_74\n        /* \"#utility.yul\":699:704   */\n      dup2\n        /* \"#utility.yul\":672:705   */\n      tag_71\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":568:711   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":730:1068   */\n    tag_75:\n        /* \"#utility.yul\":785:790   */\n      0x00\n        /* \"#utility.yul\":834:837   */\n      dup3\n        /* \"#utility.yul\":827:831   */\n      0x1f\n        /* \"#utility.yul\":819:825   */\n      dup4\n        /* \"#utility.yul\":815:832   */\n      add\n        /* \"#utility.yul\":811:838   */\n      slt\n        /* \"#utility.yul\":801:923   */\n      tag_77\n      jumpi\n        /* \"#utility.yul\":842:921   */\n      tag_78\n      tag_79\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":801:923   */\n    tag_77:\n        /* \"#utility.yul\":959:965   */\n      dup2\n        /* \"#utility.yul\":946:966   */\n      calldataload\n        /* \"#utility.yul\":984:1062   */\n      tag_80\n        /* \"#utility.yul\":1058:1061   */\n      dup5\n        /* \"#utility.yul\":1050:1056   */\n      dup3\n        /* \"#utility.yul\":1043:1047   */\n      0x20\n        /* \"#utility.yul\":1035:1041   */\n      dup7\n        /* \"#utility.yul\":1031:1048   */\n      add\n        /* \"#utility.yul\":984:1062   */\n      tag_57\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":975:1062   */\n      swap2\n      pop\n        /* \"#utility.yul\":791:1068   */\n      pop\n        /* \"#utility.yul\":730:1068   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1074:1213   */\n    tag_81:\n        /* \"#utility.yul\":1120:1125   */\n      0x00\n        /* \"#utility.yul\":1158:1164   */\n      dup2\n        /* \"#utility.yul\":1145:1165   */\n      calldataload\n        /* \"#utility.yul\":1136:1165   */\n      swap1\n      pop\n        /* \"#utility.yul\":1174:1207   */\n      tag_83\n        /* \"#utility.yul\":1201:1206   */\n      dup2\n        /* \"#utility.yul\":1174:1207   */\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1074:1213   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1219:1570   */\n    tag_47:\n        /* \"#utility.yul\":1289:1295   */\n      0x00\n        /* \"#utility.yul\":1338:1340   */\n      0x20\n        /* \"#utility.yul\":1326:1335   */\n      dup3\n        /* \"#utility.yul\":1317:1324   */\n      dup5\n        /* \"#utility.yul\":1313:1336   */\n      sub\n        /* \"#utility.yul\":1309:1341   */\n      slt\n        /* \"#utility.yul\":1306:1425   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1344:1423   */\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1306:1425   */\n    tag_86:\n        /* \"#utility.yul\":1464:1465   */\n      0x00\n        /* \"#utility.yul\":1489:1553   */\n      tag_89\n        /* \"#utility.yul\":1545:1552   */\n      dup5\n        /* \"#utility.yul\":1536:1542   */\n      dup3\n        /* \"#utility.yul\":1525:1534   */\n      dup6\n        /* \"#utility.yul\":1521:1543   */\n      add\n        /* \"#utility.yul\":1489:1553   */\n      tag_72\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1479:1553   */\n      swap2\n      pop\n        /* \"#utility.yul\":1435:1563   */\n      pop\n        /* \"#utility.yul\":1219:1570   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1576:2519   */\n    tag_11:\n        /* \"#utility.yul\":1671:1677   */\n      0x00\n        /* \"#utility.yul\":1679:1685   */\n      dup1\n        /* \"#utility.yul\":1687:1693   */\n      0x00\n        /* \"#utility.yul\":1695:1701   */\n      dup1\n        /* \"#utility.yul\":1744:1747   */\n      0x80\n        /* \"#utility.yul\":1732:1741   */\n      dup6\n        /* \"#utility.yul\":1723:1730   */\n      dup8\n        /* \"#utility.yul\":1719:1742   */\n      sub\n        /* \"#utility.yul\":1715:1748   */\n      slt\n        /* \"#utility.yul\":1712:1832   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":1751:1830   */\n      tag_92\n      tag_88\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":1712:1832   */\n    tag_91:\n        /* \"#utility.yul\":1871:1872   */\n      0x00\n        /* \"#utility.yul\":1896:1949   */\n      tag_93\n        /* \"#utility.yul\":1941:1948   */\n      dup8\n        /* \"#utility.yul\":1932:1938   */\n      dup3\n        /* \"#utility.yul\":1921:1930   */\n      dup9\n        /* \"#utility.yul\":1917:1939   */\n      add\n        /* \"#utility.yul\":1896:1949   */\n      tag_68\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":1886:1949   */\n      swap5\n      pop\n        /* \"#utility.yul\":1842:1959   */\n      pop\n        /* \"#utility.yul\":1998:2000   */\n      0x20\n        /* \"#utility.yul\":2024:2077   */\n      tag_94\n        /* \"#utility.yul\":2069:2076   */\n      dup8\n        /* \"#utility.yul\":2060:2066   */\n      dup3\n        /* \"#utility.yul\":2049:2058   */\n      dup9\n        /* \"#utility.yul\":2045:2067   */\n      add\n        /* \"#utility.yul\":2024:2077   */\n      tag_68\n      jump\t// in\n    tag_94:\n        /* \"#utility.yul\":2014:2077   */\n      swap4\n      pop\n        /* \"#utility.yul\":1969:2087   */\n      pop\n        /* \"#utility.yul\":2126:2128   */\n      0x40\n        /* \"#utility.yul\":2152:2205   */\n      tag_95\n        /* \"#utility.yul\":2197:2204   */\n      dup8\n        /* \"#utility.yul\":2188:2194   */\n      dup3\n        /* \"#utility.yul\":2177:2186   */\n      dup9\n        /* \"#utility.yul\":2173:2195   */\n      add\n        /* \"#utility.yul\":2152:2205   */\n      tag_81\n      jump\t// in\n    tag_95:\n        /* \"#utility.yul\":2142:2205   */\n      swap3\n      pop\n        /* \"#utility.yul\":2097:2215   */\n      pop\n        /* \"#utility.yul\":2282:2284   */\n      0x60\n        /* \"#utility.yul\":2271:2280   */\n      dup6\n        /* \"#utility.yul\":2267:2285   */\n      add\n        /* \"#utility.yul\":2254:2286   */\n      calldataload\n        /* \"#utility.yul\":2313:2331   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2305:2311   */\n      dup2\n        /* \"#utility.yul\":2302:2332   */\n      gt\n        /* \"#utility.yul\":2299:2416   */\n      iszero\n      tag_96\n      jumpi\n        /* \"#utility.yul\":2335:2414   */\n      tag_97\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2299:2416   */\n    tag_96:\n        /* \"#utility.yul\":2440:2502   */\n      tag_99\n        /* \"#utility.yul\":2494:2501   */\n      dup8\n        /* \"#utility.yul\":2485:2491   */\n      dup3\n        /* \"#utility.yul\":2474:2483   */\n      dup9\n        /* \"#utility.yul\":2470:2492   */\n      add\n        /* \"#utility.yul\":2440:2502   */\n      tag_75\n      jump\t// in\n    tag_99:\n        /* \"#utility.yul\":2430:2502   */\n      swap2\n      pop\n        /* \"#utility.yul\":2225:2512   */\n      pop\n        /* \"#utility.yul\":1576:2519   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2525:2854   */\n    tag_25:\n        /* \"#utility.yul\":2584:2590   */\n      0x00\n        /* \"#utility.yul\":2633:2635   */\n      0x20\n        /* \"#utility.yul\":2621:2630   */\n      dup3\n        /* \"#utility.yul\":2612:2619   */\n      dup5\n        /* \"#utility.yul\":2608:2631   */\n      sub\n        /* \"#utility.yul\":2604:2636   */\n      slt\n        /* \"#utility.yul\":2601:2720   */\n      iszero\n      tag_101\n      jumpi\n        /* \"#utility.yul\":2639:2718   */\n      tag_102\n      tag_88\n      jump\t// in\n    tag_102:\n        /* \"#utility.yul\":2601:2720   */\n    tag_101:\n        /* \"#utility.yul\":2759:2760   */\n      0x00\n        /* \"#utility.yul\":2784:2837   */\n      tag_103\n        /* \"#utility.yul\":2829:2836   */\n      dup5\n        /* \"#utility.yul\":2820:2826   */\n      dup3\n        /* \"#utility.yul\":2809:2818   */\n      dup6\n        /* \"#utility.yul\":2805:2827   */\n      add\n        /* \"#utility.yul\":2784:2837   */\n      tag_81\n      jump\t// in\n    tag_103:\n        /* \"#utility.yul\":2774:2837   */\n      swap2\n      pop\n        /* \"#utility.yul\":2730:2847   */\n      pop\n        /* \"#utility.yul\":2525:2854   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2860:2978   */\n    tag_104:\n        /* \"#utility.yul\":2947:2971   */\n      tag_106\n        /* \"#utility.yul\":2965:2970   */\n      dup2\n        /* \"#utility.yul\":2947:2971   */\n      tag_107\n      jump\t// in\n    tag_106:\n        /* \"#utility.yul\":2942:2945   */\n      dup3\n        /* \"#utility.yul\":2935:2972   */\n      mstore\n        /* \"#utility.yul\":2860:2978   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2984:3099   */\n    tag_108:\n        /* \"#utility.yul\":3069:3092   */\n      tag_110\n        /* \"#utility.yul\":3086:3091   */\n      dup2\n        /* \"#utility.yul\":3069:3092   */\n      tag_111\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3064:3067   */\n      dup3\n        /* \"#utility.yul\":3057:3093   */\n      mstore\n        /* \"#utility.yul\":2984:3099   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3105:3264   */\n    tag_112:\n        /* \"#utility.yul\":3206:3257   */\n      tag_114\n        /* \"#utility.yul\":3251:3256   */\n      dup2\n        /* \"#utility.yul\":3206:3257   */\n      tag_115\n      jump\t// in\n    tag_114:\n        /* \"#utility.yul\":3201:3204   */\n      dup3\n        /* \"#utility.yul\":3194:3258   */\n      mstore\n        /* \"#utility.yul\":3105:3264   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3270:3431   */\n    tag_116:\n        /* \"#utility.yul\":3372:3424   */\n      tag_118\n        /* \"#utility.yul\":3418:3423   */\n      dup2\n        /* \"#utility.yul\":3372:3424   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3367:3370   */\n      dup3\n        /* \"#utility.yul\":3360:3425   */\n      mstore\n        /* \"#utility.yul\":3270:3431   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3437:3600   */\n    tag_120:\n        /* \"#utility.yul\":3540:3593   */\n      tag_122\n        /* \"#utility.yul\":3587:3592   */\n      dup2\n        /* \"#utility.yul\":3540:3593   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3535:3538   */\n      dup3\n        /* \"#utility.yul\":3528:3594   */\n      mstore\n        /* \"#utility.yul\":3437:3600   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3606:3753   */\n    tag_124:\n        /* \"#utility.yul\":3701:3746   */\n      tag_126\n        /* \"#utility.yul\":3740:3745   */\n      dup2\n        /* \"#utility.yul\":3701:3746   */\n      tag_127\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":3696:3699   */\n      dup3\n        /* \"#utility.yul\":3689:3747   */\n      mstore\n        /* \"#utility.yul\":3606:3753   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3759:4124   */\n    tag_128:\n        /* \"#utility.yul\":3901:3904   */\n      0x00\n        /* \"#utility.yul\":3922:3988   */\n      tag_130\n        /* \"#utility.yul\":3986:3987   */\n      0x09\n        /* \"#utility.yul\":3981:3984   */\n      dup4\n        /* \"#utility.yul\":3922:3988   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":3915:3988   */\n      swap2\n      pop\n        /* \"#utility.yul\":3997:4090   */\n      tag_132\n        /* \"#utility.yul\":4086:4089   */\n      dup3\n        /* \"#utility.yul\":3997:4090   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4115:4117   */\n      0x20\n        /* \"#utility.yul\":4110:4113   */\n      dup3\n        /* \"#utility.yul\":4106:4118   */\n      add\n        /* \"#utility.yul\":4099:4118   */\n      swap1\n      pop\n        /* \"#utility.yul\":3759:4124   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4130:4496   */\n    tag_134:\n        /* \"#utility.yul\":4272:4275   */\n      0x00\n        /* \"#utility.yul\":4293:4360   */\n      tag_136\n        /* \"#utility.yul\":4357:4359   */\n      0x1f\n        /* \"#utility.yul\":4352:4355   */\n      dup4\n        /* \"#utility.yul\":4293:4360   */\n      tag_131\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4286:4360   */\n      swap2\n      pop\n        /* \"#utility.yul\":4369:4462   */\n      tag_137\n        /* \"#utility.yul\":4458:4461   */\n      dup3\n        /* \"#utility.yul\":4369:4462   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":4487:4489   */\n      0x20\n        /* \"#utility.yul\":4482:4485   */\n      dup3\n        /* \"#utility.yul\":4478:4490   */\n      add\n        /* \"#utility.yul\":4471:4490   */\n      swap1\n      pop\n        /* \"#utility.yul\":4130:4496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4502:4620   */\n    tag_139:\n        /* \"#utility.yul\":4589:4613   */\n      tag_141\n        /* \"#utility.yul\":4607:4612   */\n      dup2\n        /* \"#utility.yul\":4589:4613   */\n      tag_142\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":4584:4587   */\n      dup3\n        /* \"#utility.yul\":4577:4614   */\n      mstore\n        /* \"#utility.yul\":4502:4620   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4626:4848   */\n    tag_18:\n        /* \"#utility.yul\":4719:4723   */\n      0x00\n        /* \"#utility.yul\":4757:4759   */\n      0x20\n        /* \"#utility.yul\":4746:4755   */\n      dup3\n        /* \"#utility.yul\":4742:4760   */\n      add\n        /* \"#utility.yul\":4734:4760   */\n      swap1\n      pop\n        /* \"#utility.yul\":4770:4841   */\n      tag_144\n        /* \"#utility.yul\":4838:4839   */\n      0x00\n        /* \"#utility.yul\":4827:4836   */\n      dup4\n        /* \"#utility.yul\":4823:4840   */\n      add\n        /* \"#utility.yul\":4814:4820   */\n      dup5\n        /* \"#utility.yul\":4770:4841   */\n      tag_104\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":4626:4848   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4854:5202   */\n    tag_52:\n        /* \"#utility.yul\":4983:4987   */\n      0x00\n        /* \"#utility.yul\":5021:5023   */\n      0x40\n        /* \"#utility.yul\":5010:5019   */\n      dup3\n        /* \"#utility.yul\":5006:5024   */\n      add\n        /* \"#utility.yul\":4998:5024   */\n      swap1\n      pop\n        /* \"#utility.yul\":5034:5105   */\n      tag_146\n        /* \"#utility.yul\":5102:5103   */\n      0x00\n        /* \"#utility.yul\":5091:5100   */\n      dup4\n        /* \"#utility.yul\":5087:5104   */\n      add\n        /* \"#utility.yul\":5078:5084   */\n      dup6\n        /* \"#utility.yul\":5034:5105   */\n      tag_104\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":5115:5195   */\n      tag_147\n        /* \"#utility.yul\":5191:5193   */\n      0x20\n        /* \"#utility.yul\":5180:5189   */\n      dup4\n        /* \"#utility.yul\":5176:5194   */\n      add\n        /* \"#utility.yul\":5167:5173   */\n      dup5\n        /* \"#utility.yul\":5115:5195   */\n      tag_124\n      jump\t// in\n    tag_147:\n        /* \"#utility.yul\":4854:5202   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5208:5426   */\n    tag_14:\n        /* \"#utility.yul\":5299:5303   */\n      0x00\n        /* \"#utility.yul\":5337:5339   */\n      0x20\n        /* \"#utility.yul\":5326:5335   */\n      dup3\n        /* \"#utility.yul\":5322:5340   */\n      add\n        /* \"#utility.yul\":5314:5340   */\n      swap1\n      pop\n        /* \"#utility.yul\":5350:5419   */\n      tag_149\n        /* \"#utility.yul\":5416:5417   */\n      0x00\n        /* \"#utility.yul\":5405:5414   */\n      dup4\n        /* \"#utility.yul\":5401:5418   */\n      add\n        /* \"#utility.yul\":5392:5398   */\n      dup5\n        /* \"#utility.yul\":5350:5419   */\n      tag_108\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":5208:5426   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5432:5682   */\n    tag_22:\n        /* \"#utility.yul\":5539:5543   */\n      0x00\n        /* \"#utility.yul\":5577:5579   */\n      0x20\n        /* \"#utility.yul\":5566:5575   */\n      dup3\n        /* \"#utility.yul\":5562:5580   */\n      add\n        /* \"#utility.yul\":5554:5580   */\n      swap1\n      pop\n        /* \"#utility.yul\":5590:5675   */\n      tag_151\n        /* \"#utility.yul\":5672:5673   */\n      0x00\n        /* \"#utility.yul\":5661:5670   */\n      dup4\n        /* \"#utility.yul\":5657:5674   */\n      add\n        /* \"#utility.yul\":5648:5654   */\n      dup5\n        /* \"#utility.yul\":5590:5675   */\n      tag_112\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":5432:5682   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5688:5940   */\n    tag_30:\n        /* \"#utility.yul\":5796:5800   */\n      0x00\n        /* \"#utility.yul\":5834:5836   */\n      0x20\n        /* \"#utility.yul\":5823:5832   */\n      dup3\n        /* \"#utility.yul\":5819:5837   */\n      add\n        /* \"#utility.yul\":5811:5837   */\n      swap1\n      pop\n        /* \"#utility.yul\":5847:5933   */\n      tag_153\n        /* \"#utility.yul\":5930:5931   */\n      0x00\n        /* \"#utility.yul\":5919:5928   */\n      dup4\n        /* \"#utility.yul\":5915:5932   */\n      add\n        /* \"#utility.yul\":5906:5912   */\n      dup5\n        /* \"#utility.yul\":5847:5933   */\n      tag_116\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":5688:5940   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5946:6200   */\n    tag_34:\n        /* \"#utility.yul\":6055:6059   */\n      0x00\n        /* \"#utility.yul\":6093:6095   */\n      0x20\n        /* \"#utility.yul\":6082:6091   */\n      dup3\n        /* \"#utility.yul\":6078:6096   */\n      add\n        /* \"#utility.yul\":6070:6096   */\n      swap1\n      pop\n        /* \"#utility.yul\":6106:6193   */\n      tag_155\n        /* \"#utility.yul\":6190:6191   */\n      0x00\n        /* \"#utility.yul\":6179:6188   */\n      dup4\n        /* \"#utility.yul\":6175:6192   */\n      add\n        /* \"#utility.yul\":6166:6172   */\n      dup5\n        /* \"#utility.yul\":6106:6193   */\n      tag_120\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":5946:6200   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6206:6625   */\n    tag_50:\n        /* \"#utility.yul\":6372:6376   */\n      0x00\n        /* \"#utility.yul\":6410:6412   */\n      0x20\n        /* \"#utility.yul\":6399:6408   */\n      dup3\n        /* \"#utility.yul\":6395:6413   */\n      add\n        /* \"#utility.yul\":6387:6413   */\n      swap1\n      pop\n        /* \"#utility.yul\":6459:6468   */\n      dup2\n        /* \"#utility.yul\":6453:6457   */\n      dup2\n        /* \"#utility.yul\":6449:6469   */\n      sub\n        /* \"#utility.yul\":6445:6446   */\n      0x00\n        /* \"#utility.yul\":6434:6443   */\n      dup4\n        /* \"#utility.yul\":6430:6447   */\n      add\n        /* \"#utility.yul\":6423:6470   */\n      mstore\n        /* \"#utility.yul\":6487:6618   */\n      tag_157\n        /* \"#utility.yul\":6613:6617   */\n      dup2\n        /* \"#utility.yul\":6487:6618   */\n      tag_128\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":6479:6618   */\n      swap1\n      pop\n        /* \"#utility.yul\":6206:6625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6631:7050   */\n    tag_39:\n        /* \"#utility.yul\":6797:6801   */\n      0x00\n        /* \"#utility.yul\":6835:6837   */\n      0x20\n        /* \"#utility.yul\":6824:6833   */\n      dup3\n        /* \"#utility.yul\":6820:6838   */\n      add\n        /* \"#utility.yul\":6812:6838   */\n      swap1\n      pop\n        /* \"#utility.yul\":6884:6893   */\n      dup2\n        /* \"#utility.yul\":6878:6882   */\n      dup2\n        /* \"#utility.yul\":6874:6894   */\n      sub\n        /* \"#utility.yul\":6870:6871   */\n      0x00\n        /* \"#utility.yul\":6859:6868   */\n      dup4\n        /* \"#utility.yul\":6855:6872   */\n      add\n        /* \"#utility.yul\":6848:6895   */\n      mstore\n        /* \"#utility.yul\":6912:7043   */\n      tag_159\n        /* \"#utility.yul\":7038:7042   */\n      dup2\n        /* \"#utility.yul\":6912:7043   */\n      tag_134\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6904:7043   */\n      swap1\n      pop\n        /* \"#utility.yul\":6631:7050   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7056:7278   */\n    tag_42:\n        /* \"#utility.yul\":7149:7153   */\n      0x00\n        /* \"#utility.yul\":7187:7189   */\n      0x20\n        /* \"#utility.yul\":7176:7185   */\n      dup3\n        /* \"#utility.yul\":7172:7190   */\n      add\n        /* \"#utility.yul\":7164:7190   */\n      swap1\n      pop\n        /* \"#utility.yul\":7200:7271   */\n      tag_161\n        /* \"#utility.yul\":7268:7269   */\n      0x00\n        /* \"#utility.yul\":7257:7266   */\n      dup4\n        /* \"#utility.yul\":7253:7270   */\n      add\n        /* \"#utility.yul\":7244:7250   */\n      dup5\n        /* \"#utility.yul\":7200:7271   */\n      tag_139\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":7056:7278   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7284:7413   */\n    tag_62:\n        /* \"#utility.yul\":7318:7324   */\n      0x00\n        /* \"#utility.yul\":7345:7365   */\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":7335:7365   */\n      swap1\n      pop\n        /* \"#utility.yul\":7374:7407   */\n      tag_165\n        /* \"#utility.yul\":7402:7406   */\n      dup3\n        /* \"#utility.yul\":7394:7400   */\n      dup3\n        /* \"#utility.yul\":7374:7407   */\n      tag_166\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":7284:7413   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7419:7494   */\n    tag_164:\n        /* \"#utility.yul\":7452:7458   */\n      0x00\n        /* \"#utility.yul\":7485:7487   */\n      0x40\n        /* \"#utility.yul\":7479:7488   */\n      mload\n        /* \"#utility.yul\":7469:7488   */\n      swap1\n      pop\n        /* \"#utility.yul\":7419:7494   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7500:7807   */\n    tag_61:\n        /* \"#utility.yul\":7561:7565   */\n      0x00\n        /* \"#utility.yul\":7651:7669   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7643:7649   */\n      dup3\n        /* \"#utility.yul\":7640:7670   */\n      gt\n        /* \"#utility.yul\":7637:7693   */\n      iszero\n      tag_169\n      jumpi\n        /* \"#utility.yul\":7673:7691   */\n      tag_170\n      tag_171\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":7637:7693   */\n    tag_169:\n        /* \"#utility.yul\":7711:7740   */\n      tag_172\n        /* \"#utility.yul\":7733:7739   */\n      dup3\n        /* \"#utility.yul\":7711:7740   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7703:7740   */\n      swap1\n      pop\n        /* \"#utility.yul\":7795:7799   */\n      0x20\n        /* \"#utility.yul\":7789:7793   */\n      dup2\n        /* \"#utility.yul\":7785:7800   */\n      add\n        /* \"#utility.yul\":7777:7800   */\n      swap1\n      pop\n        /* \"#utility.yul\":7500:7807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7813:7982   */\n    tag_131:\n        /* \"#utility.yul\":7897:7908   */\n      0x00\n        /* \"#utility.yul\":7931:7937   */\n      dup3\n        /* \"#utility.yul\":7926:7929   */\n      dup3\n        /* \"#utility.yul\":7919:7938   */\n      mstore\n        /* \"#utility.yul\":7971:7975   */\n      0x20\n        /* \"#utility.yul\":7966:7969   */\n      dup3\n        /* \"#utility.yul\":7962:7976   */\n      add\n        /* \"#utility.yul\":7947:7976   */\n      swap1\n      pop\n        /* \"#utility.yul\":7813:7982   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7988:8084   */\n    tag_107:\n        /* \"#utility.yul\":8025:8032   */\n      0x00\n        /* \"#utility.yul\":8054:8078   */\n      tag_176\n        /* \"#utility.yul\":8072:8077   */\n      dup3\n        /* \"#utility.yul\":8054:8078   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":8043:8078   */\n      swap1\n      pop\n        /* \"#utility.yul\":7988:8084   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8090:8239   */\n    tag_111:\n        /* \"#utility.yul\":8126:8133   */\n      0x00\n        /* \"#utility.yul\":8166:8232   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8159:8164   */\n      dup3\n        /* \"#utility.yul\":8155:8233   */\n      and\n        /* \"#utility.yul\":8144:8233   */\n      swap1\n      pop\n        /* \"#utility.yul\":8090:8239   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8245:8371   */\n    tag_177:\n        /* \"#utility.yul\":8282:8289   */\n      0x00\n        /* \"#utility.yul\":8322:8364   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":8315:8320   */\n      dup3\n        /* \"#utility.yul\":8311:8365   */\n      and\n        /* \"#utility.yul\":8300:8365   */\n      swap1\n      pop\n        /* \"#utility.yul\":8245:8371   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8377:8454   */\n    tag_142:\n        /* \"#utility.yul\":8414:8421   */\n      0x00\n        /* \"#utility.yul\":8443:8448   */\n      dup2\n        /* \"#utility.yul\":8432:8448   */\n      swap1\n      pop\n        /* \"#utility.yul\":8377:8454   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8460:8600   */\n    tag_115:\n        /* \"#utility.yul\":8524:8533   */\n      0x00\n        /* \"#utility.yul\":8557:8594   */\n      tag_182\n        /* \"#utility.yul\":8588:8593   */\n      dup3\n        /* \"#utility.yul\":8557:8594   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":8544:8594   */\n      swap1\n      pop\n        /* \"#utility.yul\":8460:8600   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8606:8747   */\n    tag_119:\n        /* \"#utility.yul\":8671:8680   */\n      0x00\n        /* \"#utility.yul\":8704:8741   */\n      tag_185\n        /* \"#utility.yul\":8735:8740   */\n      dup3\n        /* \"#utility.yul\":8704:8741   */\n      tag_183\n      jump\t// in\n    tag_185:\n        /* \"#utility.yul\":8691:8741   */\n      swap1\n      pop\n        /* \"#utility.yul\":8606:8747   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8753:8895   */\n    tag_123:\n        /* \"#utility.yul\":8819:8828   */\n      0x00\n        /* \"#utility.yul\":8852:8889   */\n      tag_187\n        /* \"#utility.yul\":8883:8888   */\n      dup3\n        /* \"#utility.yul\":8852:8889   */\n      tag_183\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":8839:8889   */\n      swap1\n      pop\n        /* \"#utility.yul\":8753:8895   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8901:9022   */\n    tag_127:\n        /* \"#utility.yul\":8959:8968   */\n      0x00\n        /* \"#utility.yul\":8992:9016   */\n      tag_189\n        /* \"#utility.yul\":9010:9015   */\n      dup3\n        /* \"#utility.yul\":8992:9016   */\n      tag_142\n      jump\t// in\n    tag_189:\n        /* \"#utility.yul\":8979:9016   */\n      swap1\n      pop\n        /* \"#utility.yul\":8901:9022   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9028:9154   */\n    tag_183:\n        /* \"#utility.yul\":9078:9087   */\n      0x00\n        /* \"#utility.yul\":9111:9148   */\n      tag_191\n        /* \"#utility.yul\":9142:9147   */\n      dup3\n        /* \"#utility.yul\":9111:9148   */\n      tag_192\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":9098:9148   */\n      swap1\n      pop\n        /* \"#utility.yul\":9028:9154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9160:9273   */\n    tag_192:\n        /* \"#utility.yul\":9210:9219   */\n      0x00\n        /* \"#utility.yul\":9243:9267   */\n      tag_194\n        /* \"#utility.yul\":9261:9266   */\n      dup3\n        /* \"#utility.yul\":9243:9267   */\n      tag_177\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":9230:9267   */\n      swap1\n      pop\n        /* \"#utility.yul\":9160:9273   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9279:9433   */\n    tag_67:\n        /* \"#utility.yul\":9363:9369   */\n      dup3\n        /* \"#utility.yul\":9358:9361   */\n      dup2\n        /* \"#utility.yul\":9353:9356   */\n      dup4\n        /* \"#utility.yul\":9340:9370   */\n      calldatacopy\n        /* \"#utility.yul\":9425:9426   */\n      0x00\n        /* \"#utility.yul\":9416:9422   */\n      dup4\n        /* \"#utility.yul\":9411:9414   */\n      dup4\n        /* \"#utility.yul\":9407:9423   */\n      add\n        /* \"#utility.yul\":9400:9427   */\n      mstore\n        /* \"#utility.yul\":9279:9433   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9439:9720   */\n    tag_166:\n        /* \"#utility.yul\":9522:9549   */\n      tag_197\n        /* \"#utility.yul\":9544:9548   */\n      dup3\n        /* \"#utility.yul\":9522:9549   */\n      tag_173\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":9514:9520   */\n      dup2\n        /* \"#utility.yul\":9510:9550   */\n      add\n        /* \"#utility.yul\":9652:9658   */\n      dup2\n        /* \"#utility.yul\":9640:9650   */\n      dup2\n        /* \"#utility.yul\":9637:9659   */\n      lt\n        /* \"#utility.yul\":9616:9634   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":9604:9614   */\n      dup3\n        /* \"#utility.yul\":9601:9635   */\n      gt\n        /* \"#utility.yul\":9598:9660   */\n      or\n        /* \"#utility.yul\":9595:9683   */\n      iszero\n      tag_198\n      jumpi\n        /* \"#utility.yul\":9663:9681   */\n      tag_199\n      tag_171\n      jump\t// in\n    tag_199:\n        /* \"#utility.yul\":9595:9683   */\n    tag_198:\n        /* \"#utility.yul\":9703:9713   */\n      dup1\n        /* \"#utility.yul\":9699:9701   */\n      0x40\n        /* \"#utility.yul\":9692:9714   */\n      mstore\n        /* \"#utility.yul\":9482:9720   */\n      pop\n        /* \"#utility.yul\":9439:9720   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9726:9906   */\n    tag_171:\n        /* \"#utility.yul\":9774:9851   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":9771:9772   */\n      0x00\n        /* \"#utility.yul\":9764:9852   */\n      mstore\n        /* \"#utility.yul\":9871:9875   */\n      0x41\n        /* \"#utility.yul\":9868:9869   */\n      0x04\n        /* \"#utility.yul\":9861:9876   */\n      mstore\n        /* \"#utility.yul\":9895:9899   */\n      0x24\n        /* \"#utility.yul\":9892:9893   */\n      0x00\n        /* \"#utility.yul\":9885:9900   */\n      revert\n        /* \"#utility.yul\":9912:10029   */\n    tag_79:\n        /* \"#utility.yul\":10021:10022   */\n      0x00\n        /* \"#utility.yul\":10018:10019   */\n      dup1\n        /* \"#utility.yul\":10011:10023   */\n      revert\n        /* \"#utility.yul\":10035:10152   */\n    tag_65:\n        /* \"#utility.yul\":10144:10145   */\n      0x00\n        /* \"#utility.yul\":10141:10142   */\n      dup1\n        /* \"#utility.yul\":10134:10146   */\n      revert\n        /* \"#utility.yul\":10158:10275   */\n    tag_98:\n        /* \"#utility.yul\":10267:10268   */\n      0x00\n        /* \"#utility.yul\":10264:10265   */\n      dup1\n        /* \"#utility.yul\":10257:10269   */\n      revert\n        /* \"#utility.yul\":10281:10398   */\n    tag_88:\n        /* \"#utility.yul\":10390:10391   */\n      0x00\n        /* \"#utility.yul\":10387:10388   */\n      dup1\n        /* \"#utility.yul\":10380:10392   */\n      revert\n        /* \"#utility.yul\":10404:10506   */\n    tag_173:\n        /* \"#utility.yul\":10445:10451   */\n      0x00\n        /* \"#utility.yul\":10496:10498   */\n      0x1f\n        /* \"#utility.yul\":10492:10499   */\n      not\n        /* \"#utility.yul\":10487:10489   */\n      0x1f\n        /* \"#utility.yul\":10480:10485   */\n      dup4\n        /* \"#utility.yul\":10476:10490   */\n      add\n        /* \"#utility.yul\":10472:10500   */\n      and\n        /* \"#utility.yul\":10462:10500   */\n      swap1\n      pop\n        /* \"#utility.yul\":10404:10506   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10512:10671   */\n    tag_133:\n        /* \"#utility.yul\":10652:10663   */\n      0x4e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10648:10649   */\n      0x00\n        /* \"#utility.yul\":10640:10646   */\n      dup3\n        /* \"#utility.yul\":10636:10650   */\n      add\n        /* \"#utility.yul\":10629:10664   */\n      mstore\n        /* \"#utility.yul\":10512:10671   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10677:10858   */\n    tag_138:\n        /* \"#utility.yul\":10817:10850   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":10813:10814   */\n      0x00\n        /* \"#utility.yul\":10805:10811   */\n      dup3\n        /* \"#utility.yul\":10801:10815   */\n      add\n        /* \"#utility.yul\":10794:10851   */\n      mstore\n        /* \"#utility.yul\":10677:10858   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10864:10986   */\n    tag_71:\n        /* \"#utility.yul\":10937:10961   */\n      tag_209\n        /* \"#utility.yul\":10955:10960   */\n      dup2\n        /* \"#utility.yul\":10937:10961   */\n      tag_107\n      jump\t// in\n    tag_209:\n        /* \"#utility.yul\":10930:10935   */\n      dup2\n        /* \"#utility.yul\":10927:10962   */\n      eq\n        /* \"#utility.yul\":10917:10980   */\n      tag_210\n      jumpi\n        /* \"#utility.yul\":10976:10977   */\n      0x00\n        /* \"#utility.yul\":10973:10974   */\n      dup1\n        /* \"#utility.yul\":10966:10978   */\n      revert\n        /* \"#utility.yul\":10917:10980   */\n    tag_210:\n        /* \"#utility.yul\":10864:10986   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10992:11114   */\n    tag_84:\n        /* \"#utility.yul\":11065:11089   */\n      tag_212\n        /* \"#utility.yul\":11083:11088   */\n      dup2\n        /* \"#utility.yul\":11065:11089   */\n      tag_142\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":11058:11063   */\n      dup2\n        /* \"#utility.yul\":11055:11090   */\n      eq\n        /* \"#utility.yul\":11045:11108   */\n      tag_213\n      jumpi\n        /* \"#utility.yul\":11104:11105   */\n      0x00\n        /* \"#utility.yul\":11101:11102   */\n      dup1\n        /* \"#utility.yul\":11094:11106   */\n      revert\n        /* \"#utility.yul\":11045:11108   */\n    tag_213:\n        /* \"#utility.yul\":10992:11114   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212200db87c230d97154b218530edc9af852f3ac340517f7b141d73cc43539188918564736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 351,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 415,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 433,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 470,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:5"
															},
															"nodeType": "YulIf",
															"src": "260:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:5",
														"type": ""
													}
												],
												"src": "156:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:5",
														"type": ""
													}
												],
												"src": "669:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:5",
														"type": ""
													}
												],
												"src": "750:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:5",
														"type": ""
													}
												],
												"src": "852:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:5"
															},
															"nodeType": "YulIf",
															"src": "1283:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:5",
														"type": ""
													}
												],
												"src": "1230:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "6080604052600060055534801561001557600080fd5b50604051610ba7380380610ba78339818101604052810190610037919061015f565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101ed565b600081519050610159816101d6565b92915050565b60008060408385031215610176576101756101d1565b5b60006101848582860161014a565b92505060206101958582860161014a565b9150509250929050565b60006101aa826101b1565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101df8161019f565b81146101ea57600080fd5b50565b6109ab806101fc6000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063150b7a021461006757806366bb863b1461009757806380a54001146100b5578063a694fc3a146100d3578063b8e33fb2146100ef578063fead3d6e1461010d575b600080fd5b610081600480360381019061007c91906104bc565b61012b565b60405161008e919061065f565b60405180910390f35b61009f610147565b6040516100ac919061061b565b60405180910390f35b6100bd61016d565b6040516100ca919061067a565b60405180910390f35b6100ed60048036038101906100e8919061053f565b610193565b005b6100f7610394565b6040516101049190610695565b60405180910390f35b6101156103ba565b60405161012291906106b0565b60405180910390f35b6000600160058190555063150b7a0260e01b9050949350505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005414156101d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d0906106eb565b60405180910390fd5b60026000819055503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610253919061070b565b60206040518083038186803b15801561026b57600080fd5b505afa15801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a3919061048f565b73ffffffffffffffffffffffffffffffffffffffff16146102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f0906106cb565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33060016040518363ffffffff1660e01b8152600401610357929190610636565b600060405180830381600087803b15801561037157600080fd5b505af1158015610385573d6000803e3d6000fd5b50505050600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006103f36103ee8461074b565b610726565b90508281526020810184848401111561040f5761040e6108d5565b5b61041a848285610861565b509392505050565b60008135905061043181610947565b92915050565b60008151905061044681610947565b92915050565b600082601f830112610461576104606108d0565b5b81356104718482602086016103e0565b91505092915050565b6000813590506104898161095e565b92915050565b6000602082840312156104a5576104a46108df565b5b60006104b384828501610437565b91505092915050565b600080600080608085870312156104d6576104d56108df565b5b60006104e487828801610422565b94505060206104f587828801610422565b93505060406105068782880161047a565b925050606085013567ffffffffffffffff811115610527576105266108da565b5b6105338782880161044c565b91505092959194509250565b600060208284031215610555576105546108df565b5b60006105638482850161047a565b91505092915050565b6105758161078d565b82525050565b6105848161079f565b82525050565b610593816107f5565b82525050565b6105a281610807565b82525050565b6105b181610819565b82525050565b6105c08161082b565b82525050565b60006105d360098361077c565b91506105de826108f5565b602082019050919050565b60006105f6601f8361077c565b91506106018261091e565b602082019050919050565b610615816107eb565b82525050565b6000602082019050610630600083018461056c565b92915050565b600060408201905061064b600083018561056c565b61065860208301846105b7565b9392505050565b6000602082019050610674600083018461057b565b92915050565b600060208201905061068f600083018461058a565b92915050565b60006020820190506106aa6000830184610599565b92915050565b60006020820190506106c560008301846105a8565b92915050565b600060208201905081810360008301526106e4816105c6565b9050919050565b60006020820190508181036000830152610704816105e9565b9050919050565b6000602082019050610720600083018461060c565b92915050565b6000610730610741565b905061073c8282610870565b919050565b6000604051905090565b600067ffffffffffffffff821115610766576107656108a1565b5b61076f826108e4565b9050602081019050919050565b600082825260208201905092915050565b6000610798826107cb565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108008261083d565b9050919050565b60006108128261083d565b9050919050565b60006108248261083d565b9050919050565b6000610836826107eb565b9050919050565b60006108488261084f565b9050919050565b600061085a826107cb565b9050919050565b82818337600083830152505050565b610879826108e4565b810181811067ffffffffffffffff82111715610898576108976108a1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6109508161078d565b811461095b57600080fd5b50565b610967816107eb565b811461097257600080fd5b5056fea26469706673582212200db87c230d97154b218530edc9af852f3ac340517f7b141d73cc43539188918564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 PUSH1 0x5 SSTORE CALLVALUE DUP1 ISZERO PUSH2 0x15 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBA7 CODESIZE SUB DUP1 PUSH2 0xBA7 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x37 SWAP2 SWAP1 PUSH2 0x15F JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1ED JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x159 DUP2 PUSH2 0x1D6 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x176 JUMPI PUSH2 0x175 PUSH2 0x1D1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x184 DUP6 DUP3 DUP7 ADD PUSH2 0x14A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x195 DUP6 DUP3 DUP7 ADD PUSH2 0x14A JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1AA DUP3 PUSH2 0x1B1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DF DUP2 PUSH2 0x19F JUMP JUMPDEST DUP2 EQ PUSH2 0x1EA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9AB DUP1 PUSH2 0x1FC PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP1 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP1 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP3 SWAP2 SWAP1 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x385 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 PUSH2 0x3EE DUP5 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x40F JUMPI PUSH2 0x40E PUSH2 0x8D5 JUMP JUMPDEST JUMPDEST PUSH2 0x41A DUP5 DUP3 DUP6 PUSH2 0x861 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x947 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x446 DUP2 PUSH2 0x947 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x8D0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x471 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x95E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x437 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D5 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E4 DUP8 DUP3 DUP9 ADD PUSH2 0x422 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4F5 DUP8 DUP3 DUP9 ADD PUSH2 0x422 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x506 DUP8 DUP3 DUP9 ADD PUSH2 0x47A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x527 JUMPI PUSH2 0x526 PUSH2 0x8DA JUMP JUMPDEST JUMPDEST PUSH2 0x533 DUP8 DUP3 DUP9 ADD PUSH2 0x44C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x563 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x575 DUP2 PUSH2 0x78D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x584 DUP2 PUSH2 0x79F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x593 DUP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5A2 DUP2 PUSH2 0x807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5B1 DUP2 PUSH2 0x819 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5C0 DUP2 PUSH2 0x82B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D3 PUSH1 0x9 DUP4 PUSH2 0x77C JUMP JUMPDEST SWAP2 POP PUSH2 0x5DE DUP3 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F6 PUSH1 0x1F DUP4 PUSH2 0x77C JUMP JUMPDEST SWAP2 POP PUSH2 0x601 DUP3 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x7EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x630 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x64B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x658 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x674 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x68F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x58A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6AA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x599 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6E4 DUP2 PUSH2 0x5C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x704 DUP2 PUSH2 0x5E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x720 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x730 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP PUSH2 0x73C DUP3 DUP3 PUSH2 0x870 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x766 JUMPI PUSH2 0x765 PUSH2 0x8A1 JUMP JUMPDEST JUMPDEST PUSH2 0x76F DUP3 PUSH2 0x8E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x812 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x824 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 DUP3 PUSH2 0x84F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85A DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x879 DUP3 PUSH2 0x8E4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x898 JUMPI PUSH2 0x897 PUSH2 0x8A1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x950 DUP2 PUSH2 0x78D JUMP JUMPDEST DUP2 EQ PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x967 DUP2 PUSH2 0x7EB JUMP JUMPDEST DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xB8 PUSH29 0x230D97154B218530EDC9AF852F3AC340517F7B141D73CC435391889185 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:906:4:-:0;;;1026:1;1010:17;;526:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;614:12:4;594:9;;:33;;;;;;;;;;;;;;;;;;668:12;638:18;;:43;;;;;;;;;;;;;;;;;;713:14;692:11;;:36;;;;;;;;;;;;;;;;;;758:12;739:16;;:31;;;;;;;;;;;;;;;;;;526:262;;341:906;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;341:906:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@onERC721Received_355": {
									"entryPoint": 299,
									"id": 355,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@parentNFTAddress_271": {
									"entryPoint": 327,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNFT_266": {
									"entryPoint": 916,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNftFunctions_269": {
									"entryPoint": 954,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentToken_263": {
									"entryPoint": 365,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stake_330": {
									"entryPoint": 403,
									"id": 330,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 992,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1100,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1146,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 1167,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 1212,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1343,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1388,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1403,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 1418,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack": {
									"entryPoint": 1433,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack": {
									"entryPoint": 1448,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_1_by_1_to_t_uint256_fromStack": {
									"entryPoint": 1463,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1563,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1590,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1631,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 1658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed": {
									"entryPoint": 1685,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed": {
									"entryPoint": 1712,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1739,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1830,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1857,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1867,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1933,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1951,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1995,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2027,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 2037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$233_to_t_address": {
									"entryPoint": 2055,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTGame_$258_to_t_address": {
									"entryPoint": 2073,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_1_by_1_to_t_uint256": {
									"entryPoint": 2091,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2109,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2127,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 2145,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2160,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2209,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2256,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2261,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2266,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2271,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2276,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682": {
									"entryPoint": 2293,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 2334,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:11117:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:5"
															},
															"nodeType": "YulIf",
															"src": "249:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:5",
														"type": ""
													}
												],
												"src": "7:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"src": "423:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "631:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "641:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "656:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "650:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "650:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "641:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "699:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "672:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "672:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "672:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "609:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "617:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "625:5:5",
														"type": ""
													}
												],
												"src": "568:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "791:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "840:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "842:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "842:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "842:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "819:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "827:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "815:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "815:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "834:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "811:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "804:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "804:35:5"
															},
															"nodeType": "YulIf",
															"src": "801:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "932:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "959:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "946:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "946:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "936:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "975:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1035:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1043:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "1031:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1031:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1050:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "1058:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "984:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "984:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "975:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "769:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "777:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "785:5:5",
														"type": ""
													}
												],
												"src": "730:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1126:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1136:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1158:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "1145:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1145:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "1136:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1201:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1174:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1174:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1174:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "1104:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1112:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1120:5:5",
														"type": ""
													}
												],
												"src": "1074:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1296:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1342:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1344:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1344:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1344:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1317:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1326:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1313:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1313:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1338:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1309:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1309:32:5"
															},
															"nodeType": "YulIf",
															"src": "1306:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1435:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1450:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1464:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1454:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1479:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1525:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1536:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1521:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1521:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1545:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1489:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1489:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1479:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1266:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1277:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1289:6:5",
														"type": ""
													}
												],
												"src": "1219:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1702:817:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1749:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1751:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1751:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1751:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1723:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1732:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1719:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1719:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1744:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1715:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1715:33:5"
															},
															"nodeType": "YulIf",
															"src": "1712:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1842:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1857:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1871:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1861:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1886:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1921:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1932:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1917:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1917:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1941:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1896:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1896:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1886:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1969:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1984:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1998:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1988:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2014:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2049:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2060:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2045:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2045:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2069:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2024:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2024:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "2014:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2097:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2112:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2126:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2116:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2142:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2177:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2188:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2173:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2173:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2197:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2152:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2152:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "2142:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "2225:287:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2240:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2271:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "2282:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2267:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2267:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "2254:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2254:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2244:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "2333:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "2335:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "2335:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "2335:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "2305:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "2313:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "2302:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2302:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "2299:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2430:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2474:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2485:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2470:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2470:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2494:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2440:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2440:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "2430:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1648:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1659:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1671:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1679:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1687:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1695:6:5",
														"type": ""
													}
												],
												"src": "1576:943:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2591:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2637:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2639:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2639:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2639:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2612:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2621:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2608:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2608:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2633:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2604:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2604:32:5"
															},
															"nodeType": "YulIf",
															"src": "2601:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2730:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2745:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2759:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2749:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2774:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2809:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2820:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2805:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2805:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2829:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2784:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2784:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2774:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2561:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2572:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2584:6:5",
														"type": ""
													}
												],
												"src": "2525:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2925:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2942:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2965:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2947:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2947:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2935:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2935:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2935:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2913:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2920:3:5",
														"type": ""
													}
												],
												"src": "2860:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3047:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3064:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3086:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "3069:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3069:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3057:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3057:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3057:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3035:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3042:3:5",
														"type": ""
													}
												],
												"src": "2984:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3184:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3201:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3251:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3206:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3206:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3194:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3194:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3194:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3172:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3179:3:5",
														"type": ""
													}
												],
												"src": "3105:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3350:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3367:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3418:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$233_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3372:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3372:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3360:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3360:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3360:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3338:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3345:3:5",
														"type": ""
													}
												],
												"src": "3270:161:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3518:82:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3535:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3587:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTGame_$258_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3540:46:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3540:53:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3528:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3528:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3528:66:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3506:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3513:3:5",
														"type": ""
													}
												],
												"src": "3437:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3679:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3696:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3740:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_1_by_1_to_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3701:38:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3701:45:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3689:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3689:58:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3689:58:5"
														}
													]
												},
												"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3667:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3674:3:5",
														"type": ""
													}
												],
												"src": "3606:147:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3905:219:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3915:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3981:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3986:1:5",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3922:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3922:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3915:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4086:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																	"nodeType": "YulIdentifier",
																	"src": "3997:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3997:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3997:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4099:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4110:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4115:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4106:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4106:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4099:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3893:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3901:3:5",
														"type": ""
													}
												],
												"src": "3759:365:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4276:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4286:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4352:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4357:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4293:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4293:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4458:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "4369:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4369:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4369:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4471:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4482:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4487:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4478:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4478:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4471:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4264:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4272:3:5",
														"type": ""
													}
												],
												"src": "4130:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4567:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4584:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4607:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4589:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4589:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4577:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4577:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4577:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4555:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4562:3:5",
														"type": ""
													}
												],
												"src": "4502:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4724:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4734:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4746:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4757:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4742:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4742:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4734:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4814:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4827:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4838:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4823:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4823:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4770:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4770:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4770:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4696:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4708:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4719:4:5",
														"type": ""
													}
												],
												"src": "4626:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4988:214:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4998:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5010:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5021:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5006:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5006:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4998:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5078:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5091:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5102:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5087:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5087:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5034:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5034:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5034:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5167:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5180:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5191:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5176:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5176:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_1_by_1_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5115:51:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5115:80:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5115:80:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4952:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4964:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4972:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4983:4:5",
														"type": ""
													}
												],
												"src": "4854:348:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5304:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5314:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5326:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5337:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5322:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5322:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5314:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5392:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5405:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5416:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5401:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5401:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5350:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5350:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5350:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5276:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5288:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5299:4:5",
														"type": ""
													}
												],
												"src": "5208:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5544:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5554:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5566:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5577:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5562:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5562:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5554:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5648:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5661:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5672:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5657:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5657:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5590:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5590:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5590:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5516:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5528:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5539:4:5",
														"type": ""
													}
												],
												"src": "5432:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5801:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5811:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5823:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5834:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5819:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5819:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5811:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5906:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5919:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5930:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5915:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5915:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5847:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5847:86:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5847:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5773:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5785:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5796:4:5",
														"type": ""
													}
												],
												"src": "5688:252:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6060:140:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6070:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6082:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6093:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6078:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6078:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6070:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6166:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6179:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6190:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6175:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6175:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6106:59:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6106:87:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6106:87:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6032:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6044:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6055:4:5",
														"type": ""
													}
												],
												"src": "5946:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6377:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6387:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6399:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6410:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6395:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6395:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6387:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6434:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6445:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6430:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6430:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6453:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6459:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6449:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6449:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6423:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6423:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6423:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6479:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6613:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6487:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6487:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6479:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6357:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6372:4:5",
														"type": ""
													}
												],
												"src": "6206:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6802:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6812:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6824:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6835:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6820:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6820:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6812:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6859:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6870:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6855:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6855:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6878:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6884:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6874:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6874:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6848:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6848:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6848:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6904:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7038:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6912:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6912:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6904:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6782:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6797:4:5",
														"type": ""
													}
												],
												"src": "6631:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7154:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7164:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7176:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7187:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7172:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7172:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7164:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "7244:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7257:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7268:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7253:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7253:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7200:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7200:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7200:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7126:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "7138:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7149:4:5",
														"type": ""
													}
												],
												"src": "7056:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7325:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7335:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "7345:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7345:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7335:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7394:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7402:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "7374:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7374:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7374:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7309:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7318:6:5",
														"type": ""
													}
												],
												"src": "7284:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7459:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7469:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7485:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7479:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7479:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7469:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7452:6:5",
														"type": ""
													}
												],
												"src": "7419:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7566:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7671:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7673:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7673:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7673:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7643:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7651:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "7640:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7640:30:5"
															},
															"nodeType": "YulIf",
															"src": "7637:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7703:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7733:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "7711:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7711:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7703:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "7777:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "7789:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7795:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7785:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7785:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "7777:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7550:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "7561:4:5",
														"type": ""
													}
												],
												"src": "7500:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7909:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7926:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7931:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7919:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7919:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7919:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7947:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7966:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7971:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7962:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7962:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7947:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7881:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7886:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7897:11:5",
														"type": ""
													}
												],
												"src": "7813:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8033:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8043:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8072:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8054:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8054:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8043:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8015:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8025:7:5",
														"type": ""
													}
												],
												"src": "7988:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8134:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8144:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8159:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8166:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8155:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8155:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8144:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8116:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8126:7:5",
														"type": ""
													}
												],
												"src": "8090:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8290:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8300:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8315:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8322:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8311:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8311:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8300:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8272:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8282:7:5",
														"type": ""
													}
												],
												"src": "8245:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8422:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8432:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "8443:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "8432:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8404:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "8414:7:5",
														"type": ""
													}
												],
												"src": "8377:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8534:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8544:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8588:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8557:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8557:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8544:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8514:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8524:9:5",
														"type": ""
													}
												],
												"src": "8460:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8681:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8691:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8735:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8704:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8704:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8691:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$233_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8661:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8671:9:5",
														"type": ""
													}
												],
												"src": "8606:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8829:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8839:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8883:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "8852:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8852:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8839:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTGame_$258_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8809:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8819:9:5",
														"type": ""
													}
												],
												"src": "8753:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8969:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8979:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9010:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "8992:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8992:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8979:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_1_by_1_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8949:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8959:9:5",
														"type": ""
													}
												],
												"src": "8901:121:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9088:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9098:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9142:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9111:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9111:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9098:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9068:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9078:9:5",
														"type": ""
													}
												],
												"src": "9028:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9220:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9230:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9261:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9243:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9243:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "9230:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9200:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9210:9:5",
														"type": ""
													}
												],
												"src": "9160:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9330:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "9353:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "9358:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "9363:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "9340:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9340:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9340:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "9411:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "9416:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9407:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9407:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9425:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9400:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9400:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9400:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "9312:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "9317:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "9322:6:5",
														"type": ""
													}
												],
												"src": "9279:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9482:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "9492:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "9514:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "9544:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "9522:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9522:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9510:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9510:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "9496:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9661:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "9663:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9663:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9663:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9604:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9616:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "9601:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9601:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "9640:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9652:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "9637:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9637:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "9598:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9598:62:5"
															},
															"nodeType": "YulIf",
															"src": "9595:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9699:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "9703:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9692:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9692:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9692:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9468:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "9476:4:5",
														"type": ""
													}
												],
												"src": "9439:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9754:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9771:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9774:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9764:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9764:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9764:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9868:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9871:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9861:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9861:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9861:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9892:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9895:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9885:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9885:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9885:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "9726:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10001:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10018:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10021:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10011:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10011:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10011:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "9912:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10124:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10141:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10144:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10134:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10134:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10134:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "10035:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10247:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10264:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10267:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10257:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10257:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10257:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10158:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10370:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10387:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10390:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10380:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10380:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10380:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "10281:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10452:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10462:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10480:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10487:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10476:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10476:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10496:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "10492:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10492:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "10472:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10472:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "10462:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10435:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "10445:6:5",
														"type": ""
													}
												],
												"src": "10404:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10618:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10640:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10648:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10636:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10636:14:5"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10652:11:5",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10629:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10629:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10629:35:5"
														}
													]
												},
												"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10610:6:5",
														"type": ""
													}
												],
												"src": "10512:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10783:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "10805:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "10813:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "10801:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10801:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "10817:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10794:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10794:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10794:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "10775:6:5",
														"type": ""
													}
												],
												"src": "10677:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10907:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10964:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10973:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10976:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10966:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10966:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10966:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10930:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10955:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "10937:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10937:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10927:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10927:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10920:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10920:43:5"
															},
															"nodeType": "YulIf",
															"src": "10917:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10900:5:5",
														"type": ""
													}
												],
												"src": "10864:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11035:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11092:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11101:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "11104:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "11094:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "11094:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "11094:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11058:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11083:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "11065:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11065:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11055:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11055:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11048:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11048:43:5"
															},
															"nodeType": "YulIf",
															"src": "11045:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11028:5:5",
														"type": ""
													}
												],
												"src": "10992:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$233_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTGame_$258_to_t_address(value))\n    }\n\n    function abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_1_by_1_to_t_uint256(value))\n    }\n\n    function abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_rational_1_by_1__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_rational_1_by_1_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$233_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_INFTGame_$258_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_rational_1_by_1_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063150b7a021461006757806366bb863b1461009757806380a54001146100b5578063a694fc3a146100d3578063b8e33fb2146100ef578063fead3d6e1461010d575b600080fd5b610081600480360381019061007c91906104bc565b61012b565b60405161008e919061065f565b60405180910390f35b61009f610147565b6040516100ac919061061b565b60405180910390f35b6100bd61016d565b6040516100ca919061067a565b60405180910390f35b6100ed60048036038101906100e8919061053f565b610193565b005b6100f7610394565b6040516101049190610695565b60405180910390f35b6101156103ba565b60405161012291906106b0565b60405180910390f35b6000600160058190555063150b7a0260e01b9050949350505050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260005414156101d9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d0906106eb565b60405180910390fd5b60026000819055503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610253919061070b565b60206040518083038186803b15801561026b57600080fd5b505afa15801561027f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102a3919061048f565b73ffffffffffffffffffffffffffffffffffffffff16146102f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102f0906106cb565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663095ea7b33060016040518363ffffffff1660e01b8152600401610357929190610636565b600060405180830381600087803b15801561037157600080fd5b505af1158015610385573d6000803e3d6000fd5b50505050600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006103f36103ee8461074b565b610726565b90508281526020810184848401111561040f5761040e6108d5565b5b61041a848285610861565b509392505050565b60008135905061043181610947565b92915050565b60008151905061044681610947565b92915050565b600082601f830112610461576104606108d0565b5b81356104718482602086016103e0565b91505092915050565b6000813590506104898161095e565b92915050565b6000602082840312156104a5576104a46108df565b5b60006104b384828501610437565b91505092915050565b600080600080608085870312156104d6576104d56108df565b5b60006104e487828801610422565b94505060206104f587828801610422565b93505060406105068782880161047a565b925050606085013567ffffffffffffffff811115610527576105266108da565b5b6105338782880161044c565b91505092959194509250565b600060208284031215610555576105546108df565b5b60006105638482850161047a565b91505092915050565b6105758161078d565b82525050565b6105848161079f565b82525050565b610593816107f5565b82525050565b6105a281610807565b82525050565b6105b181610819565b82525050565b6105c08161082b565b82525050565b60006105d360098361077c565b91506105de826108f5565b602082019050919050565b60006105f6601f8361077c565b91506106018261091e565b602082019050919050565b610615816107eb565b82525050565b6000602082019050610630600083018461056c565b92915050565b600060408201905061064b600083018561056c565b61065860208301846105b7565b9392505050565b6000602082019050610674600083018461057b565b92915050565b600060208201905061068f600083018461058a565b92915050565b60006020820190506106aa6000830184610599565b92915050565b60006020820190506106c560008301846105a8565b92915050565b600060208201905081810360008301526106e4816105c6565b9050919050565b60006020820190508181036000830152610704816105e9565b9050919050565b6000602082019050610720600083018461060c565b92915050565b6000610730610741565b905061073c8282610870565b919050565b6000604051905090565b600067ffffffffffffffff821115610766576107656108a1565b5b61076f826108e4565b9050602081019050919050565b600082825260208201905092915050565b6000610798826107cb565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108008261083d565b9050919050565b60006108128261083d565b9050919050565b60006108248261083d565b9050919050565b6000610836826107eb565b9050919050565b60006108488261084f565b9050919050565b600061085a826107cb565b9050919050565b82818337600083830152505050565b610879826108e4565b810181811067ffffffffffffffff82111715610898576108976108a1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6109508161078d565b811461095b57600080fd5b50565b610967816107eb565b811461097257600080fd5b5056fea26469706673582212200db87c230d97154b218530edc9af852f3ac340517f7b141d73cc43539188918564736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0xB5 JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0xD3 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x10D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x4BC JUMP JUMPDEST PUSH2 0x12B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x65F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x9F PUSH2 0x147 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x61B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xBD PUSH2 0x16D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xCA SWAP2 SWAP1 PUSH2 0x67A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xED PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE8 SWAP2 SWAP1 PUSH2 0x53F JUMP JUMPDEST PUSH2 0x193 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xF7 PUSH2 0x394 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x104 SWAP2 SWAP1 PUSH2 0x695 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x115 PUSH2 0x3BA JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x122 SWAP2 SWAP1 PUSH2 0x6B0 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x5 DUP2 SWAP1 SSTORE POP PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x1D9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D0 SWAP1 PUSH2 0x6EB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x253 SWAP2 SWAP1 PUSH2 0x70B JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x26B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x27F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2A3 SWAP2 SWAP1 PUSH2 0x48F JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2F9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2F0 SWAP1 PUSH2 0x6CB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x95EA7B3 ADDRESS PUSH1 0x1 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x357 SWAP3 SWAP2 SWAP1 PUSH2 0x636 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x371 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x385 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F3 PUSH2 0x3EE DUP5 PUSH2 0x74B JUMP JUMPDEST PUSH2 0x726 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x40F JUMPI PUSH2 0x40E PUSH2 0x8D5 JUMP JUMPDEST JUMPDEST PUSH2 0x41A DUP5 DUP3 DUP6 PUSH2 0x861 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x431 DUP2 PUSH2 0x947 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x446 DUP2 PUSH2 0x947 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x461 JUMPI PUSH2 0x460 PUSH2 0x8D0 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x471 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E0 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x489 DUP2 PUSH2 0x95E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4A5 JUMPI PUSH2 0x4A4 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4B3 DUP5 DUP3 DUP6 ADD PUSH2 0x437 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4D6 JUMPI PUSH2 0x4D5 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E4 DUP8 DUP3 DUP9 ADD PUSH2 0x422 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4F5 DUP8 DUP3 DUP9 ADD PUSH2 0x422 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x506 DUP8 DUP3 DUP9 ADD PUSH2 0x47A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x527 JUMPI PUSH2 0x526 PUSH2 0x8DA JUMP JUMPDEST JUMPDEST PUSH2 0x533 DUP8 DUP3 DUP9 ADD PUSH2 0x44C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x555 JUMPI PUSH2 0x554 PUSH2 0x8DF JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x563 DUP5 DUP3 DUP6 ADD PUSH2 0x47A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x575 DUP2 PUSH2 0x78D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x584 DUP2 PUSH2 0x79F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x593 DUP2 PUSH2 0x7F5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5A2 DUP2 PUSH2 0x807 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5B1 DUP2 PUSH2 0x819 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5C0 DUP2 PUSH2 0x82B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5D3 PUSH1 0x9 DUP4 PUSH2 0x77C JUMP JUMPDEST SWAP2 POP PUSH2 0x5DE DUP3 PUSH2 0x8F5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5F6 PUSH1 0x1F DUP4 PUSH2 0x77C JUMP JUMPDEST SWAP2 POP PUSH2 0x601 DUP3 PUSH2 0x91E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x615 DUP2 PUSH2 0x7EB JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x630 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x64B PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x56C JUMP JUMPDEST PUSH2 0x658 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5B7 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x674 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57B JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x68F PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x58A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6AA PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x599 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x6C5 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5A8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6E4 DUP2 PUSH2 0x5C6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x704 DUP2 PUSH2 0x5E9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x720 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x60C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x730 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP PUSH2 0x73C DUP3 DUP3 PUSH2 0x870 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x766 JUMPI PUSH2 0x765 PUSH2 0x8A1 JUMP JUMPDEST JUMPDEST PUSH2 0x76F DUP3 PUSH2 0x8E4 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x798 DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x800 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x812 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x824 DUP3 PUSH2 0x83D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x836 DUP3 PUSH2 0x7EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x848 DUP3 PUSH2 0x84F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x85A DUP3 PUSH2 0x7CB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x879 DUP3 PUSH2 0x8E4 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x898 JUMPI PUSH2 0x897 PUSH2 0x8A1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x950 DUP2 PUSH2 0x78D JUMP JUMPDEST DUP2 EQ PUSH2 0x95B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x967 DUP2 PUSH2 0x7EB JUMP JUMPDEST DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xD 0xB8 PUSH29 0x230D97154B218530EDC9AF852F3AC340517F7B141D73CC435391889185 PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:906:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1034:175;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;796:202;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;416:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1034:175;1125:6;1152:1;1144:5;:9;;;;1171:30;;;1164:37;;1034:175;;;;;;:::o;488:31::-;;;;;;;;;;;;;:::o;384:25::-;;;;;;;;;;;;;:::o;796:202::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;901:10:4::1;870:41;;:9;;;;;;;;;;;:17;;;888:8;870:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;862:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;936:9;;;;;;;;;;;:17;;;962:4;969:1;936:35;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1701:1:0::0;2628:7;:22;;;;796:202:4;:::o;416:24::-;;;;;;;;;;;;;:::o;447:34::-;;;;;;;;;;;;;:::o;7:410:5:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;568:143::-;625:5;656:6;650:13;641:22;;672:33;699:5;672:33;:::i;:::-;568:143;;;;:::o;730:338::-;785:5;834:3;827:4;819:6;815:17;811:27;801:122;;842:79;;:::i;:::-;801:122;959:6;946:20;984:78;1058:3;1050:6;1043:4;1035:6;1031:17;984:78;:::i;:::-;975:87;;791:277;730:338;;;;:::o;1074:139::-;1120:5;1158:6;1145:20;1136:29;;1174:33;1201:5;1174:33;:::i;:::-;1074:139;;;;:::o;1219:351::-;1289:6;1338:2;1326:9;1317:7;1313:23;1309:32;1306:119;;;1344:79;;:::i;:::-;1306:119;1464:1;1489:64;1545:7;1536:6;1525:9;1521:22;1489:64;:::i;:::-;1479:74;;1435:128;1219:351;;;;:::o;1576:943::-;1671:6;1679;1687;1695;1744:3;1732:9;1723:7;1719:23;1715:33;1712:120;;;1751:79;;:::i;:::-;1712:120;1871:1;1896:53;1941:7;1932:6;1921:9;1917:22;1896:53;:::i;:::-;1886:63;;1842:117;1998:2;2024:53;2069:7;2060:6;2049:9;2045:22;2024:53;:::i;:::-;2014:63;;1969:118;2126:2;2152:53;2197:7;2188:6;2177:9;2173:22;2152:53;:::i;:::-;2142:63;;2097:118;2282:2;2271:9;2267:18;2254:32;2313:18;2305:6;2302:30;2299:117;;;2335:79;;:::i;:::-;2299:117;2440:62;2494:7;2485:6;2474:9;2470:22;2440:62;:::i;:::-;2430:72;;2225:287;1576:943;;;;;;;:::o;2525:329::-;2584:6;2633:2;2621:9;2612:7;2608:23;2604:32;2601:119;;;2639:79;;:::i;:::-;2601:119;2759:1;2784:53;2829:7;2820:6;2809:9;2805:22;2784:53;:::i;:::-;2774:63;;2730:117;2525:329;;;;:::o;2860:118::-;2947:24;2965:5;2947:24;:::i;:::-;2942:3;2935:37;2860:118;;:::o;2984:115::-;3069:23;3086:5;3069:23;:::i;:::-;3064:3;3057:36;2984:115;;:::o;3105:159::-;3206:51;3251:5;3206:51;:::i;:::-;3201:3;3194:64;3105:159;;:::o;3270:161::-;3372:52;3418:5;3372:52;:::i;:::-;3367:3;3360:65;3270:161;;:::o;3437:163::-;3540:53;3587:5;3540:53;:::i;:::-;3535:3;3528:66;3437:163;;:::o;3606:147::-;3701:45;3740:5;3701:45;:::i;:::-;3696:3;3689:58;3606:147;;:::o;3759:365::-;3901:3;3922:66;3986:1;3981:3;3922:66;:::i;:::-;3915:73;;3997:93;4086:3;3997:93;:::i;:::-;4115:2;4110:3;4106:12;4099:19;;3759:365;;;:::o;4130:366::-;4272:3;4293:67;4357:2;4352:3;4293:67;:::i;:::-;4286:74;;4369:93;4458:3;4369:93;:::i;:::-;4487:2;4482:3;4478:12;4471:19;;4130:366;;;:::o;4502:118::-;4589:24;4607:5;4589:24;:::i;:::-;4584:3;4577:37;4502:118;;:::o;4626:222::-;4719:4;4757:2;4746:9;4742:18;4734:26;;4770:71;4838:1;4827:9;4823:17;4814:6;4770:71;:::i;:::-;4626:222;;;;:::o;4854:348::-;4983:4;5021:2;5010:9;5006:18;4998:26;;5034:71;5102:1;5091:9;5087:17;5078:6;5034:71;:::i;:::-;5115:80;5191:2;5180:9;5176:18;5167:6;5115:80;:::i;:::-;4854:348;;;;;:::o;5208:218::-;5299:4;5337:2;5326:9;5322:18;5314:26;;5350:69;5416:1;5405:9;5401:17;5392:6;5350:69;:::i;:::-;5208:218;;;;:::o;5432:250::-;5539:4;5577:2;5566:9;5562:18;5554:26;;5590:85;5672:1;5661:9;5657:17;5648:6;5590:85;:::i;:::-;5432:250;;;;:::o;5688:252::-;5796:4;5834:2;5823:9;5819:18;5811:26;;5847:86;5930:1;5919:9;5915:17;5906:6;5847:86;:::i;:::-;5688:252;;;;:::o;5946:254::-;6055:4;6093:2;6082:9;6078:18;6070:26;;6106:87;6190:1;6179:9;6175:17;6166:6;6106:87;:::i;:::-;5946:254;;;;:::o;6206:419::-;6372:4;6410:2;6399:9;6395:18;6387:26;;6459:9;6453:4;6449:20;6445:1;6434:9;6430:17;6423:47;6487:131;6613:4;6487:131;:::i;:::-;6479:139;;6206:419;;;:::o;6631:::-;6797:4;6835:2;6824:9;6820:18;6812:26;;6884:9;6878:4;6874:20;6870:1;6859:9;6855:17;6848:47;6912:131;7038:4;6912:131;:::i;:::-;6904:139;;6631:419;;;:::o;7056:222::-;7149:4;7187:2;7176:9;7172:18;7164:26;;7200:71;7268:1;7257:9;7253:17;7244:6;7200:71;:::i;:::-;7056:222;;;;:::o;7284:129::-;7318:6;7345:20;;:::i;:::-;7335:30;;7374:33;7402:4;7394:6;7374:33;:::i;:::-;7284:129;;;:::o;7419:75::-;7452:6;7485:2;7479:9;7469:19;;7419:75;:::o;7500:307::-;7561:4;7651:18;7643:6;7640:30;7637:56;;;7673:18;;:::i;:::-;7637:56;7711:29;7733:6;7711:29;:::i;:::-;7703:37;;7795:4;7789;7785:15;7777:23;;7500:307;;;:::o;7813:169::-;7897:11;7931:6;7926:3;7919:19;7971:4;7966:3;7962:14;7947:29;;7813:169;;;;:::o;7988:96::-;8025:7;8054:24;8072:5;8054:24;:::i;:::-;8043:35;;7988:96;;;:::o;8090:149::-;8126:7;8166:66;8159:5;8155:78;8144:89;;8090:149;;;:::o;8245:126::-;8282:7;8322:42;8315:5;8311:54;8300:65;;8245:126;;;:::o;8377:77::-;8414:7;8443:5;8432:16;;8377:77;;;:::o;8460:140::-;8524:9;8557:37;8588:5;8557:37;:::i;:::-;8544:50;;8460:140;;;:::o;8606:141::-;8671:9;8704:37;8735:5;8704:37;:::i;:::-;8691:50;;8606:141;;;:::o;8753:142::-;8819:9;8852:37;8883:5;8852:37;:::i;:::-;8839:50;;8753:142;;;:::o;8901:121::-;8959:9;8992:24;9010:5;8992:24;:::i;:::-;8979:37;;8901:121;;;:::o;9028:126::-;9078:9;9111:37;9142:5;9111:37;:::i;:::-;9098:50;;9028:126;;;:::o;9160:113::-;9210:9;9243:24;9261:5;9243:24;:::i;:::-;9230:37;;9160:113;;;:::o;9279:154::-;9363:6;9358:3;9353;9340:30;9425:1;9416:6;9411:3;9407:16;9400:27;9279:154;;;:::o;9439:281::-;9522:27;9544:4;9522:27;:::i;:::-;9514:6;9510:40;9652:6;9640:10;9637:22;9616:18;9604:10;9601:34;9598:62;9595:88;;;9663:18;;:::i;:::-;9595:88;9703:10;9699:2;9692:22;9482:238;9439:281;;:::o;9726:180::-;9774:77;9771:1;9764:88;9871:4;9868:1;9861:15;9895:4;9892:1;9885:15;9912:117;10021:1;10018;10011:12;10035:117;10144:1;10141;10134:12;10158:117;10267:1;10264;10257:12;10281:117;10390:1;10387;10380:12;10404:102;10445:6;10496:2;10492:7;10487:2;10480:5;10476:14;10472:28;10462:38;;10404:102;;;:::o;10512:159::-;10652:11;10648:1;10640:6;10636:14;10629:35;10512:159;:::o;10677:181::-;10817:33;10813:1;10805:6;10801:14;10794:57;10677:181;:::o;10864:122::-;10937:24;10955:5;10937:24;:::i;:::-;10930:5;10927:35;10917:63;;10976:1;10973;10966:12;10917:63;10864:122;:::o;10992:::-;11065:24;11083:5;11065:24;:::i;:::-;11058:5;11055:35;11045:63;;11104:1;11101;11094:12;11045:63;10992:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "495000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"parentNFT()": "2666",
								"parentNFTAddress()": "2514",
								"parentNftFunctions()": "2688",
								"parentToken()": "2622",
								"stake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 1026,
									"end": 1027,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 1010,
									"end": 1027,
									"name": "PUSH",
									"source": 4,
									"value": "5"
								},
								{
									"begin": 1010,
									"end": 1027,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 668,
									"end": 680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 713,
									"end": 727,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 758,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 1247,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212200db87c230d97154b218530edc9af852f3ac340517f7b141d73cc43539188918564736f6c63430008070033",
									".code": [
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "66BB863B"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "80A54001"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "A694FC3A"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "B8E33FB2"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "FEAD3D6E"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1247,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1131,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1152,
											"end": 1153,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1144,
											"end": 1149,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1144,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 1171,
											"end": 1201,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1171,
											"end": 1201,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1164,
											"end": 1201,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1034,
											"end": 1209,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 796,
											"end": 998,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "38"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 901,
											"end": 911,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 870,
											"end": 911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 870,
											"end": 879,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 879,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 887,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 887,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 887,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 888,
											"end": 896,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 870,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 870,
											"end": 897,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 870,
											"end": 911,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 870,
											"end": 911,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 870,
											"end": 911,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 862,
											"end": 925,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 862,
											"end": 925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 945,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 936,
											"end": 945,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 945,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 945,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 936,
											"end": 945,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 945,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 945,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 936,
											"end": 945,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 945,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 936,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 936,
											"end": 953,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 936,
											"end": 953,
											"name": "PUSH",
											"source": 4,
											"value": "95EA7B3"
										},
										{
											"begin": 962,
											"end": 966,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 969,
											"end": 970,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "tag",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 936,
											"end": 971,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 936,
											"end": 971,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 796,
											"end": 998,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 998,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 568,
											"end": 711,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 568,
											"end": 711,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 625,
											"end": 630,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 656,
											"end": 662,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 650,
											"end": 663,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 641,
											"end": 663,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 641,
											"end": 663,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 672,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 699,
											"end": 704,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 672,
											"end": 705,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 672,
											"end": 705,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 672,
											"end": 705,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 672,
											"end": 705,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 568,
											"end": 711,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 568,
											"end": 711,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 568,
											"end": 711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 711,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 568,
											"end": 711,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 730,
											"end": 1068,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 730,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 785,
											"end": 790,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 834,
											"end": 837,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 827,
											"end": 831,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 819,
											"end": 825,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 815,
											"end": 832,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 811,
											"end": 838,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 801,
											"end": 923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 801,
											"end": 923,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 842,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 842,
											"end": 921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 842,
											"end": 921,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 842,
											"end": 921,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 842,
											"end": 921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 801,
											"end": 923,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 801,
											"end": 923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 959,
											"end": 965,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 946,
											"end": 966,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1058,
											"end": 1061,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1050,
											"end": 1056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1043,
											"end": 1047,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1035,
											"end": 1041,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1031,
											"end": 1048,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 984,
											"end": 1062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 984,
											"end": 1062,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 984,
											"end": 1062,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 984,
											"end": 1062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 975,
											"end": 1062,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 975,
											"end": 1062,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 791,
											"end": 1068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 730,
											"end": 1068,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 730,
											"end": 1068,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 730,
											"end": 1068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 730,
											"end": 1068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 730,
											"end": 1068,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1074,
											"end": 1213,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1074,
											"end": 1213,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1158,
											"end": 1164,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1145,
											"end": 1165,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1136,
											"end": 1165,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1201,
											"end": 1206,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1207,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1174,
											"end": 1207,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1174,
											"end": 1207,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1174,
											"end": 1207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1213,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1213,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1213,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1074,
											"end": 1213,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1219,
											"end": 1570,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 1219,
											"end": 1570,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1289,
											"end": 1295,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1338,
											"end": 1340,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1326,
											"end": 1335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1317,
											"end": 1324,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1313,
											"end": 1336,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1309,
											"end": 1341,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1425,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1425,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1306,
											"end": 1425,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1344,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1344,
											"end": 1423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1344,
											"end": 1423,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1344,
											"end": 1423,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1344,
											"end": 1423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1306,
											"end": 1425,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1306,
											"end": 1425,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1464,
											"end": 1465,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1489,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1545,
											"end": 1552,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1536,
											"end": 1542,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1534,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1521,
											"end": 1543,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1489,
											"end": 1553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1489,
											"end": 1553,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1489,
											"end": 1553,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1489,
											"end": 1553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1553,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1479,
											"end": 1553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1435,
											"end": 1563,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1570,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1570,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1570,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1219,
											"end": 1570,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1677,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1679,
											"end": 1685,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1687,
											"end": 1693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1701,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1744,
											"end": 1747,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1732,
											"end": 1741,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1730,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1719,
											"end": 1742,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1715,
											"end": 1748,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1832,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1712,
											"end": 1832,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1751,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1751,
											"end": 1830,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1751,
											"end": 1830,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1751,
											"end": 1830,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 1751,
											"end": 1830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1712,
											"end": 1832,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 1712,
											"end": 1832,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1871,
											"end": 1872,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1941,
											"end": 1948,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1932,
											"end": 1938,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1930,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1917,
											"end": 1939,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 1896,
											"end": 1949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1949,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1886,
											"end": 1949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1842,
											"end": 1959,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1998,
											"end": 2000,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2024,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2069,
											"end": 2076,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2060,
											"end": 2066,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2049,
											"end": 2058,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2045,
											"end": 2067,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2024,
											"end": 2077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 2024,
											"end": 2077,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2024,
											"end": 2077,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2024,
											"end": 2077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 2014,
											"end": 2077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1969,
											"end": 2087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2126,
											"end": 2128,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 2152,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2197,
											"end": 2204,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2188,
											"end": 2194,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2177,
											"end": 2186,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2173,
											"end": 2195,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2152,
											"end": 2205,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2152,
											"end": 2205,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2152,
											"end": 2205,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2152,
											"end": 2205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2142,
											"end": 2205,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2142,
											"end": 2205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2097,
											"end": 2215,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2284,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2271,
											"end": 2280,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2267,
											"end": 2285,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2254,
											"end": 2286,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 2313,
											"end": 2331,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2305,
											"end": 2311,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2302,
											"end": 2332,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2416,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2299,
											"end": 2416,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2335,
											"end": 2414,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2416,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2299,
											"end": 2416,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2494,
											"end": 2501,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 2485,
											"end": 2491,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2474,
											"end": 2483,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2470,
											"end": 2492,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2440,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2440,
											"end": 2502,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2440,
											"end": 2502,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2440,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2430,
											"end": 2502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2225,
											"end": 2512,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1576,
											"end": 2519,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2525,
											"end": 2854,
											"name": "tag",
											"source": 5,
											"value": "25"
										},
										{
											"begin": 2525,
											"end": 2854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2584,
											"end": 2590,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2633,
											"end": 2635,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2621,
											"end": 2630,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2612,
											"end": 2619,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2608,
											"end": 2631,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2604,
											"end": 2636,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2720,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2720,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2601,
											"end": 2720,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2639,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2639,
											"end": 2718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2639,
											"end": 2718,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2639,
											"end": 2718,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2639,
											"end": 2718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2601,
											"end": 2720,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2601,
											"end": 2720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2759,
											"end": 2760,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2784,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2829,
											"end": 2836,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2820,
											"end": 2826,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2809,
											"end": 2818,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2805,
											"end": 2827,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2784,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2784,
											"end": 2837,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2784,
											"end": 2837,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 2784,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2837,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2730,
											"end": 2847,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2854,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2854,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2525,
											"end": 2854,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2860,
											"end": 2978,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2860,
											"end": 2978,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2965,
											"end": 2970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2947,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 2947,
											"end": 2971,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2947,
											"end": 2971,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2947,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2942,
											"end": 2945,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2935,
											"end": 2972,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 2978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 2978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2860,
											"end": 2978,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2984,
											"end": 3099,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2984,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3086,
											"end": 3091,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3069,
											"end": 3092,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3069,
											"end": 3092,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3069,
											"end": 3092,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3069,
											"end": 3092,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3064,
											"end": 3067,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3057,
											"end": 3093,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2984,
											"end": 3099,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3105,
											"end": 3264,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3105,
											"end": 3264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3251,
											"end": 3256,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3206,
											"end": 3257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3206,
											"end": 3257,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3206,
											"end": 3257,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3206,
											"end": 3257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3201,
											"end": 3204,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3194,
											"end": 3258,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3105,
											"end": 3264,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3270,
											"end": 3431,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3270,
											"end": 3431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3418,
											"end": 3423,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3372,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3372,
											"end": 3424,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3372,
											"end": 3424,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3372,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3367,
											"end": 3370,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3360,
											"end": 3425,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3270,
											"end": 3431,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3437,
											"end": 3600,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3437,
											"end": 3600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3587,
											"end": 3592,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3540,
											"end": 3593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3535,
											"end": 3538,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3528,
											"end": 3594,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3437,
											"end": 3600,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3606,
											"end": 3753,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 3606,
											"end": 3753,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3701,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3740,
											"end": 3745,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3701,
											"end": 3746,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3701,
											"end": 3746,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3701,
											"end": 3746,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 3701,
											"end": 3746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3696,
											"end": 3699,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3747,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3606,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3606,
											"end": 3753,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3606,
											"end": 3753,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3759,
											"end": 4124,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 3759,
											"end": 4124,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3901,
											"end": 3904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3922,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3986,
											"end": 3987,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3981,
											"end": 3984,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3922,
											"end": 3988,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 3922,
											"end": 3988,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3922,
											"end": 3988,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 3922,
											"end": 3988,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3988,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3915,
											"end": 3988,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4086,
											"end": 4089,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3997,
											"end": 4090,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 3997,
											"end": 4090,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3997,
											"end": 4090,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 3997,
											"end": 4090,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4115,
											"end": 4117,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4110,
											"end": 4113,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4106,
											"end": 4118,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4099,
											"end": 4118,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 4124,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 4124,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 4124,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3759,
											"end": 4124,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4130,
											"end": 4496,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4130,
											"end": 4496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4272,
											"end": 4275,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4293,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4357,
											"end": 4359,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4352,
											"end": 4355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4293,
											"end": 4360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 4293,
											"end": 4360,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4293,
											"end": 4360,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 4293,
											"end": 4360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 4360,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4286,
											"end": 4360,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4458,
											"end": 4461,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4369,
											"end": 4462,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 4369,
											"end": 4462,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4369,
											"end": 4462,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 4369,
											"end": 4462,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4487,
											"end": 4489,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4482,
											"end": 4485,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4478,
											"end": 4490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4490,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4471,
											"end": 4490,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4496,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4496,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4502,
											"end": 4620,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 4502,
											"end": 4620,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4607,
											"end": 4612,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4589,
											"end": 4613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 4589,
											"end": 4613,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4589,
											"end": 4613,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 4589,
											"end": 4613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4584,
											"end": 4587,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4577,
											"end": 4614,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4502,
											"end": 4620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4502,
											"end": 4620,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4502,
											"end": 4620,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4626,
											"end": 4848,
											"name": "tag",
											"source": 5,
											"value": "18"
										},
										{
											"begin": 4626,
											"end": 4848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4719,
											"end": 4723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4757,
											"end": 4759,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4746,
											"end": 4755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4742,
											"end": 4760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4734,
											"end": 4760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4838,
											"end": 4839,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4827,
											"end": 4836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4823,
											"end": 4840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4814,
											"end": 4820,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 4770,
											"end": 4841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4848,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4626,
											"end": 4848,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4854,
											"end": 5202,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 4854,
											"end": 5202,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4983,
											"end": 4987,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5021,
											"end": 5023,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5010,
											"end": 5019,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5006,
											"end": 5024,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5024,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4998,
											"end": 5024,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5102,
											"end": 5103,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5091,
											"end": 5100,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5087,
											"end": 5104,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5078,
											"end": 5084,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5034,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 5034,
											"end": 5105,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5034,
											"end": 5105,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 5034,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5115,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5191,
											"end": 5193,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5180,
											"end": 5189,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5176,
											"end": 5194,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5167,
											"end": 5173,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5115,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 5115,
											"end": 5195,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5115,
											"end": 5195,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 5115,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 5202,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 5202,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 5202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 5202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 5202,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4854,
											"end": 5202,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5208,
											"end": 5426,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 5208,
											"end": 5426,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5337,
											"end": 5339,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5326,
											"end": 5335,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5322,
											"end": 5340,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5340,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5314,
											"end": 5340,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5416,
											"end": 5417,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5405,
											"end": 5414,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5401,
											"end": 5418,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5392,
											"end": 5398,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5350,
											"end": 5419,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 5350,
											"end": 5419,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5350,
											"end": 5419,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 5350,
											"end": 5419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5426,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5426,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5426,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5208,
											"end": 5426,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5432,
											"end": 5682,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5432,
											"end": 5682,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5539,
											"end": 5543,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5577,
											"end": 5579,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5566,
											"end": 5575,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5562,
											"end": 5580,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5580,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5554,
											"end": 5580,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5672,
											"end": 5673,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5661,
											"end": 5670,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5657,
											"end": 5674,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5648,
											"end": 5654,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5590,
											"end": 5675,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 5590,
											"end": 5675,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5590,
											"end": 5675,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 5590,
											"end": 5675,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5682,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5682,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5682,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5432,
											"end": 5682,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5688,
											"end": 5940,
											"name": "tag",
											"source": 5,
											"value": "30"
										},
										{
											"begin": 5688,
											"end": 5940,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5796,
											"end": 5800,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5834,
											"end": 5836,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5823,
											"end": 5832,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5819,
											"end": 5837,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5811,
											"end": 5837,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5930,
											"end": 5931,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5919,
											"end": 5928,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5915,
											"end": 5932,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5906,
											"end": 5912,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5847,
											"end": 5933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 5847,
											"end": 5933,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5847,
											"end": 5933,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 5847,
											"end": 5933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5940,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5940,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5940,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5688,
											"end": 5940,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5946,
											"end": 6200,
											"name": "tag",
											"source": 5,
											"value": "34"
										},
										{
											"begin": 5946,
											"end": 6200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6055,
											"end": 6059,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6093,
											"end": 6095,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6082,
											"end": 6091,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6078,
											"end": 6096,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6070,
											"end": 6096,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6190,
											"end": 6191,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6188,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6175,
											"end": 6192,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6106,
											"end": 6193,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 6106,
											"end": 6193,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6106,
											"end": 6193,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6106,
											"end": 6193,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5946,
											"end": 6200,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5946,
											"end": 6200,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5946,
											"end": 6200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5946,
											"end": 6200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5946,
											"end": 6200,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6206,
											"end": 6625,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 6206,
											"end": 6625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6372,
											"end": 6376,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6410,
											"end": 6412,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6399,
											"end": 6408,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6395,
											"end": 6413,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6387,
											"end": 6413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6468,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6449,
											"end": 6469,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6445,
											"end": 6446,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6434,
											"end": 6443,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6430,
											"end": 6447,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6423,
											"end": 6470,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6613,
											"end": 6617,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6487,
											"end": 6618,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 6487,
											"end": 6618,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6487,
											"end": 6618,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6487,
											"end": 6618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6618,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6206,
											"end": 6625,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6631,
											"end": 7050,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 6631,
											"end": 7050,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6797,
											"end": 6801,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6835,
											"end": 6837,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6824,
											"end": 6833,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6820,
											"end": 6838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6812,
											"end": 6838,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6812,
											"end": 6838,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6884,
											"end": 6893,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6878,
											"end": 6882,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6874,
											"end": 6894,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6871,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6859,
											"end": 6868,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6855,
											"end": 6872,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6848,
											"end": 6895,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6912,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 7038,
											"end": 7042,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6912,
											"end": 7043,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 6912,
											"end": 7043,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6912,
											"end": 7043,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6912,
											"end": 7043,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 7043,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6904,
											"end": 7043,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6631,
											"end": 7050,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6631,
											"end": 7050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6631,
											"end": 7050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6631,
											"end": 7050,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7056,
											"end": 7278,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 7056,
											"end": 7278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7149,
											"end": 7153,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7187,
											"end": 7189,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7176,
											"end": 7185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7172,
											"end": 7190,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7164,
											"end": 7190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 7268,
											"end": 7269,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7257,
											"end": 7266,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7253,
											"end": 7270,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7244,
											"end": 7250,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 7200,
											"end": 7271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 7200,
											"end": 7271,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7200,
											"end": 7271,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 7200,
											"end": 7271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7278,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7278,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7056,
											"end": 7278,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7284,
											"end": 7413,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7284,
											"end": 7413,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7318,
											"end": 7324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7345,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7345,
											"end": 7365,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7345,
											"end": 7365,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7345,
											"end": 7365,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7345,
											"end": 7365,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7335,
											"end": 7365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7335,
											"end": 7365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7402,
											"end": 7406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7394,
											"end": 7400,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7374,
											"end": 7407,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 7374,
											"end": 7407,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7374,
											"end": 7407,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 7374,
											"end": 7407,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7413,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7413,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7413,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7284,
											"end": 7413,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7419,
											"end": 7494,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7419,
											"end": 7494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7452,
											"end": 7458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7485,
											"end": 7487,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7479,
											"end": 7488,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7469,
											"end": 7488,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7419,
											"end": 7494,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7500,
											"end": 7807,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 7500,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7561,
											"end": 7565,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7651,
											"end": 7669,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7643,
											"end": 7649,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7640,
											"end": 7670,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7637,
											"end": 7693,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7637,
											"end": 7693,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7637,
											"end": 7693,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7673,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7637,
											"end": 7693,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7637,
											"end": 7693,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7733,
											"end": 7739,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7711,
											"end": 7740,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 7711,
											"end": 7740,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7711,
											"end": 7740,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7711,
											"end": 7740,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7740,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7703,
											"end": 7740,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7795,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7789,
											"end": 7793,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7785,
											"end": 7800,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7800,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7777,
											"end": 7800,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7500,
											"end": 7807,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7813,
											"end": 7982,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7813,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7897,
											"end": 7908,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7931,
											"end": 7937,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7926,
											"end": 7929,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7919,
											"end": 7938,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7971,
											"end": 7975,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7966,
											"end": 7969,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7976,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7947,
											"end": 7976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7947,
											"end": 7976,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7982,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7982,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7982,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7988,
											"end": 8084,
											"name": "tag",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 7988,
											"end": 8084,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8025,
											"end": 8032,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8054,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8072,
											"end": 8077,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8078,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 8054,
											"end": 8078,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8054,
											"end": 8078,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8054,
											"end": 8078,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8078,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8043,
											"end": 8078,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8084,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8084,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8084,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8084,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8090,
											"end": 8239,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 8090,
											"end": 8239,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8126,
											"end": 8133,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8166,
											"end": 8232,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8159,
											"end": 8164,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8155,
											"end": 8233,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8144,
											"end": 8233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8144,
											"end": 8233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8239,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8239,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8239,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8239,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8245,
											"end": 8371,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 8245,
											"end": 8371,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8282,
											"end": 8289,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8322,
											"end": 8364,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8315,
											"end": 8320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8311,
											"end": 8365,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8300,
											"end": 8365,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8300,
											"end": 8365,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8371,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8371,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8371,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8245,
											"end": 8371,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8377,
											"end": 8454,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 8377,
											"end": 8454,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8414,
											"end": 8421,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8443,
											"end": 8448,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8432,
											"end": 8448,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8432,
											"end": 8448,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8454,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8454,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8454,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8377,
											"end": 8454,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8460,
											"end": 8600,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 8460,
											"end": 8600,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8524,
											"end": 8533,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8557,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8588,
											"end": 8593,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8557,
											"end": 8594,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8557,
											"end": 8594,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8557,
											"end": 8594,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8557,
											"end": 8594,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8544,
											"end": 8594,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8544,
											"end": 8594,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8600,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8600,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8600,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8460,
											"end": 8600,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8606,
											"end": 8747,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 8606,
											"end": 8747,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8671,
											"end": 8680,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8704,
											"end": 8741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 8735,
											"end": 8740,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8704,
											"end": 8741,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8704,
											"end": 8741,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8704,
											"end": 8741,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 8704,
											"end": 8741,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 8741,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8691,
											"end": 8741,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8747,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8747,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8747,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8606,
											"end": 8747,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8753,
											"end": 8895,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 8753,
											"end": 8895,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8819,
											"end": 8828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8883,
											"end": 8888,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "tag",
											"source": 5,
											"value": "187"
										},
										{
											"begin": 8852,
											"end": 8889,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 8889,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8839,
											"end": 8889,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8753,
											"end": 8895,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8753,
											"end": 8895,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8753,
											"end": 8895,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8753,
											"end": 8895,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8901,
											"end": 9022,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 8901,
											"end": 9022,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8959,
											"end": 8968,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8992,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 9010,
											"end": 9015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8992,
											"end": 9016,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 8992,
											"end": 9016,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8992,
											"end": 9016,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 8992,
											"end": 9016,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8979,
											"end": 9016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8979,
											"end": 9016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8901,
											"end": 9022,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8901,
											"end": 9022,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8901,
											"end": 9022,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8901,
											"end": 9022,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9028,
											"end": 9154,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 9028,
											"end": 9154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9078,
											"end": 9087,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9111,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 9142,
											"end": 9147,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9111,
											"end": 9148,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9111,
											"end": 9148,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9111,
											"end": 9148,
											"name": "tag",
											"source": 5,
											"value": "191"
										},
										{
											"begin": 9111,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9148,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9098,
											"end": 9148,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9154,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9028,
											"end": 9154,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9160,
											"end": 9273,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 9160,
											"end": 9273,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9210,
											"end": 9219,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9243,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9261,
											"end": 9266,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9243,
											"end": 9267,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 9243,
											"end": 9267,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9243,
											"end": 9267,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9243,
											"end": 9267,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9267,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9230,
											"end": 9267,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9160,
											"end": 9273,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9160,
											"end": 9273,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9160,
											"end": 9273,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9160,
											"end": 9273,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9279,
											"end": 9433,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 9279,
											"end": 9433,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9363,
											"end": 9369,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9358,
											"end": 9361,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9353,
											"end": 9356,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9340,
											"end": 9370,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 9425,
											"end": 9426,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9416,
											"end": 9422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9411,
											"end": 9414,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9407,
											"end": 9423,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9427,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9433,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9279,
											"end": 9433,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9439,
											"end": 9720,
											"name": "tag",
											"source": 5,
											"value": "166"
										},
										{
											"begin": 9439,
											"end": 9720,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9522,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9544,
											"end": 9548,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9522,
											"end": 9549,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 9522,
											"end": 9549,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9522,
											"end": 9549,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 9522,
											"end": 9549,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9514,
											"end": 9520,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9510,
											"end": 9550,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9652,
											"end": 9658,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9640,
											"end": 9650,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9637,
											"end": 9659,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9616,
											"end": 9634,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9604,
											"end": 9614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9601,
											"end": 9635,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9598,
											"end": 9660,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 9595,
											"end": 9683,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9595,
											"end": 9683,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9595,
											"end": 9683,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 9663,
											"end": 9681,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9595,
											"end": 9683,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9595,
											"end": 9683,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9703,
											"end": 9713,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9699,
											"end": 9701,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 9692,
											"end": 9714,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9482,
											"end": 9720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9439,
											"end": 9720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9439,
											"end": 9720,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9439,
											"end": 9720,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9726,
											"end": 9906,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 9726,
											"end": 9906,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9774,
											"end": 9851,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 9771,
											"end": 9772,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9764,
											"end": 9852,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9871,
											"end": 9875,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 9868,
											"end": 9869,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 9861,
											"end": 9876,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9895,
											"end": 9899,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9892,
											"end": 9893,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9885,
											"end": 9900,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9912,
											"end": 10029,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 9912,
											"end": 10029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10021,
											"end": 10022,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10018,
											"end": 10019,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10023,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10035,
											"end": 10152,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 10035,
											"end": 10152,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10144,
											"end": 10145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10141,
											"end": 10142,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10134,
											"end": 10146,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10158,
											"end": 10275,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 10158,
											"end": 10275,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10267,
											"end": 10268,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10264,
											"end": 10265,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10257,
											"end": 10269,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10281,
											"end": 10398,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 10281,
											"end": 10398,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10390,
											"end": 10391,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10387,
											"end": 10388,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10380,
											"end": 10392,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10506,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 10404,
											"end": 10506,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10445,
											"end": 10451,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10496,
											"end": 10498,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10492,
											"end": 10499,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 10487,
											"end": 10489,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 10480,
											"end": 10485,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 10476,
											"end": 10490,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10472,
											"end": 10500,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 10462,
											"end": 10500,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10462,
											"end": 10500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10506,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10506,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10506,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10404,
											"end": 10506,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10512,
											"end": 10671,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 10512,
											"end": 10671,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10652,
											"end": 10663,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10648,
											"end": 10649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10640,
											"end": 10646,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10636,
											"end": 10650,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10629,
											"end": 10664,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10512,
											"end": 10671,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10512,
											"end": 10671,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10677,
											"end": 10858,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 10677,
											"end": 10858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10817,
											"end": 10850,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 10813,
											"end": 10814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10805,
											"end": 10811,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10801,
											"end": 10815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 10794,
											"end": 10851,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10677,
											"end": 10858,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10677,
											"end": 10858,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10864,
											"end": 10986,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 10864,
											"end": 10986,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 10955,
											"end": 10960,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "107"
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 10937,
											"end": 10961,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10930,
											"end": 10935,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10927,
											"end": 10962,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 10917,
											"end": 10980,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 10917,
											"end": 10980,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10976,
											"end": 10977,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10973,
											"end": 10974,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10966,
											"end": 10978,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10917,
											"end": 10980,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 10917,
											"end": 10980,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 10986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10864,
											"end": 10986,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10992,
											"end": 11114,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 10992,
											"end": 11114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 11083,
											"end": 11088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11065,
											"end": 11089,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 11065,
											"end": 11089,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11065,
											"end": 11089,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 11065,
											"end": 11089,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11058,
											"end": 11063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11055,
											"end": 11090,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11108,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 11045,
											"end": 11108,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 11104,
											"end": 11105,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11101,
											"end": 11102,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11094,
											"end": 11106,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11045,
											"end": 11108,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 11045,
											"end": 11108,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10992,
											"end": 11114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10992,
											"end": 11114,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"parentNFT()": "b8e33fb2",
							"parentNFTAddress()": "66bb863b",
							"parentNftFunctions()": "fead3d6e",
							"parentToken()": "80a54001",
							"stake(uint256)": "a694fc3a"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNftFunctions\",\"outputs\":[{\"internalType\":\"contract INFTGame\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0xef36c2d7af0b3adafa860ffa325b8fd4077ba9557d5cadbc19ed407eb16af6e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec7a5c648e791b37e13fc3301fde223095a34d566d213b6fb679a4052486f14d\",\"dweb:/ipfs/QmazA5p8mZqgQVg4Ch1GQkfPHUHmtCvw5YyUWJoYzDZcpr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Missions.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 266,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)233"
							},
							{
								"astId": 269,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNftFunctions",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(INFTGame)258"
							},
							{
								"astId": 271,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFTAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 333,
								"contract": "contracts/Missions.sol:Staking",
								"label": "hello",
								"offset": 0,
								"slot": "5",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)233": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(INFTGame)258": {
								"encoding": "inplace",
								"label": "contract INFTGame",
								"numberOfBytes": "20"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC721": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 246,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 122,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "271:7:2"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 121,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								245
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 132,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 141,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 150,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 233,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 233,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 233,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 233,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 233,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 233,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 233,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 233,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 233,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 234,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 245,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"contracts/Missions.sol": {
				"ast": {
					"absolutePath": "contracts/Missions.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC20": [
							117
						],
						"IERC721": [
							233
						],
						"INFTGame": [
							258
						],
						"ReentrancyGuard": [
							39
						],
						"Staking": [
							356
						]
					},
					"id": 357,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 357,
							"sourceUnit": 40,
							"src": "64:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 357,
							"sourceUnit": 118,
							"src": "128:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 357,
							"sourceUnit": 234,
							"src": "186:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "INFTGame",
							"nameLocation": "258:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a0c4442d",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrophies",
									"nameLocation": "286:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "298:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:9:4"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "325:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:9:4"
									},
									"scope": 258,
									"src": "277:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 357,
							"src": "248:89:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "361:15:4"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "361:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 356,
							"linearizedBaseContracts": [
								356,
								39
							],
							"name": "Staking",
							"nameLocation": "350:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "80a54001",
									"id": 263,
									"mutability": "mutable",
									"name": "parentToken",
									"nameLocation": "398:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "384:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 262,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 261,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "384:6:4"
										},
										"referencedDeclaration": 117,
										"src": "384:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 266,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "431:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "416:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$233",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 265,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 264,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 233,
											"src": "416:7:4"
										},
										"referencedDeclaration": 233,
										"src": "416:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$233",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fead3d6e",
									"id": 269,
									"mutability": "mutable",
									"name": "parentNftFunctions",
									"nameLocation": "463:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "447:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTGame_$258",
										"typeString": "contract INFTGame"
									},
									"typeName": {
										"id": 268,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 267,
											"name": "INFTGame",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 258,
											"src": "447:8:4"
										},
										"referencedDeclaration": 258,
										"src": "447:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTGame_$258",
											"typeString": "contract INFTGame"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66bb863b",
									"id": 271,
									"mutability": "mutable",
									"name": "parentNFTAddress",
									"nameLocation": "503:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "488:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "583:205:4",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "594:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 280,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "614:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 279,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "606:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$233_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "606:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"src": "594:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$233",
														"typeString": "contract IERC721"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "594:33:4"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "parentNftFunctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 286,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "668:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 285,
															"name": "INFTGame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "659:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INFTGame_$258_$",
																"typeString": "type(contract INFTGame)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "659:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"src": "638:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTGame_$258",
														"typeString": "contract INFTGame"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "638:43:4"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "parentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "692:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 292,
																"name": "_tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "713:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 291,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "706:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "706:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "692:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "692:36:4"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "parentNFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "739:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "758:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "739:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "739:31:4"
											}
										]
									},
									"id": 301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "546:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "538:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "568:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "560:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:46:4"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:4"
									},
									"scope": 356,
									"src": "526:262:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "851:147:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 315,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 311,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 303,
																		"src": "888:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 309,
																		"name": "parentNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "870:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$233",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 310,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "870:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 312,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "870:27:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 313,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "901:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 314,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "901:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "870:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 316,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "913:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 308,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "862:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "862:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 318,
												"nodeType": "ExpressionStatement",
												"src": "862:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 324,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "962:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$356",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$356",
																		"typeString": "contract Staking"
																	}
																],
																"id": 323,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "954:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 322,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "954:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 325,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "954:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"hexValue": "31",
															"id": 326,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "969:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"expression": {
															"id": 319,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "936:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$233",
																"typeString": "contract IERC721"
															}
														},
														"id": 321,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "approve",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 206,
														"src": "936:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256) external"
														}
													},
													"id": 327,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:35:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 328,
												"nodeType": "ExpressionStatement",
												"src": "936:35:4"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 306,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 305,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "836:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "836:14:4"
										}
									],
									"name": "stake",
									"nameLocation": "805:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 304,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "819:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "811:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 302,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "811:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "810:18:4"
									},
									"returnParameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "851:0:4"
									},
									"scope": 356,
									"src": "796:202:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 333,
									"mutability": "mutable",
									"name": "hello",
									"nameLocation": "1018:5:4",
									"nodeType": "VariableDeclaration",
									"scope": 356,
									"src": "1010:17:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 331,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1010:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 332,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1026:1:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 354,
										"nodeType": "Block",
										"src": "1133:76:4",
										"statements": [
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 346,
														"name": "hello",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 333,
														"src": "1144:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 347,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1152:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "1144:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "1144:9:4"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 350,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1171:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$356",
																"typeString": "contract Staking"
															}
														},
														"id": 351,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 355,
														"src": "1171:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1171:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 345,
												"id": 353,
												"nodeType": "Return",
												"src": "1164:37:4"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 355,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1043:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1060:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1069:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1069:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1078:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1078:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1087:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1087:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1059:41:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 355,
												"src": "1125:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 343,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1125:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1124:8:4"
									},
									"scope": 356,
									"src": "1034:175:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 357,
							"src": "341:906:4",
							"usedErrors": []
						}
					],
					"src": "35:1212:4"
				},
				"id": 4
			}
		}
	}
}