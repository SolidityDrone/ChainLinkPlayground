{
	"id": "18dd8ba919b4cf9a41b0a8f67e82a7fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Missions.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\ninterface INFTGame {\r\n       function getTrophies(uint256) external returns (uint256);\r\n}\r\n\r\ncontract Staking is ReentrancyGuard {\r\n    IERC20 public parentToken;\r\n    IERC721 public parentNFT;\r\n    INFTGame public parentNftFunctions;\r\n    address public parentNFTAddress;\r\n    constructor(address _nftContract, address _tokenContract){\r\n        parentNFT = IERC721(_nftContract);\r\n        parentNftFunctions = INFTGame(_nftContract);\r\n        parentToken = IERC20(_tokenContract);\r\n        parentNFTAddress = _nftContract;\r\n        \r\n    }\r\n\r\n    mapping (uint256=>address) s_stakers;\r\n    mapping (uint256=>uint256) s_missionTimers;\r\n     \r\n    function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r\n        return (s_stakers[_tokenID], s_missionTimers[_tokenID]);\r\n    }\r\n    address public operator;\r\n    address public nftcontract;\r\n\r\n    \r\n    function onERC721Received(address collection, address _operator, address _nftcontract, uint256 tokenID, bytes memory) public virtual returns (bytes4) {\r\n        nftcontract = _nftcontract;\r\n        operator = _operator;\r\n        s_stakers[tokenID] = operator;\r\n        return this.onERC721Received.selector;\r\n    }\r\n    \r\n    \r\n \r\n\r\n   \r\n \r\n\r\n    \r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Missions.sol": {
				"INFTGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getTrophies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTrophies(uint256)": "a0c4442d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTrophies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"INFTGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0x42dc72b51e693a2281314ad69f1425ef940a4e0e757d7510fbcfaa5f7538fd80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39d19a3575d3727c708ac129158ce0be03c1049514e5ad185eb6a0996bb4a3c\",\"dweb:/ipfs/QmPD8zUM1tTyyGkcjMsTgc1cFXSQfWspnxt69oNn5SoEAL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "getStakes",
							"outputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "nftcontract",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "collection",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_nftcontract",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "operator",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFTAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNftFunctions",
							"outputs": [
								{
									"internalType": "contract INFTGame",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Missions.sol\":341:1482  contract Staking is ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":614:626  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":594:603  parentNFT */\n  0x02\n  0x00\n    /* \"contracts/Missions.sol\":594:627  parentNFT = IERC721(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":668:680  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":638:656  parentNftFunctions */\n  0x03\n  0x00\n    /* \"contracts/Missions.sol\":638:681  parentNftFunctions = INFTGame(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":713:727  _tokenContract */\n  dup1\n    /* \"contracts/Missions.sol\":692:703  parentToken */\n  0x01\n  0x00\n    /* \"contracts/Missions.sol\":692:728  parentToken = IERC20(_tokenContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":758:770  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":739:755  parentNFTAddress */\n  0x04\n  0x00\n    /* \"contracts/Missions.sol\":739:770  parentNFTAddress = _nftContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  pop\n  pop\n    /* \"contracts/Missions.sol\":341:1482  contract Staking is ReentrancyGuard {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":260:379   */\ntag_15:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_18\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_19\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_22:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_24\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_25:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_17:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_13:\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_32:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Missions.sol\":341:1482  contract Staking is ReentrancyGuard {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Missions.sol\":341:1482  contract Staking is ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x6a9315b3\n      gt\n      tag_11\n      jumpi\n      dup1\n      0x6a9315b3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x80a54001\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xfead3d6e\n      eq\n      tag_10\n      jumpi\n      jump(tag_2)\n    tag_11:\n      dup1\n      0x401405e2\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x472343b9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x570ca735\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x66bb863b\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Missions.sol\":1130:1444  function onERC721Received(address collection, address _operator, address _nftcontract, uint256 tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n    tag_3:\n      tag_12\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      tag_15\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n    tag_4:\n      tag_18\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      tag_21\n      jump\t// in\n    tag_18:\n      mload(0x40)\n      tag_22\n      swap3\n      swap2\n      swap1\n      tag_23\n      jump\t// in\n    tag_22:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1059:1082  address public operator */\n    tag_5:\n      tag_24\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1089:1115  address public nftcontract */\n    tag_7:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_8:\n      tag_34\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      tag_36\n      swap2\n      swap1\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_9:\n      tag_38\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      tag_40\n      swap2\n      swap1\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_10:\n      tag_42\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_45\n      jump\t// in\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1130:1444  function onERC721Received(address collection, address _operator, address _nftcontract, uint256 tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n    tag_15:\n        /* \"contracts/Missions.sol\":1272:1278  bytes4 */\n      0x00\n        /* \"contracts/Missions.sol\":1305:1317  _nftcontract */\n      dup4\n        /* \"contracts/Missions.sol\":1291:1302  nftcontract */\n      0x08\n      0x00\n        /* \"contracts/Missions.sol\":1291:1317  nftcontract = _nftcontract */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1339:1348  _operator */\n      dup5\n        /* \"contracts/Missions.sol\":1328:1336  operator */\n      0x07\n      0x00\n        /* \"contracts/Missions.sol\":1328:1348  operator = _operator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1380:1388  operator */\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1359:1368  s_stakers */\n      0x05\n        /* \"contracts/Missions.sol\":1359:1377  s_stakers[tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1369:1376  tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1359:1377  s_stakers[tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Missions.sol\":1359:1388  s_stakers[tokenID] = operator */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1406:1436  this.onERC721Received.selector */\n      shl(0xe0, 0x401405e2)\n        /* \"contracts/Missions.sol\":1399:1436  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":1130:1444  function onERC721Received(address collection, address _operator, address _nftcontract, uint256 tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n    tag_21:\n        /* \"contracts/Missions.sol\":953:964  address add */\n      0x00\n        /* \"contracts/Missions.sol\":966:978  uint256 time */\n      dup1\n        /* \"contracts/Missions.sol\":998:1007  s_stakers */\n      0x05\n        /* \"contracts/Missions.sol\":998:1017  s_stakers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1008:1016  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":998:1017  s_stakers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1019:1034  s_missionTimers */\n      0x06\n        /* \"contracts/Missions.sol\":1019:1044  s_missionTimers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1035:1043  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1019:1044  s_missionTimers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Missions.sol\":990:1045  return (s_stakers[_tokenID], s_missionTimers[_tokenID]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Missions.sol\":1059:1082  address public operator */\n    tag_25:\n      0x07\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_29:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":1089:1115  address public nftcontract */\n    tag_32:\n      0x08\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_35:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_39:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_43:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_49:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_51\n        /* \"#utility.yul\":125:173   */\n      tag_52\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":109:174   */\n      tag_54\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_55\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":249:361   */\n    tag_55:\n        /* \"#utility.yul\":370:411   */\n      tag_58\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_59\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_60:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_62\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_63\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_64:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_66\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_67\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":652:774   */\n    tag_66:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_69\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_49\n      jump\t// in\n    tag_69:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_70:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_72\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2159   */\n    tag_14:\n        /* \"#utility.yul\":1174:1180   */\n      0x00\n        /* \"#utility.yul\":1182:1188   */\n      dup1\n        /* \"#utility.yul\":1190:1196   */\n      0x00\n        /* \"#utility.yul\":1198:1204   */\n      dup1\n        /* \"#utility.yul\":1206:1212   */\n      0x00\n        /* \"#utility.yul\":1255:1258   */\n      0xa0\n        /* \"#utility.yul\":1243:1252   */\n      dup7\n        /* \"#utility.yul\":1234:1241   */\n      dup9\n        /* \"#utility.yul\":1230:1253   */\n      sub\n        /* \"#utility.yul\":1226:1259   */\n      slt\n        /* \"#utility.yul\":1223:1343   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1262:1341   */\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1223:1343   */\n    tag_75:\n        /* \"#utility.yul\":1382:1383   */\n      0x00\n        /* \"#utility.yul\":1407:1460   */\n      tag_78\n        /* \"#utility.yul\":1452:1459   */\n      dup9\n        /* \"#utility.yul\":1443:1449   */\n      dup3\n        /* \"#utility.yul\":1432:1441   */\n      dup10\n        /* \"#utility.yul\":1428:1450   */\n      add\n        /* \"#utility.yul\":1407:1460   */\n      tag_60\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1397:1460   */\n      swap6\n      pop\n        /* \"#utility.yul\":1353:1470   */\n      pop\n        /* \"#utility.yul\":1509:1511   */\n      0x20\n        /* \"#utility.yul\":1535:1588   */\n      tag_79\n        /* \"#utility.yul\":1580:1587   */\n      dup9\n        /* \"#utility.yul\":1571:1577   */\n      dup3\n        /* \"#utility.yul\":1560:1569   */\n      dup10\n        /* \"#utility.yul\":1556:1578   */\n      add\n        /* \"#utility.yul\":1535:1588   */\n      tag_60\n      jump\t// in\n    tag_79:\n        /* \"#utility.yul\":1525:1588   */\n      swap5\n      pop\n        /* \"#utility.yul\":1480:1598   */\n      pop\n        /* \"#utility.yul\":1637:1639   */\n      0x40\n        /* \"#utility.yul\":1663:1716   */\n      tag_80\n        /* \"#utility.yul\":1708:1715   */\n      dup9\n        /* \"#utility.yul\":1699:1705   */\n      dup3\n        /* \"#utility.yul\":1688:1697   */\n      dup10\n        /* \"#utility.yul\":1684:1706   */\n      add\n        /* \"#utility.yul\":1663:1716   */\n      tag_60\n      jump\t// in\n    tag_80:\n        /* \"#utility.yul\":1653:1716   */\n      swap4\n      pop\n        /* \"#utility.yul\":1608:1726   */\n      pop\n        /* \"#utility.yul\":1765:1767   */\n      0x60\n        /* \"#utility.yul\":1791:1844   */\n      tag_81\n        /* \"#utility.yul\":1836:1843   */\n      dup9\n        /* \"#utility.yul\":1827:1833   */\n      dup3\n        /* \"#utility.yul\":1816:1825   */\n      dup10\n        /* \"#utility.yul\":1812:1834   */\n      add\n        /* \"#utility.yul\":1791:1844   */\n      tag_70\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1781:1844   */\n      swap3\n      pop\n        /* \"#utility.yul\":1736:1854   */\n      pop\n        /* \"#utility.yul\":1921:1924   */\n      0x80\n        /* \"#utility.yul\":1910:1919   */\n      dup7\n        /* \"#utility.yul\":1906:1925   */\n      add\n        /* \"#utility.yul\":1893:1926   */\n      calldataload\n        /* \"#utility.yul\":1953:1971   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1945:1951   */\n      dup2\n        /* \"#utility.yul\":1942:1972   */\n      gt\n        /* \"#utility.yul\":1939:2056   */\n      iszero\n      tag_82\n      jumpi\n        /* \"#utility.yul\":1975:2054   */\n      tag_83\n      tag_84\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1939:2056   */\n    tag_82:\n        /* \"#utility.yul\":2080:2142   */\n      tag_85\n        /* \"#utility.yul\":2134:2141   */\n      dup9\n        /* \"#utility.yul\":2125:2131   */\n      dup3\n        /* \"#utility.yul\":2114:2123   */\n      dup10\n        /* \"#utility.yul\":2110:2132   */\n      add\n        /* \"#utility.yul\":2080:2142   */\n      tag_64\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2070:2142   */\n      swap2\n      pop\n        /* \"#utility.yul\":1864:2152   */\n      pop\n        /* \"#utility.yul\":1070:2159   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2165:2494   */\n    tag_20:\n        /* \"#utility.yul\":2224:2230   */\n      0x00\n        /* \"#utility.yul\":2273:2275   */\n      0x20\n        /* \"#utility.yul\":2261:2270   */\n      dup3\n        /* \"#utility.yul\":2252:2259   */\n      dup5\n        /* \"#utility.yul\":2248:2271   */\n      sub\n        /* \"#utility.yul\":2244:2276   */\n      slt\n        /* \"#utility.yul\":2241:2360   */\n      iszero\n      tag_87\n      jumpi\n        /* \"#utility.yul\":2279:2358   */\n      tag_88\n      tag_77\n      jump\t// in\n    tag_88:\n        /* \"#utility.yul\":2241:2360   */\n    tag_87:\n        /* \"#utility.yul\":2399:2400   */\n      0x00\n        /* \"#utility.yul\":2424:2477   */\n      tag_89\n        /* \"#utility.yul\":2469:2476   */\n      dup5\n        /* \"#utility.yul\":2460:2466   */\n      dup3\n        /* \"#utility.yul\":2449:2458   */\n      dup6\n        /* \"#utility.yul\":2445:2467   */\n      add\n        /* \"#utility.yul\":2424:2477   */\n      tag_70\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2414:2477   */\n      swap2\n      pop\n        /* \"#utility.yul\":2370:2487   */\n      pop\n        /* \"#utility.yul\":2165:2494   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2500:2618   */\n    tag_90:\n        /* \"#utility.yul\":2587:2611   */\n      tag_92\n        /* \"#utility.yul\":2605:2610   */\n      dup2\n        /* \"#utility.yul\":2587:2611   */\n      tag_93\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2582:2585   */\n      dup3\n        /* \"#utility.yul\":2575:2612   */\n      mstore\n        /* \"#utility.yul\":2500:2618   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2624:2739   */\n    tag_94:\n        /* \"#utility.yul\":2709:2732   */\n      tag_96\n        /* \"#utility.yul\":2726:2731   */\n      dup2\n        /* \"#utility.yul\":2709:2732   */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2704:2707   */\n      dup3\n        /* \"#utility.yul\":2697:2733   */\n      mstore\n        /* \"#utility.yul\":2624:2739   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2745:2904   */\n    tag_98:\n        /* \"#utility.yul\":2846:2897   */\n      tag_100\n        /* \"#utility.yul\":2891:2896   */\n      dup2\n        /* \"#utility.yul\":2846:2897   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2841:2844   */\n      dup3\n        /* \"#utility.yul\":2834:2898   */\n      mstore\n        /* \"#utility.yul\":2745:2904   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2910:3071   */\n    tag_102:\n        /* \"#utility.yul\":3012:3064   */\n      tag_104\n        /* \"#utility.yul\":3058:3063   */\n      dup2\n        /* \"#utility.yul\":3012:3064   */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":3007:3010   */\n      dup3\n        /* \"#utility.yul\":3000:3065   */\n      mstore\n        /* \"#utility.yul\":2910:3071   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3077:3240   */\n    tag_106:\n        /* \"#utility.yul\":3180:3233   */\n      tag_108\n        /* \"#utility.yul\":3227:3232   */\n      dup2\n        /* \"#utility.yul\":3180:3233   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3175:3178   */\n      dup3\n        /* \"#utility.yul\":3168:3234   */\n      mstore\n        /* \"#utility.yul\":3077:3240   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3246:3364   */\n    tag_110:\n        /* \"#utility.yul\":3333:3357   */\n      tag_112\n        /* \"#utility.yul\":3351:3356   */\n      dup2\n        /* \"#utility.yul\":3333:3357   */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3328:3331   */\n      dup3\n        /* \"#utility.yul\":3321:3358   */\n      mstore\n        /* \"#utility.yul\":3246:3364   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3370:3592   */\n    tag_27:\n        /* \"#utility.yul\":3463:3467   */\n      0x00\n        /* \"#utility.yul\":3501:3503   */\n      0x20\n        /* \"#utility.yul\":3490:3499   */\n      dup3\n        /* \"#utility.yul\":3486:3504   */\n      add\n        /* \"#utility.yul\":3478:3504   */\n      swap1\n      pop\n        /* \"#utility.yul\":3514:3585   */\n      tag_115\n        /* \"#utility.yul\":3582:3583   */\n      0x00\n        /* \"#utility.yul\":3571:3580   */\n      dup4\n        /* \"#utility.yul\":3567:3584   */\n      add\n        /* \"#utility.yul\":3558:3564   */\n      dup5\n        /* \"#utility.yul\":3514:3585   */\n      tag_90\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":3370:3592   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3598:3930   */\n    tag_23:\n        /* \"#utility.yul\":3719:3723   */\n      0x00\n        /* \"#utility.yul\":3757:3759   */\n      0x40\n        /* \"#utility.yul\":3746:3755   */\n      dup3\n        /* \"#utility.yul\":3742:3760   */\n      add\n        /* \"#utility.yul\":3734:3760   */\n      swap1\n      pop\n        /* \"#utility.yul\":3770:3841   */\n      tag_117\n        /* \"#utility.yul\":3838:3839   */\n      0x00\n        /* \"#utility.yul\":3827:3836   */\n      dup4\n        /* \"#utility.yul\":3823:3840   */\n      add\n        /* \"#utility.yul\":3814:3820   */\n      dup6\n        /* \"#utility.yul\":3770:3841   */\n      tag_90\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":3851:3923   */\n      tag_118\n        /* \"#utility.yul\":3919:3921   */\n      0x20\n        /* \"#utility.yul\":3908:3917   */\n      dup4\n        /* \"#utility.yul\":3904:3922   */\n      add\n        /* \"#utility.yul\":3895:3901   */\n      dup5\n        /* \"#utility.yul\":3851:3923   */\n      tag_110\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3598:3930   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3936:4154   */\n    tag_17:\n        /* \"#utility.yul\":4027:4031   */\n      0x00\n        /* \"#utility.yul\":4065:4067   */\n      0x20\n        /* \"#utility.yul\":4054:4063   */\n      dup3\n        /* \"#utility.yul\":4050:4068   */\n      add\n        /* \"#utility.yul\":4042:4068   */\n      swap1\n      pop\n        /* \"#utility.yul\":4078:4147   */\n      tag_120\n        /* \"#utility.yul\":4144:4145   */\n      0x00\n        /* \"#utility.yul\":4133:4142   */\n      dup4\n        /* \"#utility.yul\":4129:4146   */\n      add\n        /* \"#utility.yul\":4120:4126   */\n      dup5\n        /* \"#utility.yul\":4078:4147   */\n      tag_94\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":3936:4154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4160:4410   */\n    tag_37:\n        /* \"#utility.yul\":4267:4271   */\n      0x00\n        /* \"#utility.yul\":4305:4307   */\n      0x20\n        /* \"#utility.yul\":4294:4303   */\n      dup3\n        /* \"#utility.yul\":4290:4308   */\n      add\n        /* \"#utility.yul\":4282:4308   */\n      swap1\n      pop\n        /* \"#utility.yul\":4318:4403   */\n      tag_122\n        /* \"#utility.yul\":4400:4401   */\n      0x00\n        /* \"#utility.yul\":4389:4398   */\n      dup4\n        /* \"#utility.yul\":4385:4402   */\n      add\n        /* \"#utility.yul\":4376:4382   */\n      dup5\n        /* \"#utility.yul\":4318:4403   */\n      tag_98\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":4160:4410   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4416:4668   */\n    tag_41:\n        /* \"#utility.yul\":4524:4528   */\n      0x00\n        /* \"#utility.yul\":4562:4564   */\n      0x20\n        /* \"#utility.yul\":4551:4560   */\n      dup3\n        /* \"#utility.yul\":4547:4565   */\n      add\n        /* \"#utility.yul\":4539:4565   */\n      swap1\n      pop\n        /* \"#utility.yul\":4575:4661   */\n      tag_124\n        /* \"#utility.yul\":4658:4659   */\n      0x00\n        /* \"#utility.yul\":4647:4656   */\n      dup4\n        /* \"#utility.yul\":4643:4660   */\n      add\n        /* \"#utility.yul\":4634:4640   */\n      dup5\n        /* \"#utility.yul\":4575:4661   */\n      tag_102\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":4416:4668   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4674:4928   */\n    tag_45:\n        /* \"#utility.yul\":4783:4787   */\n      0x00\n        /* \"#utility.yul\":4821:4823   */\n      0x20\n        /* \"#utility.yul\":4810:4819   */\n      dup3\n        /* \"#utility.yul\":4806:4824   */\n      add\n        /* \"#utility.yul\":4798:4824   */\n      swap1\n      pop\n        /* \"#utility.yul\":4834:4921   */\n      tag_126\n        /* \"#utility.yul\":4918:4919   */\n      0x00\n        /* \"#utility.yul\":4907:4916   */\n      dup4\n        /* \"#utility.yul\":4903:4920   */\n      add\n        /* \"#utility.yul\":4894:4900   */\n      dup5\n        /* \"#utility.yul\":4834:4921   */\n      tag_106\n      jump\t// in\n    tag_126:\n        /* \"#utility.yul\":4674:4928   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4934:5063   */\n    tag_54:\n        /* \"#utility.yul\":4968:4974   */\n      0x00\n        /* \"#utility.yul\":4995:5015   */\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":4985:5015   */\n      swap1\n      pop\n        /* \"#utility.yul\":5024:5057   */\n      tag_130\n        /* \"#utility.yul\":5052:5056   */\n      dup3\n        /* \"#utility.yul\":5044:5050   */\n      dup3\n        /* \"#utility.yul\":5024:5057   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4934:5063   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5069:5144   */\n    tag_129:\n        /* \"#utility.yul\":5102:5108   */\n      0x00\n        /* \"#utility.yul\":5135:5137   */\n      0x40\n        /* \"#utility.yul\":5129:5138   */\n      mload\n        /* \"#utility.yul\":5119:5138   */\n      swap1\n      pop\n        /* \"#utility.yul\":5069:5144   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5150:5457   */\n    tag_53:\n        /* \"#utility.yul\":5211:5215   */\n      0x00\n        /* \"#utility.yul\":5301:5319   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5293:5299   */\n      dup3\n        /* \"#utility.yul\":5290:5320   */\n      gt\n        /* \"#utility.yul\":5287:5343   */\n      iszero\n      tag_134\n      jumpi\n        /* \"#utility.yul\":5323:5341   */\n      tag_135\n      tag_136\n      jump\t// in\n    tag_135:\n        /* \"#utility.yul\":5287:5343   */\n    tag_134:\n        /* \"#utility.yul\":5361:5390   */\n      tag_137\n        /* \"#utility.yul\":5383:5389   */\n      dup3\n        /* \"#utility.yul\":5361:5390   */\n      tag_138\n      jump\t// in\n    tag_137:\n        /* \"#utility.yul\":5353:5390   */\n      swap1\n      pop\n        /* \"#utility.yul\":5445:5449   */\n      0x20\n        /* \"#utility.yul\":5439:5443   */\n      dup2\n        /* \"#utility.yul\":5435:5450   */\n      add\n        /* \"#utility.yul\":5427:5450   */\n      swap1\n      pop\n        /* \"#utility.yul\":5150:5457   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5463:5559   */\n    tag_93:\n        /* \"#utility.yul\":5500:5507   */\n      0x00\n        /* \"#utility.yul\":5529:5553   */\n      tag_140\n        /* \"#utility.yul\":5547:5552   */\n      dup3\n        /* \"#utility.yul\":5529:5553   */\n      tag_141\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5518:5553   */\n      swap1\n      pop\n        /* \"#utility.yul\":5463:5559   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5565:5714   */\n    tag_97:\n        /* \"#utility.yul\":5601:5608   */\n      0x00\n        /* \"#utility.yul\":5641:5707   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5634:5639   */\n      dup3\n        /* \"#utility.yul\":5630:5708   */\n      and\n        /* \"#utility.yul\":5619:5708   */\n      swap1\n      pop\n        /* \"#utility.yul\":5565:5714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5720:5846   */\n    tag_141:\n        /* \"#utility.yul\":5757:5764   */\n      0x00\n        /* \"#utility.yul\":5797:5839   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5790:5795   */\n      dup3\n        /* \"#utility.yul\":5786:5840   */\n      and\n        /* \"#utility.yul\":5775:5840   */\n      swap1\n      pop\n        /* \"#utility.yul\":5720:5846   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5852:5929   */\n    tag_113:\n        /* \"#utility.yul\":5889:5896   */\n      0x00\n        /* \"#utility.yul\":5918:5923   */\n      dup2\n        /* \"#utility.yul\":5907:5923   */\n      swap1\n      pop\n        /* \"#utility.yul\":5852:5929   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5935:6075   */\n    tag_101:\n        /* \"#utility.yul\":5999:6008   */\n      0x00\n        /* \"#utility.yul\":6032:6069   */\n      tag_146\n        /* \"#utility.yul\":6063:6068   */\n      dup3\n        /* \"#utility.yul\":6032:6069   */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6019:6069   */\n      swap1\n      pop\n        /* \"#utility.yul\":5935:6075   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6081:6222   */\n    tag_105:\n        /* \"#utility.yul\":6146:6155   */\n      0x00\n        /* \"#utility.yul\":6179:6216   */\n      tag_149\n        /* \"#utility.yul\":6210:6215   */\n      dup3\n        /* \"#utility.yul\":6179:6216   */\n      tag_147\n      jump\t// in\n    tag_149:\n        /* \"#utility.yul\":6166:6216   */\n      swap1\n      pop\n        /* \"#utility.yul\":6081:6222   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6228:6370   */\n    tag_109:\n        /* \"#utility.yul\":6294:6303   */\n      0x00\n        /* \"#utility.yul\":6327:6364   */\n      tag_151\n        /* \"#utility.yul\":6358:6363   */\n      dup3\n        /* \"#utility.yul\":6327:6364   */\n      tag_147\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6314:6364   */\n      swap1\n      pop\n        /* \"#utility.yul\":6228:6370   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6376:6502   */\n    tag_147:\n        /* \"#utility.yul\":6426:6435   */\n      0x00\n        /* \"#utility.yul\":6459:6496   */\n      tag_153\n        /* \"#utility.yul\":6490:6495   */\n      dup3\n        /* \"#utility.yul\":6459:6496   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6446:6496   */\n      swap1\n      pop\n        /* \"#utility.yul\":6376:6502   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6508:6621   */\n    tag_154:\n        /* \"#utility.yul\":6558:6567   */\n      0x00\n        /* \"#utility.yul\":6591:6615   */\n      tag_156\n        /* \"#utility.yul\":6609:6614   */\n      dup3\n        /* \"#utility.yul\":6591:6615   */\n      tag_141\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":6578:6615   */\n      swap1\n      pop\n        /* \"#utility.yul\":6508:6621   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6627:6781   */\n    tag_59:\n        /* \"#utility.yul\":6711:6717   */\n      dup3\n        /* \"#utility.yul\":6706:6709   */\n      dup2\n        /* \"#utility.yul\":6701:6704   */\n      dup4\n        /* \"#utility.yul\":6688:6718   */\n      calldatacopy\n        /* \"#utility.yul\":6773:6774   */\n      0x00\n        /* \"#utility.yul\":6764:6770   */\n      dup4\n        /* \"#utility.yul\":6759:6762   */\n      dup4\n        /* \"#utility.yul\":6755:6771   */\n      add\n        /* \"#utility.yul\":6748:6775   */\n      mstore\n        /* \"#utility.yul\":6627:6781   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6787:7068   */\n    tag_131:\n        /* \"#utility.yul\":6870:6897   */\n      tag_159\n        /* \"#utility.yul\":6892:6896   */\n      dup3\n        /* \"#utility.yul\":6870:6897   */\n      tag_138\n      jump\t// in\n    tag_159:\n        /* \"#utility.yul\":6862:6868   */\n      dup2\n        /* \"#utility.yul\":6858:6898   */\n      add\n        /* \"#utility.yul\":7000:7006   */\n      dup2\n        /* \"#utility.yul\":6988:6998   */\n      dup2\n        /* \"#utility.yul\":6985:7007   */\n      lt\n        /* \"#utility.yul\":6964:6982   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6952:6962   */\n      dup3\n        /* \"#utility.yul\":6949:6983   */\n      gt\n        /* \"#utility.yul\":6946:7008   */\n      or\n        /* \"#utility.yul\":6943:7031   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":7011:7029   */\n      tag_161\n      tag_136\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":6943:7031   */\n    tag_160:\n        /* \"#utility.yul\":7051:7061   */\n      dup1\n        /* \"#utility.yul\":7047:7049   */\n      0x40\n        /* \"#utility.yul\":7040:7062   */\n      mstore\n        /* \"#utility.yul\":6830:7068   */\n      pop\n        /* \"#utility.yul\":6787:7068   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7074:7254   */\n    tag_136:\n        /* \"#utility.yul\":7122:7199   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7119:7120   */\n      0x00\n        /* \"#utility.yul\":7112:7200   */\n      mstore\n        /* \"#utility.yul\":7219:7223   */\n      0x41\n        /* \"#utility.yul\":7216:7217   */\n      0x04\n        /* \"#utility.yul\":7209:7224   */\n      mstore\n        /* \"#utility.yul\":7243:7247   */\n      0x24\n        /* \"#utility.yul\":7240:7241   */\n      0x00\n        /* \"#utility.yul\":7233:7248   */\n      revert\n        /* \"#utility.yul\":7260:7377   */\n    tag_68:\n        /* \"#utility.yul\":7369:7370   */\n      0x00\n        /* \"#utility.yul\":7366:7367   */\n      dup1\n        /* \"#utility.yul\":7359:7371   */\n      revert\n        /* \"#utility.yul\":7383:7500   */\n    tag_57:\n        /* \"#utility.yul\":7492:7493   */\n      0x00\n        /* \"#utility.yul\":7489:7490   */\n      dup1\n        /* \"#utility.yul\":7482:7494   */\n      revert\n        /* \"#utility.yul\":7506:7623   */\n    tag_84:\n        /* \"#utility.yul\":7615:7616   */\n      0x00\n        /* \"#utility.yul\":7612:7613   */\n      dup1\n        /* \"#utility.yul\":7605:7617   */\n      revert\n        /* \"#utility.yul\":7629:7746   */\n    tag_77:\n        /* \"#utility.yul\":7738:7739   */\n      0x00\n        /* \"#utility.yul\":7735:7736   */\n      dup1\n        /* \"#utility.yul\":7728:7740   */\n      revert\n        /* \"#utility.yul\":7752:7854   */\n    tag_138:\n        /* \"#utility.yul\":7793:7799   */\n      0x00\n        /* \"#utility.yul\":7844:7846   */\n      0x1f\n        /* \"#utility.yul\":7840:7847   */\n      not\n        /* \"#utility.yul\":7835:7837   */\n      0x1f\n        /* \"#utility.yul\":7828:7833   */\n      dup4\n        /* \"#utility.yul\":7824:7838   */\n      add\n        /* \"#utility.yul\":7820:7848   */\n      and\n        /* \"#utility.yul\":7810:7848   */\n      swap1\n      pop\n        /* \"#utility.yul\":7752:7854   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7860:7982   */\n    tag_63:\n        /* \"#utility.yul\":7933:7957   */\n      tag_169\n        /* \"#utility.yul\":7951:7956   */\n      dup2\n        /* \"#utility.yul\":7933:7957   */\n      tag_93\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":7926:7931   */\n      dup2\n        /* \"#utility.yul\":7923:7958   */\n      eq\n        /* \"#utility.yul\":7913:7976   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":7972:7973   */\n      0x00\n        /* \"#utility.yul\":7969:7970   */\n      dup1\n        /* \"#utility.yul\":7962:7974   */\n      revert\n        /* \"#utility.yul\":7913:7976   */\n    tag_170:\n        /* \"#utility.yul\":7860:7982   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7988:8110   */\n    tag_73:\n        /* \"#utility.yul\":8061:8085   */\n      tag_172\n        /* \"#utility.yul\":8079:8084   */\n      dup2\n        /* \"#utility.yul\":8061:8085   */\n      tag_113\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":8054:8059   */\n      dup2\n        /* \"#utility.yul\":8051:8086   */\n      eq\n        /* \"#utility.yul\":8041:8104   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":8100:8101   */\n      0x00\n        /* \"#utility.yul\":8097:8098   */\n      dup1\n        /* \"#utility.yul\":8090:8102   */\n      revert\n        /* \"#utility.yul\":8041:8104   */\n    tag_173:\n        /* \"#utility.yul\":7988:8110   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212206bca565afda1a1bd9db540d009d879d13f8bc642d3aa27feb2f87c07681a5c4064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:5"
															},
															"nodeType": "YulIf",
															"src": "260:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:5",
														"type": ""
													}
												],
												"src": "156:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:5",
														"type": ""
													}
												],
												"src": "669:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:5",
														"type": ""
													}
												],
												"src": "750:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:5",
														"type": ""
													}
												],
												"src": "852:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:5"
															},
															"nodeType": "YulIf",
															"src": "1283:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:5",
														"type": ""
													}
												],
												"src": "1230:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610a54380380610a548339818101604052810190610032919061015a565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e8565b600081519050610154816101d1565b92915050565b60008060408385031215610171576101706101cc565b5b600061017f85828601610145565b925050602061019085828601610145565b9150509250929050565b60006101a5826101ac565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101da8161019a565b81146101e557600080fd5b50565b61085d806101f76000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c80636a9315b31161005b5780636a9315b31461012a57806380a5400114610148578063b8e33fb214610166578063fead3d6e1461018457610088565b8063401405e21461008d578063472343b9146100bd578063570ca735146100ee57806366bb863b1461010c575b600080fd5b6100a760048036038101906100a2919061047f565b6101a2565b6040516100b491906105e1565b60405180910390f35b6100d760048036038101906100d29190610516565b6102ad565b6040516100e59291906105b8565b60405180910390f35b6100f6610301565b604051610103919061059d565b60405180910390f35b610114610327565b604051610121919061059d565b60405180910390f35b61013261034d565b60405161013f919061059d565b60405180910390f35b610150610373565b60405161015d91906105fc565b60405180910390f35b61016e610399565b60405161017b9190610617565b60405180910390f35b61018c6103bf565b6040516101999190610632565b60405180910390f35b600083600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555063401405e260e01b905095945050505050565b6000806005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660008581526020019081526020016000205491509150915091565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006103f86103f384610672565b61064d565b905082815260208101848484011115610414576104136107d9565b5b61041f848285610765565b509392505050565b600081359050610436816107f9565b92915050565b600082601f830112610451576104506107d4565b5b81356104618482602086016103e5565b91505092915050565b60008135905061047981610810565b92915050565b600080600080600060a0868803121561049b5761049a6107e3565b5b60006104a988828901610427565b95505060206104ba88828901610427565b94505060406104cb88828901610427565b93505060606104dc8882890161046a565b925050608086013567ffffffffffffffff8111156104fd576104fc6107de565b5b6105098882890161043c565b9150509295509295909350565b60006020828403121561052c5761052b6107e3565b5b600061053a8482850161046a565b91505092915050565b61054c816106a3565b82525050565b61055b816106b5565b82525050565b61056a8161070b565b82525050565b6105798161071d565b82525050565b6105888161072f565b82525050565b61059781610701565b82525050565b60006020820190506105b26000830184610543565b92915050565b60006040820190506105cd6000830185610543565b6105da602083018461058e565b9392505050565b60006020820190506105f66000830184610552565b92915050565b60006020820190506106116000830184610561565b92915050565b600060208201905061062c6000830184610570565b92915050565b6000602082019050610647600083018461057f565b92915050565b6000610657610668565b90506106638282610774565b919050565b6000604051905090565b600067ffffffffffffffff82111561068d5761068c6107a5565b5b610696826107e8565b9050602081019050919050565b60006106ae826106e1565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061071682610741565b9050919050565b600061072882610741565b9050919050565b600061073a82610741565b9050919050565b600061074c82610753565b9050919050565b600061075e826106e1565b9050919050565b82818337600083830152505050565b61077d826107e8565b810181811067ffffffffffffffff8211171561079c5761079b6107a5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610802816106a3565b811461080d57600080fd5b50565b61081981610701565b811461082457600080fd5b5056fea26469706673582212206bca565afda1a1bd9db540d009d879d13f8bc642d3aa27feb2f87c07681a5c4064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xA54 CODESIZE SUB DUP1 PUSH2 0xA54 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x154 DUP2 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x1CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F DUP6 DUP3 DUP7 ADD PUSH2 0x145 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x190 DUP6 DUP3 DUP7 ADD PUSH2 0x145 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5 DUP3 PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x19A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x85D DUP1 PUSH2 0x1F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A9315B3 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6A9315B3 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x184 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x401405E2 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x472343B9 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x10C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP3 SWAP2 SWAP1 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH4 0x401405E2 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8 PUSH2 0x3F3 DUP5 PUSH2 0x672 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x414 JUMPI PUSH2 0x413 PUSH2 0x7D9 JUMP JUMPDEST JUMPDEST PUSH2 0x41F DUP5 DUP3 DUP6 PUSH2 0x765 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x436 DUP2 PUSH2 0x7F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x451 JUMPI PUSH2 0x450 PUSH2 0x7D4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x461 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x479 DUP2 PUSH2 0x810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x49B JUMPI PUSH2 0x49A PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP9 DUP3 DUP10 ADD PUSH2 0x427 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4BA DUP9 DUP3 DUP10 ADD PUSH2 0x427 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4CB DUP9 DUP3 DUP10 ADD PUSH2 0x427 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4DC DUP9 DUP3 DUP10 ADD PUSH2 0x46A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x7DE JUMP JUMPDEST JUMPDEST PUSH2 0x509 DUP9 DUP3 DUP10 ADD PUSH2 0x43C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52C JUMPI PUSH2 0x52B PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP5 DUP3 DUP6 ADD PUSH2 0x46A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x6A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x55B DUP2 PUSH2 0x6B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x70B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x579 DUP2 PUSH2 0x71D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x72F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x543 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5CD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x5DA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x58E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x611 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x647 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x657 PUSH2 0x668 JUMP JUMPDEST SWAP1 POP PUSH2 0x663 DUP3 DUP3 PUSH2 0x774 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x68D JUMPI PUSH2 0x68C PUSH2 0x7A5 JUMP JUMPDEST JUMPDEST PUSH2 0x696 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP3 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 DUP3 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x728 DUP3 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP3 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74C DUP3 PUSH2 0x753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75E DUP3 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x77D DUP3 PUSH2 0x7E8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x79C JUMPI PUSH2 0x79B PUSH2 0x7A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x802 DUP2 PUSH2 0x6A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x819 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xCA565AFDA1A1BD9DB540D009 0xD8 PUSH26 0xD13F8BC642D3AA27FEB2F87C07681A5C4064736F6C6343000807 STOP CALLER ",
							"sourceMap": "341:1141:4:-:0;;;526:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;614:12:4;594:9;;:33;;;;;;;;;;;;;;;;;;668:12;638:18;;:43;;;;;;;;;;;;;;;;;;713:14;692:11;;:36;;;;;;;;;;;;;;;;;;758:12;739:16;;:31;;;;;;;;;;;;;;;;;;526:262;;341:1141;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;341:1141:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getStakes_327": {
									"entryPoint": 685,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@nftcontract_331": {
									"entryPoint": 845,
									"id": 331,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@onERC721Received_365": {
									"entryPoint": 418,
									"id": 365,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@operator_329": {
									"entryPoint": 769,
									"id": 329,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNFTAddress_271": {
									"entryPoint": 807,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNFT_266": {
									"entryPoint": 921,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNftFunctions_269": {
									"entryPoint": 959,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentToken_263": {
									"entryPoint": 883,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 997,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1063,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1084,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1130,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 1151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1302,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1347,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 1377,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack": {
									"entryPoint": 1392,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack": {
									"entryPoint": 1407,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1437,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1464,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1505,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 1532,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed": {
									"entryPoint": 1559,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed": {
									"entryPoint": 1586,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1640,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1650,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1699,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1717,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1761,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1793,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 1803,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$233_to_t_address": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTGame_$258_to_t_address": {
									"entryPoint": 1839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1857,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1875,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1893,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1957,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2004,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2009,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2014,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2019,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2024,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 2041,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2064,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8113:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:5"
															},
															"nodeType": "YulIf",
															"src": "249:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:5",
														"type": ""
													}
												],
												"src": "7:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"src": "423:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:5"
															},
															"nodeType": "YulIf",
															"src": "652:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:5",
														"type": ""
													}
												],
												"src": "581:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:5",
														"type": ""
													}
												],
												"src": "925:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1213:946:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1260:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1262:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1262:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1262:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1234:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1243:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1230:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1230:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1255:3:5",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1226:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1226:33:5"
															},
															"nodeType": "YulIf",
															"src": "1223:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1353:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1368:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1382:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1372:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1397:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1432:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1443:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1428:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1428:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1452:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1407:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1407:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1397:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1480:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1509:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1525:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1560:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1571:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1556:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1556:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1580:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1535:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1535:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1525:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1608:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1623:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1637:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1627:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1653:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1688:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1699:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1684:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1684:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1708:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1663:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1663:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1653:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1736:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1751:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1765:2:5",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1755:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1781:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1816:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1827:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1812:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1812:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1836:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1791:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1791:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1781:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1864:288:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1879:47:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1910:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1921:3:5",
																						"type": "",
																						"value": "128"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1906:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1906:19:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1893:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1893:33:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1883:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1973:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1975:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1975:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1975:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1945:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1953:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1942:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1939:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2070:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2114:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2125:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2110:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2110:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2134:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "2080:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2080:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nodeType": "YulIdentifier",
																			"src": "2070:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1151:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1162:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1174:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1182:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1190:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1198:6:5",
														"type": ""
													},
													{
														"name": "value4",
														"nodeType": "YulTypedName",
														"src": "1206:6:5",
														"type": ""
													}
												],
												"src": "1070:1089:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2231:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2277:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2279:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2279:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2279:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2252:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2261:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2248:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2248:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2273:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2244:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2244:32:5"
															},
															"nodeType": "YulIf",
															"src": "2241:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2370:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2385:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2399:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2389:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2414:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2449:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2460:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2445:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2445:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2469:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2424:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2424:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2414:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2201:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2212:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2224:6:5",
														"type": ""
													}
												],
												"src": "2165:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2565:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2582:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2605:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2587:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2587:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2575:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2575:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2575:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2553:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2560:3:5",
														"type": ""
													}
												],
												"src": "2500:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2687:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2704:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2726:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2709:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2709:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2697:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2697:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2697:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2675:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2682:3:5",
														"type": ""
													}
												],
												"src": "2624:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2824:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2841:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2891:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2846:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2846:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2834:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2834:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2834:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2812:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2819:3:5",
														"type": ""
													}
												],
												"src": "2745:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2990:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3007:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3058:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$233_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3012:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3012:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3000:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3000:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3000:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2978:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2985:3:5",
														"type": ""
													}
												],
												"src": "2910:161:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3158:82:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3175:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3227:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTGame_$258_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3180:46:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3180:53:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3168:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3168:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3168:66:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3146:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3153:3:5",
														"type": ""
													}
												],
												"src": "3077:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3311:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3328:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3351:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3333:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3333:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3321:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3321:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3321:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3299:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3306:3:5",
														"type": ""
													}
												],
												"src": "3246:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3468:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3478:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3490:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3501:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3486:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3486:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3478:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3558:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3571:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3582:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3567:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3567:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3514:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3514:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3514:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3440:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3452:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3463:4:5",
														"type": ""
													}
												],
												"src": "3370:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3724:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3734:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3746:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3757:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3742:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3742:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3734:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3814:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3827:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3838:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3823:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3823:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3770:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3770:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3770:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3895:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3908:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3919:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3904:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3904:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3851:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3851:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3851:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3688:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3700:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3708:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3719:4:5",
														"type": ""
													}
												],
												"src": "3598:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4032:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4042:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4054:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4065:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4050:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4050:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4042:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4120:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4133:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4144:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4129:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4129:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4078:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4078:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4078:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4004:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4016:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4027:4:5",
														"type": ""
													}
												],
												"src": "3936:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4272:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4282:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4294:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4305:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4290:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4290:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4282:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4376:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4389:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4400:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4385:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4385:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4318:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4318:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4318:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4244:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4256:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4267:4:5",
														"type": ""
													}
												],
												"src": "4160:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4529:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4539:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4551:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4562:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4547:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4547:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4539:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4634:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4647:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4658:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4643:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4643:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4575:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4575:86:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4575:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4501:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4513:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4524:4:5",
														"type": ""
													}
												],
												"src": "4416:252:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4788:140:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4798:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4810:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4821:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4806:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4806:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4798:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4894:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4907:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4918:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4903:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4903:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4834:59:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4834:87:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4834:87:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4760:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4772:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4783:4:5",
														"type": ""
													}
												],
												"src": "4674:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4975:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4985:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4995:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4995:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4985:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "5044:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5052:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "5024:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5024:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5024:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4959:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4968:6:5",
														"type": ""
													}
												],
												"src": "4934:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5109:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5119:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5135:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5129:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5129:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5119:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5102:6:5",
														"type": ""
													}
												],
												"src": "5069:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5216:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5321:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5323:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5323:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5323:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5293:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5301:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5290:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5290:30:5"
															},
															"nodeType": "YulIf",
															"src": "5287:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5353:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5383:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5361:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5361:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5353:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5427:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5439:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5445:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5435:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5435:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5427:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5200:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5211:4:5",
														"type": ""
													}
												],
												"src": "5150:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5508:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5518:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5547:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5529:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5529:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5518:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5490:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5500:7:5",
														"type": ""
													}
												],
												"src": "5463:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5609:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5619:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5634:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5641:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5630:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5630:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5619:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5591:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5601:7:5",
														"type": ""
													}
												],
												"src": "5565:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5765:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5775:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5790:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5797:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5786:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5786:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5775:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5747:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5757:7:5",
														"type": ""
													}
												],
												"src": "5720:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5897:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5907:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "5918:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5907:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5879:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5889:7:5",
														"type": ""
													}
												],
												"src": "5852:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6009:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6019:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6063:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6032:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6032:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6019:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5989:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "5999:9:5",
														"type": ""
													}
												],
												"src": "5935:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6156:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6166:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6210:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6179:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6179:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6166:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$233_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6136:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6146:9:5",
														"type": ""
													}
												],
												"src": "6081:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6304:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6314:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6358:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6327:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6327:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6314:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTGame_$258_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6284:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6294:9:5",
														"type": ""
													}
												],
												"src": "6228:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6436:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6446:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6490:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6459:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6459:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6446:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6416:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6426:9:5",
														"type": ""
													}
												],
												"src": "6376:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6568:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6578:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6609:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6591:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6578:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6548:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6558:9:5",
														"type": ""
													}
												],
												"src": "6508:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6678:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6701:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6706:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6711:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6688:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6688:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6688:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6759:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6764:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6755:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6755:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6773:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6748:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6748:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6748:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6660:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6665:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6670:6:5",
														"type": ""
													}
												],
												"src": "6627:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6830:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "6840:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6862:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "6892:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "6870:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6870:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6858:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6858:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "6844:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7009:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7011:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7011:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7011:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6952:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6964:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "6949:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6949:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "6988:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7000:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "6985:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6985:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "6946:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6946:62:5"
															},
															"nodeType": "YulIf",
															"src": "6943:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7047:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7051:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7040:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7040:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7040:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6816:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6824:4:5",
														"type": ""
													}
												],
												"src": "6787:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7102:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7119:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7122:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7112:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7112:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7112:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7216:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7219:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7209:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7209:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7209:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7240:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7243:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7233:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7233:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7233:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7074:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7349:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7366:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7369:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7359:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7359:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7359:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7260:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7472:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7489:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7492:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7482:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7482:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7482:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7383:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7595:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7612:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7615:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7605:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7605:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7605:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7506:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7718:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7735:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7738:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7728:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7728:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7728:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7629:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7800:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7810:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7828:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7835:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7824:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7824:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7844:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "7840:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7840:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7820:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7820:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "7810:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7783:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "7793:6:5",
														"type": ""
													}
												],
												"src": "7752:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7903:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7960:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7969:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "7972:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "7962:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7962:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7962:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7926:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "7951:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "7933:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "7933:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "7923:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7923:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7916:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7916:43:5"
															},
															"nodeType": "YulIf",
															"src": "7913:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7896:5:5",
														"type": ""
													}
												],
												"src": "7860:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8031:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8088:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8097:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8100:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8090:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8090:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8090:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8054:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8079:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8061:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8061:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8051:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8051:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8044:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:43:5"
															},
															"nodeType": "YulIf",
															"src": "8041:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8024:5:5",
														"type": ""
													}
												],
												"src": "7988:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 128))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value4 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$233_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTGame_$258_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$233_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_INFTGame_$258_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100885760003560e01c80636a9315b31161005b5780636a9315b31461012a57806380a5400114610148578063b8e33fb214610166578063fead3d6e1461018457610088565b8063401405e21461008d578063472343b9146100bd578063570ca735146100ee57806366bb863b1461010c575b600080fd5b6100a760048036038101906100a2919061047f565b6101a2565b6040516100b491906105e1565b60405180910390f35b6100d760048036038101906100d29190610516565b6102ad565b6040516100e59291906105b8565b60405180910390f35b6100f6610301565b604051610103919061059d565b60405180910390f35b610114610327565b604051610121919061059d565b60405180910390f35b61013261034d565b60405161013f919061059d565b60405180910390f35b610150610373565b60405161015d91906105fc565b60405180910390f35b61016e610399565b60405161017b9190610617565b60405180910390f35b61018c6103bf565b6040516101999190610632565b60405180910390f35b600083600860006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555063401405e260e01b905095945050505050565b6000806005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660008581526020019081526020016000205491509150915091565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600860009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006103f86103f384610672565b61064d565b905082815260208101848484011115610414576104136107d9565b5b61041f848285610765565b509392505050565b600081359050610436816107f9565b92915050565b600082601f830112610451576104506107d4565b5b81356104618482602086016103e5565b91505092915050565b60008135905061047981610810565b92915050565b600080600080600060a0868803121561049b5761049a6107e3565b5b60006104a988828901610427565b95505060206104ba88828901610427565b94505060406104cb88828901610427565b93505060606104dc8882890161046a565b925050608086013567ffffffffffffffff8111156104fd576104fc6107de565b5b6105098882890161043c565b9150509295509295909350565b60006020828403121561052c5761052b6107e3565b5b600061053a8482850161046a565b91505092915050565b61054c816106a3565b82525050565b61055b816106b5565b82525050565b61056a8161070b565b82525050565b6105798161071d565b82525050565b6105888161072f565b82525050565b61059781610701565b82525050565b60006020820190506105b26000830184610543565b92915050565b60006040820190506105cd6000830185610543565b6105da602083018461058e565b9392505050565b60006020820190506105f66000830184610552565b92915050565b60006020820190506106116000830184610561565b92915050565b600060208201905061062c6000830184610570565b92915050565b6000602082019050610647600083018461057f565b92915050565b6000610657610668565b90506106638282610774565b919050565b6000604051905090565b600067ffffffffffffffff82111561068d5761068c6107a5565b5b610696826107e8565b9050602081019050919050565b60006106ae826106e1565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061071682610741565b9050919050565b600061072882610741565b9050919050565b600061073a82610741565b9050919050565b600061074c82610753565b9050919050565b600061075e826106e1565b9050919050565b82818337600083830152505050565b61077d826107e8565b810181811067ffffffffffffffff8211171561079c5761079b6107a5565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b610802816106a3565b811461080d57600080fd5b50565b61081981610701565b811461082457600080fd5b5056fea26469706673582212206bca565afda1a1bd9db540d009d879d13f8bc642d3aa27feb2f87c07681a5c4064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x88 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x6A9315B3 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x6A9315B3 EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x148 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x184 JUMPI PUSH2 0x88 JUMP JUMPDEST DUP1 PUSH4 0x401405E2 EQ PUSH2 0x8D JUMPI DUP1 PUSH4 0x472343B9 EQ PUSH2 0xBD JUMPI DUP1 PUSH4 0x570CA735 EQ PUSH2 0xEE JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x10C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xA7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xA2 SWAP2 SWAP1 PUSH2 0x47F JUMP JUMPDEST PUSH2 0x1A2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xB4 SWAP2 SWAP1 PUSH2 0x5E1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xD2 SWAP2 SWAP1 PUSH2 0x516 JUMP JUMPDEST PUSH2 0x2AD JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xE5 SWAP3 SWAP2 SWAP1 PUSH2 0x5B8 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xF6 PUSH2 0x301 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x103 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x114 PUSH2 0x327 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x132 PUSH2 0x34D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x59D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x150 PUSH2 0x373 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x15D SWAP2 SWAP1 PUSH2 0x5FC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x16E PUSH2 0x399 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x17B SWAP2 SWAP1 PUSH2 0x617 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x18C PUSH2 0x3BF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x199 SWAP2 SWAP1 PUSH2 0x632 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x8 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 PUSH1 0x7 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH4 0x401405E2 PUSH1 0xE0 SHL SWAP1 POP SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3F8 PUSH2 0x3F3 DUP5 PUSH2 0x672 JUMP JUMPDEST PUSH2 0x64D JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x414 JUMPI PUSH2 0x413 PUSH2 0x7D9 JUMP JUMPDEST JUMPDEST PUSH2 0x41F DUP5 DUP3 DUP6 PUSH2 0x765 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x436 DUP2 PUSH2 0x7F9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x451 JUMPI PUSH2 0x450 PUSH2 0x7D4 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x461 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3E5 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x479 DUP2 PUSH2 0x810 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x49B JUMPI PUSH2 0x49A PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4A9 DUP9 DUP3 DUP10 ADD PUSH2 0x427 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x4BA DUP9 DUP3 DUP10 ADD PUSH2 0x427 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x4CB DUP9 DUP3 DUP10 ADD PUSH2 0x427 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x4DC DUP9 DUP3 DUP10 ADD PUSH2 0x46A JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 DUP7 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x4FD JUMPI PUSH2 0x4FC PUSH2 0x7DE JUMP JUMPDEST JUMPDEST PUSH2 0x509 DUP9 DUP3 DUP10 ADD PUSH2 0x43C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52C JUMPI PUSH2 0x52B PUSH2 0x7E3 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x53A DUP5 DUP3 DUP6 ADD PUSH2 0x46A JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x54C DUP2 PUSH2 0x6A3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x55B DUP2 PUSH2 0x6B5 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x56A DUP2 PUSH2 0x70B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x579 DUP2 PUSH2 0x71D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x588 DUP2 PUSH2 0x72F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x597 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5B2 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x543 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x5CD PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x543 JUMP JUMPDEST PUSH2 0x5DA PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x58E JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x5F6 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x552 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x611 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x561 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x62C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x570 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x647 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x657 PUSH2 0x668 JUMP JUMPDEST SWAP1 POP PUSH2 0x663 DUP3 DUP3 PUSH2 0x774 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x68D JUMPI PUSH2 0x68C PUSH2 0x7A5 JUMP JUMPDEST JUMPDEST PUSH2 0x696 DUP3 PUSH2 0x7E8 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6AE DUP3 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x716 DUP3 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x728 DUP3 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x73A DUP3 PUSH2 0x741 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74C DUP3 PUSH2 0x753 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75E DUP3 PUSH2 0x6E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x77D DUP3 PUSH2 0x7E8 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x79C JUMPI PUSH2 0x79B PUSH2 0x7A5 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x802 DUP2 PUSH2 0x6A3 JUMP JUMPDEST DUP2 EQ PUSH2 0x80D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x819 DUP2 PUSH2 0x701 JUMP JUMPDEST DUP2 EQ PUSH2 0x824 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH12 0xCA565AFDA1A1BD9DB540D009 0xD8 PUSH26 0xD13F8BC642D3AA27FEB2F87C07681A5C4064736F6C6343000807 STOP CALLER ",
							"sourceMap": "341:1141:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1130:314;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;895:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;1059:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1089:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;416:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1130:314;1272:6;1305:12;1291:11;;:26;;;;;;;;;;;;;;;;;;1339:9;1328:8;;:20;;;;;;;;;;;;;;;;;;1380:8;;;;;;;;;;;1359:9;:18;1369:7;1359:18;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1406:30;;;1399:37;;1130:314;;;;;;;:::o;895:158::-;953:11;966:12;998:9;:19;1008:8;998:19;;;;;;;;;;;;;;;;;;;;;1019:15;:25;1035:8;1019:25;;;;;;;;;;;;990:55;;;;895:158;;;:::o;1059:23::-;;;;;;;;;;;;;:::o;488:31::-;;;;;;;;;;;;;:::o;1089:26::-;;;;;;;;;;;;;:::o;384:25::-;;;;;;;;;;;;;:::o;416:24::-;;;;;;;;;;;;;:::o;447:34::-;;;;;;;;;;;;;:::o;7:410:5:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:1089::-;1174:6;1182;1190;1198;1206;1255:3;1243:9;1234:7;1230:23;1226:33;1223:120;;;1262:79;;:::i;:::-;1223:120;1382:1;1407:53;1452:7;1443:6;1432:9;1428:22;1407:53;:::i;:::-;1397:63;;1353:117;1509:2;1535:53;1580:7;1571:6;1560:9;1556:22;1535:53;:::i;:::-;1525:63;;1480:118;1637:2;1663:53;1708:7;1699:6;1688:9;1684:22;1663:53;:::i;:::-;1653:63;;1608:118;1765:2;1791:53;1836:7;1827:6;1816:9;1812:22;1791:53;:::i;:::-;1781:63;;1736:118;1921:3;1910:9;1906:19;1893:33;1953:18;1945:6;1942:30;1939:117;;;1975:79;;:::i;:::-;1939:117;2080:62;2134:7;2125:6;2114:9;2110:22;2080:62;:::i;:::-;2070:72;;1864:288;1070:1089;;;;;;;;:::o;2165:329::-;2224:6;2273:2;2261:9;2252:7;2248:23;2244:32;2241:119;;;2279:79;;:::i;:::-;2241:119;2399:1;2424:53;2469:7;2460:6;2449:9;2445:22;2424:53;:::i;:::-;2414:63;;2370:117;2165:329;;;;:::o;2500:118::-;2587:24;2605:5;2587:24;:::i;:::-;2582:3;2575:37;2500:118;;:::o;2624:115::-;2709:23;2726:5;2709:23;:::i;:::-;2704:3;2697:36;2624:115;;:::o;2745:159::-;2846:51;2891:5;2846:51;:::i;:::-;2841:3;2834:64;2745:159;;:::o;2910:161::-;3012:52;3058:5;3012:52;:::i;:::-;3007:3;3000:65;2910:161;;:::o;3077:163::-;3180:53;3227:5;3180:53;:::i;:::-;3175:3;3168:66;3077:163;;:::o;3246:118::-;3333:24;3351:5;3333:24;:::i;:::-;3328:3;3321:37;3246:118;;:::o;3370:222::-;3463:4;3501:2;3490:9;3486:18;3478:26;;3514:71;3582:1;3571:9;3567:17;3558:6;3514:71;:::i;:::-;3370:222;;;;:::o;3598:332::-;3719:4;3757:2;3746:9;3742:18;3734:26;;3770:71;3838:1;3827:9;3823:17;3814:6;3770:71;:::i;:::-;3851:72;3919:2;3908:9;3904:18;3895:6;3851:72;:::i;:::-;3598:332;;;;;:::o;3936:218::-;4027:4;4065:2;4054:9;4050:18;4042:26;;4078:69;4144:1;4133:9;4129:17;4120:6;4078:69;:::i;:::-;3936:218;;;;:::o;4160:250::-;4267:4;4305:2;4294:9;4290:18;4282:26;;4318:85;4400:1;4389:9;4385:17;4376:6;4318:85;:::i;:::-;4160:250;;;;:::o;4416:252::-;4524:4;4562:2;4551:9;4547:18;4539:26;;4575:86;4658:1;4647:9;4643:17;4634:6;4575:86;:::i;:::-;4416:252;;;;:::o;4674:254::-;4783:4;4821:2;4810:9;4806:18;4798:26;;4834:87;4918:1;4907:9;4903:17;4894:6;4834:87;:::i;:::-;4674:254;;;;:::o;4934:129::-;4968:6;4995:20;;:::i;:::-;4985:30;;5024:33;5052:4;5044:6;5024:33;:::i;:::-;4934:129;;;:::o;5069:75::-;5102:6;5135:2;5129:9;5119:19;;5069:75;:::o;5150:307::-;5211:4;5301:18;5293:6;5290:30;5287:56;;;5323:18;;:::i;:::-;5287:56;5361:29;5383:6;5361:29;:::i;:::-;5353:37;;5445:4;5439;5435:15;5427:23;;5150:307;;;:::o;5463:96::-;5500:7;5529:24;5547:5;5529:24;:::i;:::-;5518:35;;5463:96;;;:::o;5565:149::-;5601:7;5641:66;5634:5;5630:78;5619:89;;5565:149;;;:::o;5720:126::-;5757:7;5797:42;5790:5;5786:54;5775:65;;5720:126;;;:::o;5852:77::-;5889:7;5918:5;5907:16;;5852:77;;;:::o;5935:140::-;5999:9;6032:37;6063:5;6032:37;:::i;:::-;6019:50;;5935:140;;;:::o;6081:141::-;6146:9;6179:37;6210:5;6179:37;:::i;:::-;6166:50;;6081:141;;;:::o;6228:142::-;6294:9;6327:37;6358:5;6327:37;:::i;:::-;6314:50;;6228:142;;;:::o;6376:126::-;6426:9;6459:37;6490:5;6459:37;:::i;:::-;6446:50;;6376:126;;;:::o;6508:113::-;6558:9;6591:24;6609:5;6591:24;:::i;:::-;6578:37;;6508:113;;;:::o;6627:154::-;6711:6;6706:3;6701;6688:30;6773:1;6764:6;6759:3;6755:16;6748:27;6627:154;;;:::o;6787:281::-;6870:27;6892:4;6870:27;:::i;:::-;6862:6;6858:40;7000:6;6988:10;6985:22;6964:18;6952:10;6949:34;6946:62;6943:88;;;7011:18;;:::i;:::-;6943:88;7051:10;7047:2;7040:22;6830:238;6787:281;;:::o;7074:180::-;7122:77;7119:1;7112:88;7219:4;7216:1;7209:15;7243:4;7240:1;7233:15;7260:117;7369:1;7366;7359:12;7383:117;7492:1;7489;7482:12;7506:117;7615:1;7612;7605:12;7629:117;7738:1;7735;7728:12;7752:102;7793:6;7844:2;7840:7;7835:2;7828:5;7824:14;7820:28;7810:38;;7752:102;;;:::o;7860:122::-;7933:24;7951:5;7933:24;:::i;:::-;7926:5;7923:35;7913:63;;7972:1;7969;7962:12;7913:63;7860:122;:::o;7988:::-;8061:24;8079:5;8061:24;:::i;:::-;8054:5;8051:35;8041:63;;8100:1;8097;8090:12;8041:63;7988:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "428200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStakes(uint256)": "infinite",
								"nftcontract()": "2514",
								"onERC721Received(address,address,address,uint256,bytes)": "infinite",
								"operator()": "2559",
								"parentNFT()": "2644",
								"parentNFTAddress()": "2581",
								"parentNftFunctions()": "2666",
								"parentToken()": "2622"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 1482,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 668,
									"end": 680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 713,
									"end": 727,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 758,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 1482,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212206bca565afda1a1bd9db540d009d879d13f8bc642d3aa27feb2f87c07681a5c4064736f6c63430008070033",
									".code": [
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "6A9315B3"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "6A9315B3"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "80A54001"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "B8E33FB2"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "FEAD3D6E"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "401405E2"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "472343B9"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "570CA735"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "66BB863B"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1482,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1278,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1305,
											"end": 1317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1291,
											"end": 1302,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1291,
											"end": 1317,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1348,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1336,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1328,
											"end": 1336,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1328,
											"end": 1348,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1380,
											"end": 1388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1368,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1369,
											"end": 1376,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1359,
											"end": 1388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1406,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "401405E2"
										},
										{
											"begin": 1406,
											"end": 1436,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1406,
											"end": 1436,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1399,
											"end": 1436,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP6",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1130,
											"end": 1444,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 953,
											"end": 964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 978,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1034,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1059,
											"end": 1082,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1115,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "55"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1174,
											"end": 1180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1182,
											"end": 1188,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1190,
											"end": 1196,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1204,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1212,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1255,
											"end": 1258,
											"name": "PUSH",
											"source": 5,
											"value": "A0"
										},
										{
											"begin": 1243,
											"end": 1252,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1234,
											"end": 1241,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1230,
											"end": 1253,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1262,
											"end": 1341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1223,
											"end": 1343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1382,
											"end": 1383,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1452,
											"end": 1459,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1443,
											"end": 1449,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1432,
											"end": 1441,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1428,
											"end": 1450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1407,
											"end": 1460,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1397,
											"end": 1460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1353,
											"end": 1470,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1509,
											"end": 1511,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1580,
											"end": 1587,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1571,
											"end": 1577,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1569,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1556,
											"end": 1578,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "tag",
											"source": 5,
											"value": "79"
										},
										{
											"begin": 1535,
											"end": 1588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1525,
											"end": 1588,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1480,
											"end": 1598,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1637,
											"end": 1639,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1708,
											"end": 1715,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1699,
											"end": 1705,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1688,
											"end": 1697,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1684,
											"end": 1706,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1663,
											"end": 1716,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1716,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1653,
											"end": 1716,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1608,
											"end": 1726,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1765,
											"end": 1767,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1836,
											"end": 1843,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1827,
											"end": 1833,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1816,
											"end": 1825,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 1812,
											"end": 1834,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1791,
											"end": 1844,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1781,
											"end": 1844,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1736,
											"end": 1854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1921,
											"end": 1924,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1910,
											"end": 1919,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 1906,
											"end": 1925,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1893,
											"end": 1926,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1971,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1945,
											"end": 1951,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1972,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1975,
											"end": 2054,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1939,
											"end": 2056,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2134,
											"end": 2141,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 2125,
											"end": 2131,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2114,
											"end": 2123,
											"name": "DUP10",
											"source": 5
										},
										{
											"begin": 2110,
											"end": 2132,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2080,
											"end": 2142,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2142,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2070,
											"end": 2142,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1864,
											"end": 2152,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2159,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2165,
											"end": 2494,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2165,
											"end": 2494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2230,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2273,
											"end": 2275,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2261,
											"end": 2270,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2252,
											"end": 2259,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2248,
											"end": 2271,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2244,
											"end": 2276,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2360,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2360,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2241,
											"end": 2360,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2279,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2279,
											"end": 2358,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 2279,
											"end": 2358,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2279,
											"end": 2358,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 2279,
											"end": 2358,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2241,
											"end": 2360,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2241,
											"end": 2360,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2399,
											"end": 2400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2424,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2469,
											"end": 2476,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2460,
											"end": 2466,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2458,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2445,
											"end": 2467,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2424,
											"end": 2477,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 2424,
											"end": 2477,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2424,
											"end": 2477,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2424,
											"end": 2477,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2477,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2414,
											"end": 2477,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2370,
											"end": 2487,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2494,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2494,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2165,
											"end": 2494,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2500,
											"end": 2618,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2500,
											"end": 2618,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2605,
											"end": 2610,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2587,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2582,
											"end": 2585,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2575,
											"end": 2612,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2618,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2500,
											"end": 2618,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2624,
											"end": 2739,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2624,
											"end": 2739,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2726,
											"end": 2731,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2709,
											"end": 2732,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2704,
											"end": 2707,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2697,
											"end": 2733,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2739,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2624,
											"end": 2739,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2745,
											"end": 2904,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2745,
											"end": 2904,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2846,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2891,
											"end": 2896,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2846,
											"end": 2897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2846,
											"end": 2897,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2846,
											"end": 2897,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2846,
											"end": 2897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2844,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2834,
											"end": 2898,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2904,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2745,
											"end": 2904,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2910,
											"end": 3071,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2910,
											"end": 3071,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3058,
											"end": 3063,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 3012,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3007,
											"end": 3010,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3000,
											"end": 3065,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 3071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 3071,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2910,
											"end": 3071,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3077,
											"end": 3240,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3077,
											"end": 3240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3227,
											"end": 3232,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3233,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 3180,
											"end": 3233,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3180,
											"end": 3233,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3180,
											"end": 3233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3178,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3168,
											"end": 3234,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3077,
											"end": 3240,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3246,
											"end": 3364,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3246,
											"end": 3364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3351,
											"end": 3356,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3333,
											"end": 3357,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3333,
											"end": 3357,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3333,
											"end": 3357,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3333,
											"end": 3357,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3328,
											"end": 3331,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3321,
											"end": 3358,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3246,
											"end": 3364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3246,
											"end": 3364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3246,
											"end": 3364,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3463,
											"end": 3467,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3501,
											"end": 3503,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3490,
											"end": 3499,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3486,
											"end": 3504,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3504,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3478,
											"end": 3504,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3582,
											"end": 3583,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3571,
											"end": 3580,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3567,
											"end": 3584,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3558,
											"end": 3564,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3514,
											"end": 3585,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3514,
											"end": 3585,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3514,
											"end": 3585,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 3514,
											"end": 3585,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3370,
											"end": 3592,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3598,
											"end": 3930,
											"name": "tag",
											"source": 5,
											"value": "23"
										},
										{
											"begin": 3598,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3723,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3757,
											"end": 3759,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3746,
											"end": 3755,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3742,
											"end": 3760,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3760,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 3760,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3838,
											"end": 3839,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3827,
											"end": 3836,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3823,
											"end": 3840,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3814,
											"end": 3820,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3770,
											"end": 3841,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3895,
											"end": 3901,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3851,
											"end": 3923,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3851,
											"end": 3923,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3851,
											"end": 3923,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3851,
											"end": 3923,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3930,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3930,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3930,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3598,
											"end": 3930,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3936,
											"end": 4154,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 3936,
											"end": 4154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4027,
											"end": 4031,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4067,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4054,
											"end": 4063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4050,
											"end": 4068,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4042,
											"end": 4068,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4042,
											"end": 4068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4144,
											"end": 4145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4133,
											"end": 4142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4129,
											"end": 4146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4120,
											"end": 4126,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4078,
											"end": 4147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 4154,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 4154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 4154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3936,
											"end": 4154,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4160,
											"end": 4410,
											"name": "tag",
											"source": 5,
											"value": "37"
										},
										{
											"begin": 4160,
											"end": 4410,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4267,
											"end": 4271,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4305,
											"end": 4307,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4294,
											"end": 4303,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4290,
											"end": 4308,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4308,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4282,
											"end": 4308,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4318,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4400,
											"end": 4401,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4389,
											"end": 4398,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4385,
											"end": 4402,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4376,
											"end": 4382,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4318,
											"end": 4403,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4318,
											"end": 4403,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4318,
											"end": 4403,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4318,
											"end": 4403,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4410,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4410,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4410,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4160,
											"end": 4410,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4416,
											"end": 4668,
											"name": "tag",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 4416,
											"end": 4668,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4524,
											"end": 4528,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4562,
											"end": 4564,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4551,
											"end": 4560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4547,
											"end": 4565,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4565,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4539,
											"end": 4565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4658,
											"end": 4659,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4647,
											"end": 4656,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4643,
											"end": 4660,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4634,
											"end": 4640,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4575,
											"end": 4661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4575,
											"end": 4661,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4575,
											"end": 4661,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4575,
											"end": 4661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4668,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4668,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4668,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4416,
											"end": 4668,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4674,
											"end": 4928,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 4674,
											"end": 4928,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4783,
											"end": 4787,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4821,
											"end": 4823,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4810,
											"end": 4819,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4806,
											"end": 4824,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4918,
											"end": 4919,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4907,
											"end": 4916,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4903,
											"end": 4920,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4894,
											"end": 4900,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4834,
											"end": 4921,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4834,
											"end": 4921,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4834,
											"end": 4921,
											"name": "tag",
											"source": 5,
											"value": "126"
										},
										{
											"begin": 4834,
											"end": 4921,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4928,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4928,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4928,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4674,
											"end": 4928,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4934,
											"end": 5063,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 4934,
											"end": 5063,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4968,
											"end": 4974,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4995,
											"end": 5015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5015,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4985,
											"end": 5015,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5052,
											"end": 5056,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5044,
											"end": 5050,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5057,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5024,
											"end": 5057,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5024,
											"end": 5057,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5024,
											"end": 5057,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 5063,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 5063,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 5063,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4934,
											"end": 5063,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5069,
											"end": 5144,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5069,
											"end": 5144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5135,
											"end": 5137,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5129,
											"end": 5138,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5119,
											"end": 5138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5119,
											"end": 5138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5069,
											"end": 5144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5069,
											"end": 5144,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5150,
											"end": 5457,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 5150,
											"end": 5457,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5211,
											"end": 5215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5301,
											"end": 5319,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5293,
											"end": 5299,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5290,
											"end": 5320,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5343,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5343,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5287,
											"end": 5343,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5323,
											"end": 5341,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5287,
											"end": 5343,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5287,
											"end": 5343,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5361,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5383,
											"end": 5389,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5361,
											"end": 5390,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5361,
											"end": 5390,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5361,
											"end": 5390,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5361,
											"end": 5390,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5353,
											"end": 5390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5445,
											"end": 5449,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5439,
											"end": 5443,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5435,
											"end": 5450,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5450,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5427,
											"end": 5450,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5457,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5457,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5457,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5150,
											"end": 5457,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5500,
											"end": 5507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5529,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5547,
											"end": 5552,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5529,
											"end": 5553,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5529,
											"end": 5553,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5529,
											"end": 5553,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5529,
											"end": 5553,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5553,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5518,
											"end": 5553,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5463,
											"end": 5559,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5565,
											"end": 5714,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 5565,
											"end": 5714,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5601,
											"end": 5608,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5641,
											"end": 5707,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5634,
											"end": 5639,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5630,
											"end": 5708,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5619,
											"end": 5708,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5619,
											"end": 5708,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5714,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5714,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5714,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5565,
											"end": 5714,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5720,
											"end": 5846,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5720,
											"end": 5846,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5764,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5797,
											"end": 5839,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5790,
											"end": 5795,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5786,
											"end": 5840,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5840,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5775,
											"end": 5840,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5846,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5846,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5846,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5720,
											"end": 5846,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5852,
											"end": 5929,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 5852,
											"end": 5929,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5889,
											"end": 5896,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5918,
											"end": 5923,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 5923,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5907,
											"end": 5923,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5929,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5929,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5929,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5852,
											"end": 5929,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5999,
											"end": 6008,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6063,
											"end": 6068,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6032,
											"end": 6069,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6019,
											"end": 6069,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6019,
											"end": 6069,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5935,
											"end": 6075,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6081,
											"end": 6222,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 6081,
											"end": 6222,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6146,
											"end": 6155,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6179,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6210,
											"end": 6215,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6179,
											"end": 6216,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6179,
											"end": 6216,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6179,
											"end": 6216,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 6179,
											"end": 6216,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6216,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6166,
											"end": 6216,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6222,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6222,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6222,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6081,
											"end": 6222,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6228,
											"end": 6370,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 6228,
											"end": 6370,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6294,
											"end": 6303,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6327,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6358,
											"end": 6363,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6327,
											"end": 6364,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6327,
											"end": 6364,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6327,
											"end": 6364,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6327,
											"end": 6364,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6364,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6314,
											"end": 6364,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6370,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6370,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6370,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6228,
											"end": 6370,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6376,
											"end": 6502,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6376,
											"end": 6502,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6426,
											"end": 6435,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6459,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6490,
											"end": 6495,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6459,
											"end": 6496,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6459,
											"end": 6496,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6459,
											"end": 6496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6496,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6446,
											"end": 6496,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6502,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6502,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6502,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6376,
											"end": 6502,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6508,
											"end": 6621,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6508,
											"end": 6621,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6558,
											"end": 6567,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6591,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6609,
											"end": 6614,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6591,
											"end": 6615,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 6591,
											"end": 6615,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6591,
											"end": 6615,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 6591,
											"end": 6615,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6578,
											"end": 6615,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6578,
											"end": 6615,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6621,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6621,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6621,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6508,
											"end": 6621,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6627,
											"end": 6781,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 6627,
											"end": 6781,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6711,
											"end": 6717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6706,
											"end": 6709,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6701,
											"end": 6704,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6688,
											"end": 6718,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 6773,
											"end": 6774,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6764,
											"end": 6770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6759,
											"end": 6762,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6755,
											"end": 6771,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6748,
											"end": 6775,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6781,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6627,
											"end": 6781,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6787,
											"end": 7068,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 6787,
											"end": 7068,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6892,
											"end": 6896,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6870,
											"end": 6897,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 6870,
											"end": 6897,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6870,
											"end": 6897,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6870,
											"end": 6897,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6862,
											"end": 6868,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6858,
											"end": 6898,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7000,
											"end": 7006,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6988,
											"end": 6998,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6985,
											"end": 7007,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 6964,
											"end": 6982,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6952,
											"end": 6962,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6949,
											"end": 6983,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6946,
											"end": 7008,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 6943,
											"end": 7031,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6943,
											"end": 7031,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6943,
											"end": 7031,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 7011,
											"end": 7029,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6943,
											"end": 7031,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6943,
											"end": 7031,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7051,
											"end": 7061,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7047,
											"end": 7049,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7040,
											"end": 7062,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 7068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 7068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 7068,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6787,
											"end": 7068,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7074,
											"end": 7254,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 7074,
											"end": 7254,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7122,
											"end": 7199,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7119,
											"end": 7120,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7112,
											"end": 7200,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7219,
											"end": 7223,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7216,
											"end": 7217,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7209,
											"end": 7224,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7243,
											"end": 7247,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7240,
											"end": 7241,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7233,
											"end": 7248,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7260,
											"end": 7377,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 7260,
											"end": 7377,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7369,
											"end": 7370,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7366,
											"end": 7367,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7359,
											"end": 7371,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7383,
											"end": 7500,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 7383,
											"end": 7500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7489,
											"end": 7490,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7494,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7506,
											"end": 7623,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 7506,
											"end": 7623,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7615,
											"end": 7616,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7612,
											"end": 7613,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7605,
											"end": 7617,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7629,
											"end": 7746,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 7629,
											"end": 7746,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7738,
											"end": 7739,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7735,
											"end": 7736,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7728,
											"end": 7740,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7854,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 7752,
											"end": 7854,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7793,
											"end": 7799,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7844,
											"end": 7846,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7840,
											"end": 7847,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 7835,
											"end": 7837,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 7828,
											"end": 7833,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7824,
											"end": 7838,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7820,
											"end": 7848,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 7848,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7810,
											"end": 7848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7854,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7854,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7854,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7752,
											"end": 7854,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7860,
											"end": 7982,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 7860,
											"end": 7982,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7933,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7951,
											"end": 7956,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7933,
											"end": 7957,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 7933,
											"end": 7957,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7933,
											"end": 7957,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7933,
											"end": 7957,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7926,
											"end": 7931,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7923,
											"end": 7958,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 7913,
											"end": 7976,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7913,
											"end": 7976,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7972,
											"end": 7973,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7969,
											"end": 7970,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7962,
											"end": 7974,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7913,
											"end": 7976,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7913,
											"end": 7976,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7982,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7860,
											"end": 7982,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7988,
											"end": 8110,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 7988,
											"end": 8110,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 8079,
											"end": 8084,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 8061,
											"end": 8085,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8054,
											"end": 8059,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8051,
											"end": 8086,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8041,
											"end": 8104,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8100,
											"end": 8101,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8098,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8090,
											"end": 8102,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8041,
											"end": 8104,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8041,
											"end": 8104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8110,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7988,
											"end": 8110,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getStakes(uint256)": "472343b9",
							"nftcontract()": "6a9315b3",
							"onERC721Received(address,address,address,uint256,bytes)": "401405e2",
							"operator()": "570ca735",
							"parentNFT()": "b8e33fb2",
							"parentNFTAddress()": "66bb863b",
							"parentNftFunctions()": "fead3d6e",
							"parentToken()": "80a54001"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getStakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nftcontract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"collection\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nftcontract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"operator\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNftFunctions\",\"outputs\":[{\"internalType\":\"contract INFTGame\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0x42dc72b51e693a2281314ad69f1425ef940a4e0e757d7510fbcfaa5f7538fd80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f39d19a3575d3727c708ac129158ce0be03c1049514e5ad185eb6a0996bb4a3c\",\"dweb:/ipfs/QmPD8zUM1tTyyGkcjMsTgc1cFXSQfWspnxt69oNn5SoEAL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Missions.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 266,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)233"
							},
							{
								"astId": 269,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNftFunctions",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(INFTGame)258"
							},
							{
								"astId": 271,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFTAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 305,
								"contract": "contracts/Missions.sol:Staking",
								"label": "s_stakers",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 309,
								"contract": "contracts/Missions.sol:Staking",
								"label": "s_missionTimers",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							},
							{
								"astId": 329,
								"contract": "contracts/Missions.sol:Staking",
								"label": "operator",
								"offset": 0,
								"slot": "7",
								"type": "t_address"
							},
							{
								"astId": 331,
								"contract": "contracts/Missions.sol:Staking",
								"label": "nftcontract",
								"offset": 0,
								"slot": "8",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)233": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(INFTGame)258": {
								"encoding": "inplace",
								"label": "contract INFTGame",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> contracts/Missions.sol:37:31:\n   |\n37 |     function onERC721Received(address collection, address _operator, address _nftco ...\n   |                               ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1174,
					"file": "contracts/Missions.sol",
					"start": 1156
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC721": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 246,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 122,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "271:7:2"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 121,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								245
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 132,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 141,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 150,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 233,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 233,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 233,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 233,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 233,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 233,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 233,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 233,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 233,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 234,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 245,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"contracts/Missions.sol": {
				"ast": {
					"absolutePath": "contracts/Missions.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC20": [
							117
						],
						"IERC721": [
							233
						],
						"INFTGame": [
							258
						],
						"ReentrancyGuard": [
							39
						],
						"Staking": [
							366
						]
					},
					"id": 367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 40,
							"src": "64:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 118,
							"src": "128:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 234,
							"src": "186:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "INFTGame",
							"nameLocation": "258:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a0c4442d",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrophies",
									"nameLocation": "286:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "298:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:9:4"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "325:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:9:4"
									},
									"scope": 258,
									"src": "277:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 367,
							"src": "248:89:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "361:15:4"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "361:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 366,
							"linearizedBaseContracts": [
								366,
								39
							],
							"name": "Staking",
							"nameLocation": "350:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "80a54001",
									"id": 263,
									"mutability": "mutable",
									"name": "parentToken",
									"nameLocation": "398:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "384:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 262,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 261,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "384:6:4"
										},
										"referencedDeclaration": 117,
										"src": "384:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 266,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "431:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "416:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$233",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 265,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 264,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 233,
											"src": "416:7:4"
										},
										"referencedDeclaration": 233,
										"src": "416:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$233",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fead3d6e",
									"id": 269,
									"mutability": "mutable",
									"name": "parentNftFunctions",
									"nameLocation": "463:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "447:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTGame_$258",
										"typeString": "contract INFTGame"
									},
									"typeName": {
										"id": 268,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 267,
											"name": "INFTGame",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 258,
											"src": "447:8:4"
										},
										"referencedDeclaration": 258,
										"src": "447:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTGame_$258",
											"typeString": "contract INFTGame"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66bb863b",
									"id": 271,
									"mutability": "mutable",
									"name": "parentNFTAddress",
									"nameLocation": "503:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "488:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "583:205:4",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "594:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 280,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "614:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 279,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "606:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$233_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "606:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"src": "594:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$233",
														"typeString": "contract IERC721"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "594:33:4"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "parentNftFunctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 286,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "668:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 285,
															"name": "INFTGame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "659:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INFTGame_$258_$",
																"typeString": "type(contract INFTGame)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "659:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"src": "638:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTGame_$258",
														"typeString": "contract INFTGame"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "638:43:4"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "parentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "692:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 292,
																"name": "_tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "713:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 291,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "706:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "706:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "692:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "692:36:4"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "parentNFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "739:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "758:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "739:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "739:31:4"
											}
										]
									},
									"id": 301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "546:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "538:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "568:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "560:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:46:4"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:4"
									},
									"scope": 366,
									"src": "526:262:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 305,
									"mutability": "mutable",
									"name": "s_stakers",
									"nameLocation": "823:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "796:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 304,
										"keyType": {
											"id": 302,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "805:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "796:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 303,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "814:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "s_missionTimers",
									"nameLocation": "866:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "839:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 308,
										"keyType": {
											"id": 306,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "848:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "839:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 307,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "857:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "979:74:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 318,
																"name": "s_stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "998:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 320,
															"indexExpression": {
																"id": 319,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1008:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "998:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 321,
																"name": "s_missionTimers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "1019:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 323,
															"indexExpression": {
																"id": 322,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1035:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1019:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 324,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "997:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 317,
												"id": 325,
												"nodeType": "Return",
												"src": "990:55:4"
											}
										]
									},
									"functionSelector": "472343b9",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakes",
									"nameLocation": "904:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "922:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "914:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:18:4"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "961:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "953:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "974:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "966:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:27:4"
									},
									"scope": 366,
									"src": "895:158:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "570ca735",
									"id": 329,
									"mutability": "mutable",
									"name": "operator",
									"nameLocation": "1074:8:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "1059:23:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 328,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1059:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "6a9315b3",
									"id": 331,
									"mutability": "mutable",
									"name": "nftcontract",
									"nameLocation": "1104:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "1089:26:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 330,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1089:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1280:164:4",
										"statements": [
											{
												"expression": {
													"id": 348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 346,
														"name": "nftcontract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 331,
														"src": "1291:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 347,
														"name": "_nftcontract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 337,
														"src": "1305:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1291:26:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 349,
												"nodeType": "ExpressionStatement",
												"src": "1291:26:4"
											},
											{
												"expression": {
													"id": 352,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 350,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "1328:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 351,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 335,
														"src": "1339:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1328:20:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 353,
												"nodeType": "ExpressionStatement",
												"src": "1328:20:4"
											},
											{
												"expression": {
													"id": 358,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 354,
															"name": "s_stakers",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 305,
															"src": "1359:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																"typeString": "mapping(uint256 => address)"
															}
														},
														"id": 356,
														"indexExpression": {
															"id": 355,
															"name": "tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 339,
															"src": "1369:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "1359:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 357,
														"name": "operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "1380:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1359:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 359,
												"nodeType": "ExpressionStatement",
												"src": "1359:29:4"
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 360,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1406:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$366",
																"typeString": "contract Staking"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "1406:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1406:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 345,
												"id": 363,
												"nodeType": "Return",
												"src": "1399:37:4"
											}
										]
									},
									"functionSelector": "401405e2",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1139:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 342,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "collection",
												"nameLocation": "1164:10:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1156:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1156:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1184:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1176:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 334,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1176:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 337,
												"mutability": "mutable",
												"name": "_nftcontract",
												"nameLocation": "1203:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1195:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1195:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 339,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "1225:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1217:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 338,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1217:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1234:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 340,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1234:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1155:92:4"
									},
									"returnParameters": {
										"id": 345,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 344,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1272:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 343,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1272:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1271:8:4"
									},
									"scope": 366,
									"src": "1130:314:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 367,
							"src": "341:1141:4",
							"usedErrors": []
						}
					],
					"src": "35:1447:4"
				},
				"id": 4
			}
		}
	}
}