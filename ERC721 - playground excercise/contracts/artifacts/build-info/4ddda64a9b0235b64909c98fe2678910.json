{
	"id": "4ddda64a9b0235b64909c98fe2678910",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Missions.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\ninterface INFTGame {\r\n       function getTrophies(uint256) external returns (uint256);\r\n}\r\n\r\ncontract Staking is ReentrancyGuard {\r\n    IERC20 public parentToken;\r\n    IERC721 public parentNFT;\r\n    INFTGame public parentNftFunctions;\r\n    address public parentNFTAddress;\r\n    constructor(address _nftContract, address _tokenContract){\r\n        parentNFT = IERC721(_nftContract);\r\n        parentNftFunctions = INFTGame(_nftContract);\r\n        parentToken = IERC20(_tokenContract);\r\n        parentNFTAddress = _nftContract;\r\n        \r\n    }\r\n    modifier onlyMain{\r\n        require(msg.sender == parentNFTAddress, \"Not allowed\");\r\n        _;\r\n    }\r\n    mapping (uint256 => StakeReview) s_stakeReview; \r\n \r\n    struct StakeReview{\r\n        address realOwner;\r\n        uint256 claimedTrophies;\r\n        uint256 lastClaimTime; \r\n    }\r\n    function refreshTrophies(uint256 _tokenID) public {\r\n       s_stakeReview[_tokenID].claimedTrophies = parentNftFunctions.getTrophies(_tokenID);\r\n       \r\n    }\r\n    function claimedTrophies(uint256 _tokenID) public view returns (uint256){\r\n        return s_stakeReview[_tokenID].claimedTrophies;\r\n    }\r\n    function stake(uint256 _tokenID) public nonReentrant() {\r\n        require(parentNFT.ownerOf(_tokenID) == msg.sender, \"Not owner\");\r\n        \r\n        parentNFT.transferFrom(msg.sender, address(this), _tokenID);\r\n        s_stakeReview[_tokenID].realOwner = msg.sender;\r\n        s_stakeReview[_tokenID].lastClaimTime = block.timestamp;\r\n    }\r\n    \r\n    function claim(uint256 _tokenID) public nonReentrant {\r\n        require(s_stakeReview[_tokenID].lastClaimTime > 0 );\r\n        require(s_stakeReview[_tokenID].realOwner == msg.sender);\r\n\r\n        s_stakeReview[_tokenID].claimedTrophies = parentNftFunctions.getTrophies(_tokenID);\r\n        uint256 currentTrophies = parentNftFunctions.getTrophies(_tokenID);\r\n        uint256 amount = ((block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) );\r\n        if (parentToken.transfer(msg.sender, amount)){\r\n            s_stakeReview[_tokenID].lastClaimTime = block.timestamp;\r\n            s_stakeReview[_tokenID].claimedTrophies += (currentTrophies - s_stakeReview[_tokenID].claimedTrophies);\r\n        } else revert(\"Transfer fail\");\r\n    }\r\n    function unstake(uint256 _tokenID) public {\r\n        require(parentNFT.ownerOf(_tokenID) == address(this), \"Not staked\");\r\n        require(s_stakeReview[_tokenID].realOwner == msg.sender, \"Not realOwner\");\r\n        uint256 amount = ((block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (parentNftFunctions.getTrophies(_tokenID) - s_stakeReview[_tokenID].claimedTrophies) );\r\n         uint256 currentTrophies = parentNftFunctions.getTrophies(_tokenID);\r\n        if (parentToken.transfer(msg.sender, amount)){\r\n            s_stakeReview[_tokenID].lastClaimTime = block.timestamp;\r\n             s_stakeReview[_tokenID].claimedTrophies += (currentTrophies - s_stakeReview[_tokenID].claimedTrophies);\r\n        }\r\n        parentNFT.transferFrom(address(this), msg.sender, _tokenID);\r\n        s_stakeReview[_tokenID].realOwner = address(0);\r\n    }\r\n    \r\n   \r\n    \r\n    \r\n \r\n\r\n   \r\n \r\n\r\n    \r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Missions.sol": {
				"INFTGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getTrophies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTrophies(uint256)": "a0c4442d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTrophies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"INFTGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0x9b3d4eb1177998a9a8f7be952f2342d14136d1f0debf3b0f01f118174a3776c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b4c961449de1e3cd591c1822013f163530a40a705bae532d49ba8239934207d\",\"dweb:/ipfs/QmeF4oqNWi5TtXxUiGRjw8LuPy3MMNtvQ9xwm9r3ifSimg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "claim",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "claimedTrophies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFTAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNftFunctions",
							"outputs": [
								{
									"internalType": "contract INFTGame",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "refreshTrophies",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "stake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Missions.sol\":341:3444  contract Staking is ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":614:626  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":594:603  parentNFT */\n  0x02\n  0x00\n    /* \"contracts/Missions.sol\":594:627  parentNFT = IERC721(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":668:680  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":638:656  parentNftFunctions */\n  0x03\n  0x00\n    /* \"contracts/Missions.sol\":638:681  parentNftFunctions = INFTGame(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":713:727  _tokenContract */\n  dup1\n    /* \"contracts/Missions.sol\":692:703  parentToken */\n  0x01\n  0x00\n    /* \"contracts/Missions.sol\":692:728  parentToken = IERC20(_tokenContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":758:770  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":739:755  parentNFTAddress */\n  0x04\n  0x00\n    /* \"contracts/Missions.sol\":739:770  parentNFTAddress = _nftContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  pop\n  pop\n    /* \"contracts/Missions.sol\":341:3444  contract Staking is ReentrancyGuard {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":260:379   */\ntag_15:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_18\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_19\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_22:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_24\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_25:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_17:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_13:\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_32:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Missions.sol\":341:3444  contract Staking is ReentrancyGuard {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Missions.sol\":341:3444  contract Staking is ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x66bb863b\n      gt\n      tag_12\n      jumpi\n      dup1\n      0x66bb863b\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x80a54001\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xa694fc3a\n      eq\n      tag_9\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_10\n      jumpi\n      dup1\n      0xfead3d6e\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_12:\n      dup1\n      0x0eeadd30\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x379607f5\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x53eebc6d\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Missions.sol\":1086:1245  function refreshTrophies(uint256 _tokenID) public {\r... */\n    tag_3:\n      tag_13\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      tag_16\n      jump\t// in\n    tag_13:\n      stop\n        /* \"contracts/Missions.sol\":2548:3395  function unstake(uint256 _tokenID) public {\r... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_18:\n      tag_19\n      jump\t// in\n    tag_17:\n      stop\n        /* \"contracts/Missions.sol\":1746:2542  function claim(uint256 _tokenID) public nonReentrant {\r... */\n    tag_5:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_21:\n      tag_22\n      jump\t// in\n    tag_20:\n      stop\n        /* \"contracts/Missions.sol\":1251:1388  function claimedTrophies(uint256 _tokenID) public view returns (uint256){\r... */\n    tag_6:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_7:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_8:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1394:1734  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n    tag_9:\n      tag_36\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_37\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_37:\n      tag_38\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_10:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      mload(0x40)\n      tag_41\n      swap2\n      swap1\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_11:\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1086:1245  function refreshTrophies(uint256 _tokenID) public {\r... */\n    tag_16:\n        /* \"contracts/Missions.sol\":1188:1206  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1188:1218  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/Missions.sol\":1219:1227  _tokenID */\n      dup3\n        /* \"contracts/Missions.sol\":1188:1228  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_48\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_48:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_49\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_49:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_51\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_51:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_52\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"contracts/Missions.sol\":1146:1159  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":1146:1169  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1160:1168  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1146:1169  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1146:1185  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n        /* \"contracts/Missions.sol\":1146:1228  s_stakeReview[_tokenID].claimedTrophies = parentNftFunctions.getTrophies(_tokenID) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1086:1245  function refreshTrophies(uint256 _tokenID) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":2548:3395  function unstake(uint256 _tokenID) public {\r... */\n    tag_19:\n        /* \"contracts/Missions.sol\":2648:2652  this */\n      address\n        /* \"contracts/Missions.sol\":2609:2653  parentNFT.ownerOf(_tokenID) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":2609:2618  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":2609:2626  parentNFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/Missions.sol\":2627:2635  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":2609:2636  parentNFT.ownerOf(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_55\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_55:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_56\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_56:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_58\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_58:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_59\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n        /* \"contracts/Missions.sol\":2609:2653  parentNFT.ownerOf(_tokenID) == address(this) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Missions.sol\":2601:2668  require(parentNFT.ownerOf(_tokenID) == address(this), \"Not staked\") */\n      tag_61\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_62\n      swap1\n      tag_63\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_61:\n        /* \"contracts/Missions.sol\":2724:2734  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":2687:2734  s_stakeReview[_tokenID].realOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":2687:2700  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":2687:2710  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":2701:2709  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":2687:2710  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":2687:2720  s_stakeReview[_tokenID].realOwner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":2687:2734  s_stakeReview[_tokenID].realOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Missions.sol\":2679:2752  require(s_stakeReview[_tokenID].realOwner == msg.sender, \"Not realOwner\") */\n      tag_64\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_65\n      swap1\n      tag_66\n      jump\t// in\n    tag_65:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_64:\n        /* \"contracts/Missions.sol\":2763:2777  uint256 amount */\n      0x00\n        /* \"contracts/Missions.sol\":2885:2898  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":2885:2908  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":2899:2907  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":2885:2908  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":2885:2924  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/Missions.sol\":2842:2860  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":2842:2872  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/Missions.sol\":2873:2881  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":2842:2882  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_67\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_67:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_70\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_70:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_71\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_71:\n        /* \"contracts/Missions.sol\":2842:2924  parentNftFunctions.getTrophies(_tokenID) - s_stakeReview[_tokenID].claimedTrophies */\n      tag_72\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"contracts/Missions.sol\":2800:2813  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":2800:2823  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":2814:2822  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":2800:2823  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":2800:2837  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n      sload\n        /* \"contracts/Missions.sol\":2782:2797  block.timestamp */\n      timestamp\n        /* \"contracts/Missions.sol\":2782:2837  block.timestamp - s_stakeReview[_tokenID].lastClaimTime */\n      tag_74\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_74:\n        /* \"contracts/Missions.sol\":2781:2925  (block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (parentNftFunctions.getTrophies(_tokenID) - s_stakeReview[_tokenID].claimedTrophies) */\n      tag_75\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n        /* \"contracts/Missions.sol\":2763:2927  uint256 amount = ((block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (parentNftFunctions.getTrophies(_tokenID) - s_stakeReview[_tokenID].claimedTrophies) ) */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":2939:2962  uint256 currentTrophies */\n      0x00\n        /* \"contracts/Missions.sol\":2965:2983  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":2965:2995  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/Missions.sol\":2996:3004  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":2965:3005  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_77:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_80\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_80:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_81\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_81:\n        /* \"contracts/Missions.sol\":2939:3005  uint256 currentTrophies = parentNftFunctions.getTrophies(_tokenID) */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":3020:3031  parentToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":3020:3040  parentToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Missions.sol\":3041:3051  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":3053:3059  amount */\n      dup5\n        /* \"contracts/Missions.sol\":3020:3060  parentToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_82\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_82:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_84\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_84:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_86\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_87\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"contracts/Missions.sol\":3016:3261  if (parentToken.transfer(msg.sender, amount)){\r... */\n      iszero\n      tag_89\n      jumpi\n        /* \"contracts/Missions.sol\":3116:3131  block.timestamp */\n      timestamp\n        /* \"contracts/Missions.sol\":3076:3089  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":3076:3099  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":3090:3098  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":3076:3099  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":3076:3113  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n        /* \"contracts/Missions.sol\":3076:3131  s_stakeReview[_tokenID].lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":3209:3222  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":3209:3232  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":3223:3231  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":3209:3232  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":3209:3248  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/Missions.sol\":3191:3206  currentTrophies */\n      dup2\n        /* \"contracts/Missions.sol\":3191:3248  currentTrophies - s_stakeReview[_tokenID].claimedTrophies */\n      tag_90\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_90:\n        /* \"contracts/Missions.sol\":3147:3160  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":3147:3170  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":3161:3169  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":3147:3170  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":3147:3186  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      0x00\n        /* \"contracts/Missions.sol\":3147:3249  s_stakeReview[_tokenID].claimedTrophies += (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) */\n      dup3\n      dup3\n      sload\n      tag_91\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_91:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":3016:3261  if (parentToken.transfer(msg.sender, amount)){\r... */\n    tag_89:\n        /* \"contracts/Missions.sol\":3271:3280  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":3271:3293  parentNFT.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Missions.sol\":3302:3306  this */\n      address\n        /* \"contracts/Missions.sol\":3309:3319  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":3321:3329  _tokenID */\n      dup7\n        /* \"contracts/Missions.sol\":3271:3330  parentNFT.transferFrom(address(this), msg.sender, _tokenID) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_96\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_96:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Missions.sol\":3385:3386  0 */\n      0x00\n        /* \"contracts/Missions.sol\":3341:3354  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":3341:3364  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":3355:3363  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":3341:3364  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":3341:3374  s_stakeReview[_tokenID].realOwner */\n      0x00\n      add\n      0x00\n        /* \"contracts/Missions.sol\":3341:3387  s_stakeReview[_tokenID].realOwner = address(0) */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":2590:3395  {\r... */\n      pop\n      pop\n        /* \"contracts/Missions.sol\":2548:3395  function unstake(uint256 _tokenID) public {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":1746:2542  function claim(uint256 _tokenID) public nonReentrant {\r... */\n    tag_22:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_98\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_99\n      swap1\n      tag_100\n      jump\t// in\n    tag_99:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_98:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1858:1859  0 */\n      0x00\n        /* \"contracts/Missions.sol\":1818:1831  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":1818:1841  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1832:1840  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1818:1841  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1818:1855  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n      sload\n        /* \"contracts/Missions.sol\":1818:1859  s_stakeReview[_tokenID].lastClaimTime > 0 */\n      gt\n        /* \"contracts/Missions.sol\":1810:1861  require(s_stakeReview[_tokenID].lastClaimTime > 0 ) */\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n        /* \"contracts/Missions.sol\":1917:1927  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":1880:1927  s_stakeReview[_tokenID].realOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1880:1893  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":1880:1903  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1894:1902  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1880:1903  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1880:1913  s_stakeReview[_tokenID].realOwner */\n      0x00\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1880:1927  s_stakeReview[_tokenID].realOwner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Missions.sol\":1872:1928  require(s_stakeReview[_tokenID].realOwner == msg.sender) */\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n        /* \"contracts/Missions.sol\":1983:2001  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1983:2013  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/Missions.sol\":2014:2022  _tokenID */\n      dup3\n        /* \"contracts/Missions.sol\":1983:2023  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_104\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_104:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_105\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_105:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_107\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_107:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_108\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_108:\n        /* \"contracts/Missions.sol\":1941:1954  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":1941:1964  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1955:1963  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1941:1964  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1941:1980  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n        /* \"contracts/Missions.sol\":1941:2023  s_stakeReview[_tokenID].claimedTrophies = parentNftFunctions.getTrophies(_tokenID) */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":2034:2057  uint256 currentTrophies */\n      0x00\n        /* \"contracts/Missions.sol\":2060:2078  parentNftFunctions */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":2060:2090  parentNftFunctions.getTrophies */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa0c4442d\n        /* \"contracts/Missions.sol\":2091:2099  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":2060:2100  parentNftFunctions.getTrophies(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_109\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_109:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_110\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_110:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_112\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_112:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_113\n      swap2\n      swap1\n      tag_53\n      jump\t// in\n    tag_113:\n        /* \"contracts/Missions.sol\":2034:2100  uint256 currentTrophies = parentNftFunctions.getTrophies(_tokenID) */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":2111:2125  uint256 amount */\n      0x00\n        /* \"contracts/Missions.sol\":2208:2221  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":2208:2231  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":2222:2230  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":2208:2231  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":2208:2247  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/Missions.sol\":2190:2205  currentTrophies */\n      dup3\n        /* \"contracts/Missions.sol\":2190:2247  currentTrophies - s_stakeReview[_tokenID].claimedTrophies */\n      tag_114\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_114:\n        /* \"contracts/Missions.sol\":2148:2161  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":2148:2171  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":2162:2170  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":2148:2171  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":2148:2185  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n      sload\n        /* \"contracts/Missions.sol\":2130:2145  block.timestamp */\n      timestamp\n        /* \"contracts/Missions.sol\":2130:2185  block.timestamp - s_stakeReview[_tokenID].lastClaimTime */\n      tag_115\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_115:\n        /* \"contracts/Missions.sol\":2129:2248  (block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) */\n      tag_116\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_116:\n        /* \"contracts/Missions.sol\":2111:2250  uint256 amount = ((block.timestamp - s_stakeReview[_tokenID].lastClaimTime) + (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) ) */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":2265:2276  parentToken */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":2265:2285  parentToken.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"contracts/Missions.sol\":2286:2296  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":2298:2304  amount */\n      dup4\n        /* \"contracts/Missions.sol\":2265:2305  parentToken.transfer(msg.sender, amount) */\n      mload(0x40)\n      dup4\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_117\n      swap3\n      swap2\n      swap1\n      tag_83\n      jump\t// in\n    tag_117:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_118\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_118:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_120\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_120:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_121\n      swap2\n      swap1\n      tag_88\n      jump\t// in\n    tag_121:\n        /* \"contracts/Missions.sol\":2261:2534  if (parentToken.transfer(msg.sender, amount)){\r... */\n      iszero\n      tag_122\n      jumpi\n        /* \"contracts/Missions.sol\":2361:2376  block.timestamp */\n      timestamp\n        /* \"contracts/Missions.sol\":2321:2334  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":2321:2344  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":2335:2343  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":2321:2344  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":2321:2358  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n        /* \"contracts/Missions.sol\":2321:2376  s_stakeReview[_tokenID].lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":2453:2466  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":2453:2476  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":2467:2475  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":2453:2476  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":2453:2492  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/Missions.sol\":2435:2450  currentTrophies */\n      dup3\n        /* \"contracts/Missions.sol\":2435:2492  currentTrophies - s_stakeReview[_tokenID].claimedTrophies */\n      tag_123\n      swap2\n      swap1\n      tag_73\n      jump\t// in\n    tag_123:\n        /* \"contracts/Missions.sol\":2391:2404  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":2391:2414  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":2405:2413  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":2391:2414  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":2391:2430  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      0x00\n        /* \"contracts/Missions.sol\":2391:2493  s_stakeReview[_tokenID].claimedTrophies += (currentTrophies - s_stakeReview[_tokenID].claimedTrophies) */\n      dup3\n      dup3\n      sload\n      tag_124\n      swap2\n      swap1\n      tag_76\n      jump\t// in\n    tag_124:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":2261:2534  if (parentToken.transfer(msg.sender, amount)){\r... */\n      jump(tag_125)\n    tag_122:\n        /* \"contracts/Missions.sol\":2511:2534  revert(\"Transfer fail\") */\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_126\n      swap1\n      tag_127\n      jump\t// in\n    tag_126:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/Missions.sol\":2261:2534  if (parentToken.transfer(msg.sender, amount)){\r... */\n    tag_125:\n        /* \"contracts/Missions.sol\":1799:2542  {\r... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1746:2542  function claim(uint256 _tokenID) public nonReentrant {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":1251:1388  function claimedTrophies(uint256 _tokenID) public view returns (uint256){\r... */\n    tag_25:\n        /* \"contracts/Missions.sol\":1315:1322  uint256 */\n      0x00\n        /* \"contracts/Missions.sol\":1341:1354  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":1341:1364  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1355:1363  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1341:1364  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1341:1380  s_stakeReview[_tokenID].claimedTrophies */\n      0x01\n      add\n      sload\n        /* \"contracts/Missions.sol\":1334:1380  return s_stakeReview[_tokenID].claimedTrophies */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":1251:1388  function claimedTrophies(uint256 _tokenID) public view returns (uint256){\r... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_29:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_33:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":1394:1734  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n    tag_38:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2332  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2325:2344  _status != _ENTERED */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2317:2380  require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\") */\n      tag_130\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_131\n      swap1\n      tag_100\n      jump\t// in\n    tag_131:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_130:\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1744:1745  2 */\n      0x02\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2462  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2455:2473  _status = _ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1499:1509  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":1468:1509  parentNFT.ownerOf(_tokenID) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1468:1477  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1468:1485  parentNFT.ownerOf */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x6352211e\n        /* \"contracts/Missions.sol\":1486:1494  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1468:1495  parentNFT.ownerOf(_tokenID) */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_133\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_133:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_136\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_136:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_137\n      swap2\n      swap1\n      tag_60\n      jump\t// in\n    tag_137:\n        /* \"contracts/Missions.sol\":1468:1509  parentNFT.ownerOf(_tokenID) == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Missions.sol\":1460:1523  require(parentNFT.ownerOf(_tokenID) == msg.sender, \"Not owner\") */\n      tag_138\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_139\n      swap1\n      tag_140\n      jump\t// in\n    tag_139:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_138:\n        /* \"contracts/Missions.sol\":1544:1553  parentNFT */\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1544:1566  parentNFT.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"contracts/Missions.sol\":1567:1577  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":1587:1591  this */\n      address\n        /* \"contracts/Missions.sol\":1594:1602  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":1544:1603  parentNFT.transferFrom(msg.sender, address(this), _tokenID) */\n      mload(0x40)\n      dup5\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_141\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_93\n      jump\t// in\n    tag_141:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_142\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_142:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_144\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_144:\n      pop\n      pop\n      pop\n      pop\n        /* \"contracts/Missions.sol\":1650:1660  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":1614:1627  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":1614:1637  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1628:1636  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1614:1637  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1614:1647  s_stakeReview[_tokenID].realOwner */\n      0x00\n      add\n      0x00\n        /* \"contracts/Missions.sol\":1614:1660  s_stakeReview[_tokenID].realOwner = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1711:1726  block.timestamp */\n      timestamp\n        /* \"contracts/Missions.sol\":1671:1684  s_stakeReview */\n      0x05\n        /* \"contracts/Missions.sol\":1671:1694  s_stakeReview[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1685:1693  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1671:1694  s_stakeReview[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1671:1708  s_stakeReview[_tokenID].lastClaimTime */\n      0x02\n      add\n        /* \"contracts/Missions.sol\":1671:1726  s_stakeReview[_tokenID].lastClaimTime = block.timestamp */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n      0x01\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2635  _status */\n      0x00\n        /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":2628:2650  _status = _NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1394:1734  function stake(uint256 _tokenID) public nonReentrant() {\r... */\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_40:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_44:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:150   */\n    tag_146:\n        /* \"#utility.yul\":64:69   */\n      0x00\n        /* \"#utility.yul\":95:101   */\n      dup2\n        /* \"#utility.yul\":89:102   */\n      mload\n        /* \"#utility.yul\":80:102   */\n      swap1\n      pop\n        /* \"#utility.yul\":111:144   */\n      tag_148\n        /* \"#utility.yul\":138:143   */\n      dup2\n        /* \"#utility.yul\":111:144   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7:150   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":156:293   */\n    tag_150:\n        /* \"#utility.yul\":210:215   */\n      0x00\n        /* \"#utility.yul\":241:247   */\n      dup2\n        /* \"#utility.yul\":235:248   */\n      mload\n        /* \"#utility.yul\":226:248   */\n      swap1\n      pop\n        /* \"#utility.yul\":257:287   */\n      tag_152\n        /* \"#utility.yul\":281:286   */\n      dup2\n        /* \"#utility.yul\":257:287   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":156:293   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":299:438   */\n    tag_154:\n        /* \"#utility.yul\":345:350   */\n      0x00\n        /* \"#utility.yul\":383:389   */\n      dup2\n        /* \"#utility.yul\":370:390   */\n      calldataload\n        /* \"#utility.yul\":361:390   */\n      swap1\n      pop\n        /* \"#utility.yul\":399:432   */\n      tag_156\n        /* \"#utility.yul\":426:431   */\n      dup2\n        /* \"#utility.yul\":399:432   */\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":299:438   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":444:587   */\n    tag_158:\n        /* \"#utility.yul\":501:506   */\n      0x00\n        /* \"#utility.yul\":532:538   */\n      dup2\n        /* \"#utility.yul\":526:539   */\n      mload\n        /* \"#utility.yul\":517:539   */\n      swap1\n      pop\n        /* \"#utility.yul\":548:581   */\n      tag_160\n        /* \"#utility.yul\":575:580   */\n      dup2\n        /* \"#utility.yul\":548:581   */\n      tag_157\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":444:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":593:944   */\n    tag_60:\n        /* \"#utility.yul\":663:669   */\n      0x00\n        /* \"#utility.yul\":712:714   */\n      0x20\n        /* \"#utility.yul\":700:709   */\n      dup3\n        /* \"#utility.yul\":691:698   */\n      dup5\n        /* \"#utility.yul\":687:710   */\n      sub\n        /* \"#utility.yul\":683:715   */\n      slt\n        /* \"#utility.yul\":680:799   */\n      iszero\n      tag_162\n      jumpi\n        /* \"#utility.yul\":718:797   */\n      tag_163\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":680:799   */\n    tag_162:\n        /* \"#utility.yul\":838:839   */\n      0x00\n        /* \"#utility.yul\":863:927   */\n      tag_165\n        /* \"#utility.yul\":919:926   */\n      dup5\n        /* \"#utility.yul\":910:916   */\n      dup3\n        /* \"#utility.yul\":899:908   */\n      dup6\n        /* \"#utility.yul\":895:917   */\n      add\n        /* \"#utility.yul\":863:927   */\n      tag_146\n      jump\t// in\n    tag_165:\n        /* \"#utility.yul\":853:927   */\n      swap2\n      pop\n        /* \"#utility.yul\":809:937   */\n      pop\n        /* \"#utility.yul\":593:944   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":950:1295   */\n    tag_88:\n        /* \"#utility.yul\":1017:1023   */\n      0x00\n        /* \"#utility.yul\":1066:1068   */\n      0x20\n        /* \"#utility.yul\":1054:1063   */\n      dup3\n        /* \"#utility.yul\":1045:1052   */\n      dup5\n        /* \"#utility.yul\":1041:1064   */\n      sub\n        /* \"#utility.yul\":1037:1069   */\n      slt\n        /* \"#utility.yul\":1034:1153   */\n      iszero\n      tag_167\n      jumpi\n        /* \"#utility.yul\":1072:1151   */\n      tag_168\n      tag_164\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1034:1153   */\n    tag_167:\n        /* \"#utility.yul\":1192:1193   */\n      0x00\n        /* \"#utility.yul\":1217:1278   */\n      tag_169\n        /* \"#utility.yul\":1270:1277   */\n      dup5\n        /* \"#utility.yul\":1261:1267   */\n      dup3\n        /* \"#utility.yul\":1250:1259   */\n      dup6\n        /* \"#utility.yul\":1246:1268   */\n      add\n        /* \"#utility.yul\":1217:1278   */\n      tag_150\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1207:1278   */\n      swap2\n      pop\n        /* \"#utility.yul\":1163:1288   */\n      pop\n        /* \"#utility.yul\":950:1295   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1301:1630   */\n    tag_15:\n        /* \"#utility.yul\":1360:1366   */\n      0x00\n        /* \"#utility.yul\":1409:1411   */\n      0x20\n        /* \"#utility.yul\":1397:1406   */\n      dup3\n        /* \"#utility.yul\":1388:1395   */\n      dup5\n        /* \"#utility.yul\":1384:1407   */\n      sub\n        /* \"#utility.yul\":1380:1412   */\n      slt\n        /* \"#utility.yul\":1377:1496   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":1415:1494   */\n      tag_172\n      tag_164\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1377:1496   */\n    tag_171:\n        /* \"#utility.yul\":1535:1536   */\n      0x00\n        /* \"#utility.yul\":1560:1613   */\n      tag_173\n        /* \"#utility.yul\":1605:1612   */\n      dup5\n        /* \"#utility.yul\":1596:1602   */\n      dup3\n        /* \"#utility.yul\":1585:1594   */\n      dup6\n        /* \"#utility.yul\":1581:1603   */\n      add\n        /* \"#utility.yul\":1560:1613   */\n      tag_154\n      jump\t// in\n    tag_173:\n        /* \"#utility.yul\":1550:1613   */\n      swap2\n      pop\n        /* \"#utility.yul\":1506:1623   */\n      pop\n        /* \"#utility.yul\":1301:1630   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1636:1987   */\n    tag_53:\n        /* \"#utility.yul\":1706:1712   */\n      0x00\n        /* \"#utility.yul\":1755:1757   */\n      0x20\n        /* \"#utility.yul\":1743:1752   */\n      dup3\n        /* \"#utility.yul\":1734:1741   */\n      dup5\n        /* \"#utility.yul\":1730:1753   */\n      sub\n        /* \"#utility.yul\":1726:1758   */\n      slt\n        /* \"#utility.yul\":1723:1842   */\n      iszero\n      tag_175\n      jumpi\n        /* \"#utility.yul\":1761:1840   */\n      tag_176\n      tag_164\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1723:1842   */\n    tag_175:\n        /* \"#utility.yul\":1881:1882   */\n      0x00\n        /* \"#utility.yul\":1906:1970   */\n      tag_177\n        /* \"#utility.yul\":1962:1969   */\n      dup5\n        /* \"#utility.yul\":1953:1959   */\n      dup3\n        /* \"#utility.yul\":1942:1951   */\n      dup6\n        /* \"#utility.yul\":1938:1960   */\n      add\n        /* \"#utility.yul\":1906:1970   */\n      tag_158\n      jump\t// in\n    tag_177:\n        /* \"#utility.yul\":1896:1970   */\n      swap2\n      pop\n        /* \"#utility.yul\":1852:1980   */\n      pop\n        /* \"#utility.yul\":1636:1987   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1993:2111   */\n    tag_178:\n        /* \"#utility.yul\":2080:2104   */\n      tag_180\n        /* \"#utility.yul\":2098:2103   */\n      dup2\n        /* \"#utility.yul\":2080:2104   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2075:2078   */\n      dup3\n        /* \"#utility.yul\":2068:2105   */\n      mstore\n        /* \"#utility.yul\":1993:2111   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2117:2276   */\n    tag_182:\n        /* \"#utility.yul\":2218:2269   */\n      tag_184\n        /* \"#utility.yul\":2263:2268   */\n      dup2\n        /* \"#utility.yul\":2218:2269   */\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":2213:2216   */\n      dup3\n        /* \"#utility.yul\":2206:2270   */\n      mstore\n        /* \"#utility.yul\":2117:2276   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2282:2443   */\n    tag_186:\n        /* \"#utility.yul\":2384:2436   */\n      tag_188\n        /* \"#utility.yul\":2430:2435   */\n      dup2\n        /* \"#utility.yul\":2384:2436   */\n      tag_189\n      jump\t// in\n    tag_188:\n        /* \"#utility.yul\":2379:2382   */\n      dup3\n        /* \"#utility.yul\":2372:2437   */\n      mstore\n        /* \"#utility.yul\":2282:2443   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2449:2612   */\n    tag_190:\n        /* \"#utility.yul\":2552:2605   */\n      tag_192\n        /* \"#utility.yul\":2599:2604   */\n      dup2\n        /* \"#utility.yul\":2552:2605   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":2547:2550   */\n      dup3\n        /* \"#utility.yul\":2540:2606   */\n      mstore\n        /* \"#utility.yul\":2449:2612   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2618:2984   */\n    tag_194:\n        /* \"#utility.yul\":2760:2763   */\n      0x00\n        /* \"#utility.yul\":2781:2848   */\n      tag_196\n        /* \"#utility.yul\":2845:2847   */\n      0x0a\n        /* \"#utility.yul\":2840:2843   */\n      dup4\n        /* \"#utility.yul\":2781:2848   */\n      tag_197\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":2774:2848   */\n      swap2\n      pop\n        /* \"#utility.yul\":2857:2950   */\n      tag_198\n        /* \"#utility.yul\":2946:2949   */\n      dup3\n        /* \"#utility.yul\":2857:2950   */\n      tag_199\n      jump\t// in\n    tag_198:\n        /* \"#utility.yul\":2975:2977   */\n      0x20\n        /* \"#utility.yul\":2970:2973   */\n      dup3\n        /* \"#utility.yul\":2966:2978   */\n      add\n        /* \"#utility.yul\":2959:2978   */\n      swap1\n      pop\n        /* \"#utility.yul\":2618:2984   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2990:3356   */\n    tag_200:\n        /* \"#utility.yul\":3132:3135   */\n      0x00\n        /* \"#utility.yul\":3153:3220   */\n      tag_202\n        /* \"#utility.yul\":3217:3219   */\n      0x0d\n        /* \"#utility.yul\":3212:3215   */\n      dup4\n        /* \"#utility.yul\":3153:3220   */\n      tag_197\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3146:3220   */\n      swap2\n      pop\n        /* \"#utility.yul\":3229:3322   */\n      tag_203\n        /* \"#utility.yul\":3318:3321   */\n      dup3\n        /* \"#utility.yul\":3229:3322   */\n      tag_204\n      jump\t// in\n    tag_203:\n        /* \"#utility.yul\":3347:3349   */\n      0x20\n        /* \"#utility.yul\":3342:3345   */\n      dup3\n        /* \"#utility.yul\":3338:3350   */\n      add\n        /* \"#utility.yul\":3331:3350   */\n      swap1\n      pop\n        /* \"#utility.yul\":2990:3356   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3362:3728   */\n    tag_205:\n        /* \"#utility.yul\":3504:3507   */\n      0x00\n        /* \"#utility.yul\":3525:3592   */\n      tag_207\n        /* \"#utility.yul\":3589:3591   */\n      0x0d\n        /* \"#utility.yul\":3584:3587   */\n      dup4\n        /* \"#utility.yul\":3525:3592   */\n      tag_197\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":3518:3592   */\n      swap2\n      pop\n        /* \"#utility.yul\":3601:3694   */\n      tag_208\n        /* \"#utility.yul\":3690:3693   */\n      dup3\n        /* \"#utility.yul\":3601:3694   */\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":3719:3721   */\n      0x20\n        /* \"#utility.yul\":3714:3717   */\n      dup3\n        /* \"#utility.yul\":3710:3722   */\n      add\n        /* \"#utility.yul\":3703:3722   */\n      swap1\n      pop\n        /* \"#utility.yul\":3362:3728   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3734:4099   */\n    tag_210:\n        /* \"#utility.yul\":3876:3879   */\n      0x00\n        /* \"#utility.yul\":3897:3963   */\n      tag_212\n        /* \"#utility.yul\":3961:3962   */\n      0x09\n        /* \"#utility.yul\":3956:3959   */\n      dup4\n        /* \"#utility.yul\":3897:3963   */\n      tag_197\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":3890:3963   */\n      swap2\n      pop\n        /* \"#utility.yul\":3972:4065   */\n      tag_213\n        /* \"#utility.yul\":4061:4064   */\n      dup3\n        /* \"#utility.yul\":3972:4065   */\n      tag_214\n      jump\t// in\n    tag_213:\n        /* \"#utility.yul\":4090:4092   */\n      0x20\n        /* \"#utility.yul\":4085:4088   */\n      dup3\n        /* \"#utility.yul\":4081:4093   */\n      add\n        /* \"#utility.yul\":4074:4093   */\n      swap1\n      pop\n        /* \"#utility.yul\":3734:4099   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4105:4471   */\n    tag_215:\n        /* \"#utility.yul\":4247:4250   */\n      0x00\n        /* \"#utility.yul\":4268:4335   */\n      tag_217\n        /* \"#utility.yul\":4332:4334   */\n      0x1f\n        /* \"#utility.yul\":4327:4330   */\n      dup4\n        /* \"#utility.yul\":4268:4335   */\n      tag_197\n      jump\t// in\n    tag_217:\n        /* \"#utility.yul\":4261:4335   */\n      swap2\n      pop\n        /* \"#utility.yul\":4344:4437   */\n      tag_218\n        /* \"#utility.yul\":4433:4436   */\n      dup3\n        /* \"#utility.yul\":4344:4437   */\n      tag_219\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":4462:4464   */\n      0x20\n        /* \"#utility.yul\":4457:4460   */\n      dup3\n        /* \"#utility.yul\":4453:4465   */\n      add\n        /* \"#utility.yul\":4446:4465   */\n      swap1\n      pop\n        /* \"#utility.yul\":4105:4471   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4477:4595   */\n    tag_220:\n        /* \"#utility.yul\":4564:4588   */\n      tag_222\n        /* \"#utility.yul\":4582:4587   */\n      dup2\n        /* \"#utility.yul\":4564:4588   */\n      tag_223\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":4559:4562   */\n      dup3\n        /* \"#utility.yul\":4552:4589   */\n      mstore\n        /* \"#utility.yul\":4477:4595   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4601:4823   */\n    tag_31:\n        /* \"#utility.yul\":4694:4698   */\n      0x00\n        /* \"#utility.yul\":4732:4734   */\n      0x20\n        /* \"#utility.yul\":4721:4730   */\n      dup3\n        /* \"#utility.yul\":4717:4735   */\n      add\n        /* \"#utility.yul\":4709:4735   */\n      swap1\n      pop\n        /* \"#utility.yul\":4745:4816   */\n      tag_225\n        /* \"#utility.yul\":4813:4814   */\n      0x00\n        /* \"#utility.yul\":4802:4811   */\n      dup4\n        /* \"#utility.yul\":4798:4815   */\n      add\n        /* \"#utility.yul\":4789:4795   */\n      dup5\n        /* \"#utility.yul\":4745:4816   */\n      tag_178\n      jump\t// in\n    tag_225:\n        /* \"#utility.yul\":4601:4823   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4829:5271   */\n    tag_93:\n        /* \"#utility.yul\":4978:4982   */\n      0x00\n        /* \"#utility.yul\":5016:5018   */\n      0x60\n        /* \"#utility.yul\":5005:5014   */\n      dup3\n        /* \"#utility.yul\":5001:5019   */\n      add\n        /* \"#utility.yul\":4993:5019   */\n      swap1\n      pop\n        /* \"#utility.yul\":5029:5100   */\n      tag_227\n        /* \"#utility.yul\":5097:5098   */\n      0x00\n        /* \"#utility.yul\":5086:5095   */\n      dup4\n        /* \"#utility.yul\":5082:5099   */\n      add\n        /* \"#utility.yul\":5073:5079   */\n      dup7\n        /* \"#utility.yul\":5029:5100   */\n      tag_178\n      jump\t// in\n    tag_227:\n        /* \"#utility.yul\":5110:5182   */\n      tag_228\n        /* \"#utility.yul\":5178:5180   */\n      0x20\n        /* \"#utility.yul\":5167:5176   */\n      dup4\n        /* \"#utility.yul\":5163:5181   */\n      add\n        /* \"#utility.yul\":5154:5160   */\n      dup6\n        /* \"#utility.yul\":5110:5182   */\n      tag_178\n      jump\t// in\n    tag_228:\n        /* \"#utility.yul\":5192:5264   */\n      tag_229\n        /* \"#utility.yul\":5260:5262   */\n      0x40\n        /* \"#utility.yul\":5249:5258   */\n      dup4\n        /* \"#utility.yul\":5245:5263   */\n      add\n        /* \"#utility.yul\":5236:5242   */\n      dup5\n        /* \"#utility.yul\":5192:5264   */\n      tag_220\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":4829:5271   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5277:5609   */\n    tag_83:\n        /* \"#utility.yul\":5398:5402   */\n      0x00\n        /* \"#utility.yul\":5436:5438   */\n      0x40\n        /* \"#utility.yul\":5425:5434   */\n      dup3\n        /* \"#utility.yul\":5421:5439   */\n      add\n        /* \"#utility.yul\":5413:5439   */\n      swap1\n      pop\n        /* \"#utility.yul\":5449:5520   */\n      tag_231\n        /* \"#utility.yul\":5517:5518   */\n      0x00\n        /* \"#utility.yul\":5506:5515   */\n      dup4\n        /* \"#utility.yul\":5502:5519   */\n      add\n        /* \"#utility.yul\":5493:5499   */\n      dup6\n        /* \"#utility.yul\":5449:5520   */\n      tag_178\n      jump\t// in\n    tag_231:\n        /* \"#utility.yul\":5530:5602   */\n      tag_232\n        /* \"#utility.yul\":5598:5600   */\n      0x20\n        /* \"#utility.yul\":5587:5596   */\n      dup4\n        /* \"#utility.yul\":5583:5601   */\n      add\n        /* \"#utility.yul\":5574:5580   */\n      dup5\n        /* \"#utility.yul\":5530:5602   */\n      tag_220\n      jump\t// in\n    tag_232:\n        /* \"#utility.yul\":5277:5609   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5615:5865   */\n    tag_35:\n        /* \"#utility.yul\":5722:5726   */\n      0x00\n        /* \"#utility.yul\":5760:5762   */\n      0x20\n        /* \"#utility.yul\":5749:5758   */\n      dup3\n        /* \"#utility.yul\":5745:5763   */\n      add\n        /* \"#utility.yul\":5737:5763   */\n      swap1\n      pop\n        /* \"#utility.yul\":5773:5858   */\n      tag_234\n        /* \"#utility.yul\":5855:5856   */\n      0x00\n        /* \"#utility.yul\":5844:5853   */\n      dup4\n        /* \"#utility.yul\":5840:5857   */\n      add\n        /* \"#utility.yul\":5831:5837   */\n      dup5\n        /* \"#utility.yul\":5773:5858   */\n      tag_182\n      jump\t// in\n    tag_234:\n        /* \"#utility.yul\":5615:5865   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5871:6123   */\n    tag_42:\n        /* \"#utility.yul\":5979:5983   */\n      0x00\n        /* \"#utility.yul\":6017:6019   */\n      0x20\n        /* \"#utility.yul\":6006:6015   */\n      dup3\n        /* \"#utility.yul\":6002:6020   */\n      add\n        /* \"#utility.yul\":5994:6020   */\n      swap1\n      pop\n        /* \"#utility.yul\":6030:6116   */\n      tag_236\n        /* \"#utility.yul\":6113:6114   */\n      0x00\n        /* \"#utility.yul\":6102:6111   */\n      dup4\n        /* \"#utility.yul\":6098:6115   */\n      add\n        /* \"#utility.yul\":6089:6095   */\n      dup5\n        /* \"#utility.yul\":6030:6116   */\n      tag_186\n      jump\t// in\n    tag_236:\n        /* \"#utility.yul\":5871:6123   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6129:6383   */\n    tag_46:\n        /* \"#utility.yul\":6238:6242   */\n      0x00\n        /* \"#utility.yul\":6276:6278   */\n      0x20\n        /* \"#utility.yul\":6265:6274   */\n      dup3\n        /* \"#utility.yul\":6261:6279   */\n      add\n        /* \"#utility.yul\":6253:6279   */\n      swap1\n      pop\n        /* \"#utility.yul\":6289:6376   */\n      tag_238\n        /* \"#utility.yul\":6373:6374   */\n      0x00\n        /* \"#utility.yul\":6362:6371   */\n      dup4\n        /* \"#utility.yul\":6358:6375   */\n      add\n        /* \"#utility.yul\":6349:6355   */\n      dup5\n        /* \"#utility.yul\":6289:6376   */\n      tag_190\n      jump\t// in\n    tag_238:\n        /* \"#utility.yul\":6129:6383   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6389:6808   */\n    tag_63:\n        /* \"#utility.yul\":6555:6559   */\n      0x00\n        /* \"#utility.yul\":6593:6595   */\n      0x20\n        /* \"#utility.yul\":6582:6591   */\n      dup3\n        /* \"#utility.yul\":6578:6596   */\n      add\n        /* \"#utility.yul\":6570:6596   */\n      swap1\n      pop\n        /* \"#utility.yul\":6642:6651   */\n      dup2\n        /* \"#utility.yul\":6636:6640   */\n      dup2\n        /* \"#utility.yul\":6632:6652   */\n      sub\n        /* \"#utility.yul\":6628:6629   */\n      0x00\n        /* \"#utility.yul\":6617:6626   */\n      dup4\n        /* \"#utility.yul\":6613:6630   */\n      add\n        /* \"#utility.yul\":6606:6653   */\n      mstore\n        /* \"#utility.yul\":6670:6801   */\n      tag_240\n        /* \"#utility.yul\":6796:6800   */\n      dup2\n        /* \"#utility.yul\":6670:6801   */\n      tag_194\n      jump\t// in\n    tag_240:\n        /* \"#utility.yul\":6662:6801   */\n      swap1\n      pop\n        /* \"#utility.yul\":6389:6808   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6814:7233   */\n    tag_127:\n        /* \"#utility.yul\":6980:6984   */\n      0x00\n        /* \"#utility.yul\":7018:7020   */\n      0x20\n        /* \"#utility.yul\":7007:7016   */\n      dup3\n        /* \"#utility.yul\":7003:7021   */\n      add\n        /* \"#utility.yul\":6995:7021   */\n      swap1\n      pop\n        /* \"#utility.yul\":7067:7076   */\n      dup2\n        /* \"#utility.yul\":7061:7065   */\n      dup2\n        /* \"#utility.yul\":7057:7077   */\n      sub\n        /* \"#utility.yul\":7053:7054   */\n      0x00\n        /* \"#utility.yul\":7042:7051   */\n      dup4\n        /* \"#utility.yul\":7038:7055   */\n      add\n        /* \"#utility.yul\":7031:7078   */\n      mstore\n        /* \"#utility.yul\":7095:7226   */\n      tag_242\n        /* \"#utility.yul\":7221:7225   */\n      dup2\n        /* \"#utility.yul\":7095:7226   */\n      tag_200\n      jump\t// in\n    tag_242:\n        /* \"#utility.yul\":7087:7226   */\n      swap1\n      pop\n        /* \"#utility.yul\":6814:7233   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7239:7658   */\n    tag_66:\n        /* \"#utility.yul\":7405:7409   */\n      0x00\n        /* \"#utility.yul\":7443:7445   */\n      0x20\n        /* \"#utility.yul\":7432:7441   */\n      dup3\n        /* \"#utility.yul\":7428:7446   */\n      add\n        /* \"#utility.yul\":7420:7446   */\n      swap1\n      pop\n        /* \"#utility.yul\":7492:7501   */\n      dup2\n        /* \"#utility.yul\":7486:7490   */\n      dup2\n        /* \"#utility.yul\":7482:7502   */\n      sub\n        /* \"#utility.yul\":7478:7479   */\n      0x00\n        /* \"#utility.yul\":7467:7476   */\n      dup4\n        /* \"#utility.yul\":7463:7480   */\n      add\n        /* \"#utility.yul\":7456:7503   */\n      mstore\n        /* \"#utility.yul\":7520:7651   */\n      tag_244\n        /* \"#utility.yul\":7646:7650   */\n      dup2\n        /* \"#utility.yul\":7520:7651   */\n      tag_205\n      jump\t// in\n    tag_244:\n        /* \"#utility.yul\":7512:7651   */\n      swap1\n      pop\n        /* \"#utility.yul\":7239:7658   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7664:8083   */\n    tag_140:\n        /* \"#utility.yul\":7830:7834   */\n      0x00\n        /* \"#utility.yul\":7868:7870   */\n      0x20\n        /* \"#utility.yul\":7857:7866   */\n      dup3\n        /* \"#utility.yul\":7853:7871   */\n      add\n        /* \"#utility.yul\":7845:7871   */\n      swap1\n      pop\n        /* \"#utility.yul\":7917:7926   */\n      dup2\n        /* \"#utility.yul\":7911:7915   */\n      dup2\n        /* \"#utility.yul\":7907:7927   */\n      sub\n        /* \"#utility.yul\":7903:7904   */\n      0x00\n        /* \"#utility.yul\":7892:7901   */\n      dup4\n        /* \"#utility.yul\":7888:7905   */\n      add\n        /* \"#utility.yul\":7881:7928   */\n      mstore\n        /* \"#utility.yul\":7945:8076   */\n      tag_246\n        /* \"#utility.yul\":8071:8075   */\n      dup2\n        /* \"#utility.yul\":7945:8076   */\n      tag_210\n      jump\t// in\n    tag_246:\n        /* \"#utility.yul\":7937:8076   */\n      swap1\n      pop\n        /* \"#utility.yul\":7664:8083   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8089:8508   */\n    tag_100:\n        /* \"#utility.yul\":8255:8259   */\n      0x00\n        /* \"#utility.yul\":8293:8295   */\n      0x20\n        /* \"#utility.yul\":8282:8291   */\n      dup3\n        /* \"#utility.yul\":8278:8296   */\n      add\n        /* \"#utility.yul\":8270:8296   */\n      swap1\n      pop\n        /* \"#utility.yul\":8342:8351   */\n      dup2\n        /* \"#utility.yul\":8336:8340   */\n      dup2\n        /* \"#utility.yul\":8332:8352   */\n      sub\n        /* \"#utility.yul\":8328:8329   */\n      0x00\n        /* \"#utility.yul\":8317:8326   */\n      dup4\n        /* \"#utility.yul\":8313:8330   */\n      add\n        /* \"#utility.yul\":8306:8353   */\n      mstore\n        /* \"#utility.yul\":8370:8501   */\n      tag_248\n        /* \"#utility.yul\":8496:8500   */\n      dup2\n        /* \"#utility.yul\":8370:8501   */\n      tag_215\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":8362:8501   */\n      swap1\n      pop\n        /* \"#utility.yul\":8089:8508   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8514:8736   */\n    tag_27:\n        /* \"#utility.yul\":8607:8611   */\n      0x00\n        /* \"#utility.yul\":8645:8647   */\n      0x20\n        /* \"#utility.yul\":8634:8643   */\n      dup3\n        /* \"#utility.yul\":8630:8648   */\n      add\n        /* \"#utility.yul\":8622:8648   */\n      swap1\n      pop\n        /* \"#utility.yul\":8658:8729   */\n      tag_250\n        /* \"#utility.yul\":8726:8727   */\n      0x00\n        /* \"#utility.yul\":8715:8724   */\n      dup4\n        /* \"#utility.yul\":8711:8728   */\n      add\n        /* \"#utility.yul\":8702:8708   */\n      dup5\n        /* \"#utility.yul\":8658:8729   */\n      tag_220\n      jump\t// in\n    tag_250:\n        /* \"#utility.yul\":8514:8736   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8823:8992   */\n    tag_197:\n        /* \"#utility.yul\":8907:8918   */\n      0x00\n        /* \"#utility.yul\":8941:8947   */\n      dup3\n        /* \"#utility.yul\":8936:8939   */\n      dup3\n        /* \"#utility.yul\":8929:8948   */\n      mstore\n        /* \"#utility.yul\":8981:8985   */\n      0x20\n        /* \"#utility.yul\":8976:8979   */\n      dup3\n        /* \"#utility.yul\":8972:8986   */\n      add\n        /* \"#utility.yul\":8957:8986   */\n      swap1\n      pop\n        /* \"#utility.yul\":8823:8992   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8998:9303   */\n    tag_76:\n        /* \"#utility.yul\":9038:9041   */\n      0x00\n        /* \"#utility.yul\":9057:9077   */\n      tag_255\n        /* \"#utility.yul\":9075:9076   */\n      dup3\n        /* \"#utility.yul\":9057:9077   */\n      tag_223\n      jump\t// in\n    tag_255:\n        /* \"#utility.yul\":9052:9077   */\n      swap2\n      pop\n        /* \"#utility.yul\":9091:9111   */\n      tag_256\n        /* \"#utility.yul\":9109:9110   */\n      dup4\n        /* \"#utility.yul\":9091:9111   */\n      tag_223\n      jump\t// in\n    tag_256:\n        /* \"#utility.yul\":9086:9111   */\n      swap3\n      pop\n        /* \"#utility.yul\":9245:9246   */\n      dup3\n        /* \"#utility.yul\":9177:9243   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9173:9247   */\n      sub\n        /* \"#utility.yul\":9170:9171   */\n      dup3\n        /* \"#utility.yul\":9167:9248   */\n      gt\n        /* \"#utility.yul\":9164:9271   */\n      iszero\n      tag_257\n      jumpi\n        /* \"#utility.yul\":9251:9269   */\n      tag_258\n      tag_259\n      jump\t// in\n    tag_258:\n        /* \"#utility.yul\":9164:9271   */\n    tag_257:\n        /* \"#utility.yul\":9295:9296   */\n      dup3\n        /* \"#utility.yul\":9292:9293   */\n      dup3\n        /* \"#utility.yul\":9288:9297   */\n      add\n        /* \"#utility.yul\":9281:9297   */\n      swap1\n      pop\n        /* \"#utility.yul\":8998:9303   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9309:9500   */\n    tag_73:\n        /* \"#utility.yul\":9349:9353   */\n      0x00\n        /* \"#utility.yul\":9369:9389   */\n      tag_261\n        /* \"#utility.yul\":9387:9388   */\n      dup3\n        /* \"#utility.yul\":9369:9389   */\n      tag_223\n      jump\t// in\n    tag_261:\n        /* \"#utility.yul\":9364:9389   */\n      swap2\n      pop\n        /* \"#utility.yul\":9403:9423   */\n      tag_262\n        /* \"#utility.yul\":9421:9422   */\n      dup4\n        /* \"#utility.yul\":9403:9423   */\n      tag_223\n      jump\t// in\n    tag_262:\n        /* \"#utility.yul\":9398:9423   */\n      swap3\n      pop\n        /* \"#utility.yul\":9442:9443   */\n      dup3\n        /* \"#utility.yul\":9439:9440   */\n      dup3\n        /* \"#utility.yul\":9436:9444   */\n      lt\n        /* \"#utility.yul\":9433:9467   */\n      iszero\n      tag_263\n      jumpi\n        /* \"#utility.yul\":9447:9465   */\n      tag_264\n      tag_259\n      jump\t// in\n    tag_264:\n        /* \"#utility.yul\":9433:9467   */\n    tag_263:\n        /* \"#utility.yul\":9492:9493   */\n      dup3\n        /* \"#utility.yul\":9489:9490   */\n      dup3\n        /* \"#utility.yul\":9485:9494   */\n      sub\n        /* \"#utility.yul\":9477:9494   */\n      swap1\n      pop\n        /* \"#utility.yul\":9309:9500   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9506:9602   */\n    tag_181:\n        /* \"#utility.yul\":9543:9550   */\n      0x00\n        /* \"#utility.yul\":9572:9596   */\n      tag_266\n        /* \"#utility.yul\":9590:9595   */\n      dup3\n        /* \"#utility.yul\":9572:9596   */\n      tag_267\n      jump\t// in\n    tag_266:\n        /* \"#utility.yul\":9561:9596   */\n      swap1\n      pop\n        /* \"#utility.yul\":9506:9602   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9608:9698   */\n    tag_268:\n        /* \"#utility.yul\":9642:9649   */\n      0x00\n        /* \"#utility.yul\":9685:9690   */\n      dup2\n        /* \"#utility.yul\":9678:9691   */\n      iszero\n        /* \"#utility.yul\":9671:9692   */\n      iszero\n        /* \"#utility.yul\":9660:9692   */\n      swap1\n      pop\n        /* \"#utility.yul\":9608:9698   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9704:9830   */\n    tag_267:\n        /* \"#utility.yul\":9741:9748   */\n      0x00\n        /* \"#utility.yul\":9781:9823   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":9774:9779   */\n      dup3\n        /* \"#utility.yul\":9770:9824   */\n      and\n        /* \"#utility.yul\":9759:9824   */\n      swap1\n      pop\n        /* \"#utility.yul\":9704:9830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9836:9913   */\n    tag_223:\n        /* \"#utility.yul\":9873:9880   */\n      0x00\n        /* \"#utility.yul\":9902:9907   */\n      dup2\n        /* \"#utility.yul\":9891:9907   */\n      swap1\n      pop\n        /* \"#utility.yul\":9836:9913   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9919:10059   */\n    tag_185:\n        /* \"#utility.yul\":9983:9992   */\n      0x00\n        /* \"#utility.yul\":10016:10053   */\n      tag_273\n        /* \"#utility.yul\":10047:10052   */\n      dup3\n        /* \"#utility.yul\":10016:10053   */\n      tag_274\n      jump\t// in\n    tag_273:\n        /* \"#utility.yul\":10003:10053   */\n      swap1\n      pop\n        /* \"#utility.yul\":9919:10059   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10065:10206   */\n    tag_189:\n        /* \"#utility.yul\":10130:10139   */\n      0x00\n        /* \"#utility.yul\":10163:10200   */\n      tag_276\n        /* \"#utility.yul\":10194:10199   */\n      dup3\n        /* \"#utility.yul\":10163:10200   */\n      tag_274\n      jump\t// in\n    tag_276:\n        /* \"#utility.yul\":10150:10200   */\n      swap1\n      pop\n        /* \"#utility.yul\":10065:10206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10212:10354   */\n    tag_193:\n        /* \"#utility.yul\":10278:10287   */\n      0x00\n        /* \"#utility.yul\":10311:10348   */\n      tag_278\n        /* \"#utility.yul\":10342:10347   */\n      dup3\n        /* \"#utility.yul\":10311:10348   */\n      tag_274\n      jump\t// in\n    tag_278:\n        /* \"#utility.yul\":10298:10348   */\n      swap1\n      pop\n        /* \"#utility.yul\":10212:10354   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10360:10486   */\n    tag_274:\n        /* \"#utility.yul\":10410:10419   */\n      0x00\n        /* \"#utility.yul\":10443:10480   */\n      tag_280\n        /* \"#utility.yul\":10474:10479   */\n      dup3\n        /* \"#utility.yul\":10443:10480   */\n      tag_281\n      jump\t// in\n    tag_280:\n        /* \"#utility.yul\":10430:10480   */\n      swap1\n      pop\n        /* \"#utility.yul\":10360:10486   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10492:10605   */\n    tag_281:\n        /* \"#utility.yul\":10542:10551   */\n      0x00\n        /* \"#utility.yul\":10575:10599   */\n      tag_283\n        /* \"#utility.yul\":10593:10598   */\n      dup3\n        /* \"#utility.yul\":10575:10599   */\n      tag_267\n      jump\t// in\n    tag_283:\n        /* \"#utility.yul\":10562:10599   */\n      swap1\n      pop\n        /* \"#utility.yul\":10492:10605   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10611:10791   */\n    tag_259:\n        /* \"#utility.yul\":10659:10736   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":10656:10657   */\n      0x00\n        /* \"#utility.yul\":10649:10737   */\n      mstore\n        /* \"#utility.yul\":10756:10760   */\n      0x11\n        /* \"#utility.yul\":10753:10754   */\n      0x04\n        /* \"#utility.yul\":10746:10761   */\n      mstore\n        /* \"#utility.yul\":10780:10784   */\n      0x24\n        /* \"#utility.yul\":10777:10778   */\n      0x00\n        /* \"#utility.yul\":10770:10785   */\n      revert\n        /* \"#utility.yul\":10920:11037   */\n    tag_164:\n        /* \"#utility.yul\":11029:11030   */\n      0x00\n        /* \"#utility.yul\":11026:11027   */\n      dup1\n        /* \"#utility.yul\":11019:11031   */\n      revert\n        /* \"#utility.yul\":11043:11203   */\n    tag_199:\n        /* \"#utility.yul\":11183:11195   */\n      0x4e6f74207374616b656400000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11179:11180   */\n      0x00\n        /* \"#utility.yul\":11171:11177   */\n      dup3\n        /* \"#utility.yul\":11167:11181   */\n      add\n        /* \"#utility.yul\":11160:11196   */\n      mstore\n        /* \"#utility.yul\":11043:11203   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11209:11372   */\n    tag_204:\n        /* \"#utility.yul\":11349:11364   */\n      0x5472616e73666572206661696c00000000000000000000000000000000000000\n        /* \"#utility.yul\":11345:11346   */\n      0x00\n        /* \"#utility.yul\":11337:11343   */\n      dup3\n        /* \"#utility.yul\":11333:11347   */\n      add\n        /* \"#utility.yul\":11326:11365   */\n      mstore\n        /* \"#utility.yul\":11209:11372   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11378:11541   */\n    tag_209:\n        /* \"#utility.yul\":11518:11533   */\n      0x4e6f74207265616c4f776e657200000000000000000000000000000000000000\n        /* \"#utility.yul\":11514:11515   */\n      0x00\n        /* \"#utility.yul\":11506:11512   */\n      dup3\n        /* \"#utility.yul\":11502:11516   */\n      add\n        /* \"#utility.yul\":11495:11534   */\n      mstore\n        /* \"#utility.yul\":11378:11541   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11547:11706   */\n    tag_214:\n        /* \"#utility.yul\":11687:11698   */\n      0x4e6f74206f776e65720000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":11683:11684   */\n      0x00\n        /* \"#utility.yul\":11675:11681   */\n      dup3\n        /* \"#utility.yul\":11671:11685   */\n      add\n        /* \"#utility.yul\":11664:11699   */\n      mstore\n        /* \"#utility.yul\":11547:11706   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11712:11893   */\n    tag_219:\n        /* \"#utility.yul\":11852:11885   */\n      0x5265656e7472616e637947756172643a207265656e7472616e742063616c6c00\n        /* \"#utility.yul\":11848:11849   */\n      0x00\n        /* \"#utility.yul\":11840:11846   */\n      dup3\n        /* \"#utility.yul\":11836:11850   */\n      add\n        /* \"#utility.yul\":11829:11886   */\n      mstore\n        /* \"#utility.yul\":11712:11893   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11899:12021   */\n    tag_149:\n        /* \"#utility.yul\":11972:11996   */\n      tag_294\n        /* \"#utility.yul\":11990:11995   */\n      dup2\n        /* \"#utility.yul\":11972:11996   */\n      tag_181\n      jump\t// in\n    tag_294:\n        /* \"#utility.yul\":11965:11970   */\n      dup2\n        /* \"#utility.yul\":11962:11997   */\n      eq\n        /* \"#utility.yul\":11952:12015   */\n      tag_295\n      jumpi\n        /* \"#utility.yul\":12011:12012   */\n      0x00\n        /* \"#utility.yul\":12008:12009   */\n      dup1\n        /* \"#utility.yul\":12001:12013   */\n      revert\n        /* \"#utility.yul\":11952:12015   */\n    tag_295:\n        /* \"#utility.yul\":11899:12021   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12027:12143   */\n    tag_153:\n        /* \"#utility.yul\":12097:12118   */\n      tag_297\n        /* \"#utility.yul\":12112:12117   */\n      dup2\n        /* \"#utility.yul\":12097:12118   */\n      tag_268\n      jump\t// in\n    tag_297:\n        /* \"#utility.yul\":12090:12095   */\n      dup2\n        /* \"#utility.yul\":12087:12119   */\n      eq\n        /* \"#utility.yul\":12077:12137   */\n      tag_298\n      jumpi\n        /* \"#utility.yul\":12133:12134   */\n      0x00\n        /* \"#utility.yul\":12130:12131   */\n      dup1\n        /* \"#utility.yul\":12123:12135   */\n      revert\n        /* \"#utility.yul\":12077:12137   */\n    tag_298:\n        /* \"#utility.yul\":12027:12143   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12149:12271   */\n    tag_157:\n        /* \"#utility.yul\":12222:12246   */\n      tag_300\n        /* \"#utility.yul\":12240:12245   */\n      dup2\n        /* \"#utility.yul\":12222:12246   */\n      tag_223\n      jump\t// in\n    tag_300:\n        /* \"#utility.yul\":12215:12220   */\n      dup2\n        /* \"#utility.yul\":12212:12247   */\n      eq\n        /* \"#utility.yul\":12202:12265   */\n      tag_301\n      jumpi\n        /* \"#utility.yul\":12261:12262   */\n      0x00\n        /* \"#utility.yul\":12258:12259   */\n      dup1\n        /* \"#utility.yul\":12251:12263   */\n      revert\n        /* \"#utility.yul\":12202:12265   */\n    tag_301:\n        /* \"#utility.yul\":12149:12271   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212204b47107a69dfcb0b92bb6c189783a86e2af9f8deb9fdad3f63ef5dc33324e22c64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 331,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 425,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 445,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 477,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 482,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:5"
															},
															"nodeType": "YulIf",
															"src": "260:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:5",
														"type": ""
													}
												],
												"src": "156:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:5",
														"type": ""
													}
												],
												"src": "669:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:5",
														"type": ""
													}
												],
												"src": "750:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:5",
														"type": ""
													}
												],
												"src": "852:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:5"
															},
															"nodeType": "YulIf",
															"src": "1283:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:5",
														"type": ""
													}
												],
												"src": "1230:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60806040523480156200001157600080fd5b506040516200177a3803806200177a833981810160405281019062000037919062000162565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050620001fc565b6000815190506200015c81620001e2565b92915050565b600080604083850312156200017c576200017b620001dd565b5b60006200018c858286016200014b565b92505060206200019f858286016200014b565b9150509250929050565b6000620001b682620001bd565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b620001ed81620001a9565b8114620001f957600080fd5b50565b61156e806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c806366bb863b1161006657806366bb863b1461011c57806380a540011461013a578063a694fc3a14610158578063b8e33fb214610174578063fead3d6e1461019257610093565b80630eeadd30146100985780632e17de78146100b4578063379607f5146100d057806353eebc6d146100ec575b600080fd5b6100b260048036038101906100ad9190610fda565b6101b0565b005b6100ce60048036038101906100c99190610fda565b61027a565b005b6100ea60048036038101906100e59190610fda565b6107ef565b005b61010660048036038101906101019190610fda565b610c02565b604051610113919061129a565b60405180910390f35b610124610c22565b604051610131919061112e565b60405180910390f35b610142610c48565b60405161014f91906111a9565b60405180910390f35b610172600480360381019061016d9190610fda565b610c6e565b005b61017c610ee0565b60405161018991906111c4565b60405180910390f35b61019a610f06565b6040516101a791906111df565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d826040518263ffffffff1660e01b815260040161020b919061129a565b602060405180830381600087803b15801561022557600080fd5b505af1158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d9190611007565b600560008381526020019081526020016000206001018190555050565b3073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102ec919061129a565b60206040518083038186803b15801561030457600080fd5b505afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610f80565b73ffffffffffffffffffffffffffffffffffffffff1614610392576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610389906111fa565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d9061123a565b60405180910390fd5b60006005600083815260200190815260200160002060010154600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d846040518263ffffffff1660e01b81526004016104aa919061129a565b602060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190611007565b610506919061131c565b600560008481526020019081526020016000206002015442610528919061131c565b61053291906112c6565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d846040518263ffffffff1660e01b8152600401610591919061129a565b602060405180830381600087803b1580156105ab57600080fd5b505af11580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e39190611007565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610642929190611180565b602060405180830381600087803b15801561065c57600080fd5b505af1158015610670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106949190610fad565b15610703574260056000858152602001908152602001600020600201819055506005600084815260200190815260200160002060010154816106d6919061131c565b6005600085815260200190815260200160002060010160008282546106fb91906112c6565b925050819055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161076293929190611149565b600060405180830381600087803b15801561077c57600080fd5b505af1158015610790573d6000803e3d6000fd5b5050505060006005600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60026000541415610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c9061127a565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600201541161086057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108ce57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d826040518263ffffffff1660e01b8152600401610929919061129a565b602060405180830381600087803b15801561094357600080fd5b505af1158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611007565b60056000838152602001908152602001600020600101819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d836040518263ffffffff1660e01b81526004016109f2919061129a565b602060405180830381600087803b158015610a0c57600080fd5b505af1158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a449190611007565b90506000600560008481526020019081526020016000206001015482610a6a919061131c565b600560008581526020019081526020016000206002015442610a8c919061131c565b610a9691906112c6565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610af5929190611180565b602060405180830381600087803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b479190610fad565b15610bba57426005600085815260200190815260200160002060020181905550600560008481526020019081526020016000206001015482610b89919061131c565b600560008581526020019081526020016000206001016000828254610bae91906112c6565b92505081905550610bf5565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec9061121a565b60405180910390fd5b5050600160008190555050565b600060056000838152602001908152602001600020600101549050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026000541415610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab9061127a565b60405180910390fd5b60026000819055503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610d2e919061129a565b60206040518083038186803b158015610d4657600080fd5b505afa158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e9190610f80565b73ffffffffffffffffffffffffffffffffffffffff1614610dd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcb9061125a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e3393929190611149565b600060405180830381600087803b158015610e4d57600080fd5b505af1158015610e61573d6000803e3d6000fd5b50505050336005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426005600083815260200190815260200160002060020181905550600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050610f3b816114f3565b92915050565b600081519050610f508161150a565b92915050565b600081359050610f6581611521565b92915050565b600081519050610f7a81611521565b92915050565b600060208284031215610f9657610f95611421565b5b6000610fa484828501610f2c565b91505092915050565b600060208284031215610fc357610fc2611421565b5b6000610fd184828501610f41565b91505092915050565b600060208284031215610ff057610fef611421565b5b6000610ffe84828501610f56565b91505092915050565b60006020828403121561101d5761101c611421565b5b600061102b84828501610f6b565b91505092915050565b61103d81611350565b82525050565b61104c81611398565b82525050565b61105b816113aa565b82525050565b61106a816113bc565b82525050565b600061107d600a836112b5565b915061108882611426565b602082019050919050565b60006110a0600d836112b5565b91506110ab8261144f565b602082019050919050565b60006110c3600d836112b5565b91506110ce82611478565b602082019050919050565b60006110e66009836112b5565b91506110f1826114a1565b602082019050919050565b6000611109601f836112b5565b9150611114826114ca565b602082019050919050565b6111288161138e565b82525050565b60006020820190506111436000830184611034565b92915050565b600060608201905061115e6000830186611034565b61116b6020830185611034565b611178604083018461111f565b949350505050565b60006040820190506111956000830185611034565b6111a2602083018461111f565b9392505050565b60006020820190506111be6000830184611043565b92915050565b60006020820190506111d96000830184611052565b92915050565b60006020820190506111f46000830184611061565b92915050565b6000602082019050818103600083015261121381611070565b9050919050565b6000602082019050818103600083015261123381611093565b9050919050565b60006020820190508181036000830152611253816110b6565b9050919050565b60006020820190508181036000830152611273816110d9565b9050919050565b60006020820190508181036000830152611293816110fc565b9050919050565b60006020820190506112af600083018461111f565b92915050565b600082825260208201905092915050565b60006112d18261138e565b91506112dc8361138e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611311576113106113f2565b5b828201905092915050565b60006113278261138e565b91506113328361138e565b925082821015611345576113446113f2565b5b828203905092915050565b600061135b8261136e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113a3826113ce565b9050919050565b60006113b5826113ce565b9050919050565b60006113c7826113ce565b9050919050565b60006113d9826113e0565b9050919050565b60006113eb8261136e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4e6f74207374616b656400000000000000000000000000000000000000000000600082015250565b7f5472616e73666572206661696c00000000000000000000000000000000000000600082015250565b7f4e6f74207265616c4f776e657200000000000000000000000000000000000000600082015250565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6114fc81611350565b811461150757600080fd5b50565b61151381611362565b811461151e57600080fd5b50565b61152a8161138e565b811461153557600080fd5b5056fea26469706673582212204b47107a69dfcb0b92bb6c189783a86e2af9f8deb9fdad3f63ef5dc33324e22c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x177A CODESIZE SUB DUP1 PUSH3 0x177A DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH3 0x37 SWAP2 SWAP1 PUSH3 0x162 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH3 0x1FC JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH3 0x15C DUP2 PUSH3 0x1E2 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x17C JUMPI PUSH3 0x17B PUSH3 0x1DD JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH3 0x18C DUP6 DUP3 DUP7 ADD PUSH3 0x14B JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH3 0x19F DUP6 DUP3 DUP7 ADD PUSH3 0x14B JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH3 0x1B6 DUP3 PUSH3 0x1BD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x1ED DUP2 PUSH3 0x1A9 JUMP JUMPDEST DUP2 EQ PUSH3 0x1F9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x156E DUP1 PUSH3 0x20C PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66BB863B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x192 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0xEEADD30 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x53EEBC6D EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0xC6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x239 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x389 SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x436 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42D SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP3 SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x670 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST ISZERO PUSH2 0x703 JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x762 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA44 SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP3 SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB47 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST ISZERO PUSH2 0xBBA JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0xB89 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEC SWAP1 PUSH2 0x121A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2E SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCB SWAP1 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE33 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3B DUP2 PUSH2 0x14F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF50 DUP2 PUSH2 0x150A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF65 DUP2 PUSH2 0x1521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF7A DUP2 PUSH2 0x1521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF96 JUMPI PUSH2 0xF95 PUSH2 0x1421 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA4 DUP5 DUP3 DUP6 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0x1421 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD1 DUP5 DUP3 DUP6 ADD PUSH2 0xF41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF0 JUMPI PUSH2 0xFEF PUSH2 0x1421 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFFE DUP5 DUP3 DUP6 ADD PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101C PUSH2 0x1421 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x102B DUP5 DUP3 DUP6 ADD PUSH2 0xF6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x103D DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x104C DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x105B DUP2 PUSH2 0x13AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x106A DUP2 PUSH2 0x13BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107D PUSH1 0xA DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1088 DUP3 PUSH2 0x1426 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A0 PUSH1 0xD DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AB DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C3 PUSH1 0xD DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x10CE DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E6 PUSH1 0x9 DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F1 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1109 PUSH1 0x1F DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1114 DUP3 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1128 DUP2 PUSH2 0x138E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1143 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1034 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x115E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x116B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x1178 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1195 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x11A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1043 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1061 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1213 DUP2 PUSH2 0x1070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1233 DUP2 PUSH2 0x1093 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1253 DUP2 PUSH2 0x10B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1273 DUP2 PUSH2 0x10D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1293 DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D1 DUP3 PUSH2 0x138E JUMP JUMPDEST SWAP2 POP PUSH2 0x12DC DUP4 PUSH2 0x138E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0x13F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 DUP3 PUSH2 0x138E JUMP JUMPDEST SWAP2 POP PUSH2 0x1332 DUP4 PUSH2 0x138E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0x13F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135B DUP3 PUSH2 0x136E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A3 DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B5 DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C7 DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D9 DUP3 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EB DUP3 PUSH2 0x136E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E6F74207374616B656400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74207265616C4F776E657200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x14FC DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP2 EQ PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1513 DUP2 PUSH2 0x1362 JUMP JUMPDEST DUP2 EQ PUSH2 0x151E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x152A DUP2 PUSH2 0x138E JUMP JUMPDEST DUP2 EQ PUSH2 0x1535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SELFBALANCE LT PUSH27 0x69DFCB0B92BB6C189783A86E2AF9F8DEB9FDAD3F63EF5DC33324E2 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:3103:4:-:0;;;526:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;614:12:4;594:9;;:33;;;;;;;;;;;;;;;;;;668:12;638:18;;:43;;;;;;;;;;;;;;;;;;713:14;692:11;;:36;;;;;;;;;;;;;;;;;;758:12;739:16;;:31;;;;;;;;;;;;;;;;;;526:262;;341:3103;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;341:3103:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@claim_498": {
									"entryPoint": 2031,
									"id": 498,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@claimedTrophies_354": {
									"entryPoint": 3074,
									"id": 354,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@parentNFTAddress_271": {
									"entryPoint": 3106,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNFT_266": {
									"entryPoint": 3808,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNftFunctions_269": {
									"entryPoint": 3846,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentToken_263": {
									"entryPoint": 3144,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@refreshTrophies_341": {
									"entryPoint": 432,
									"id": 341,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stake_401": {
									"entryPoint": 3182,
									"id": 401,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unstake_609": {
									"entryPoint": 634,
									"id": 609,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 3884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 3905,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3926,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 3947,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 3968,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 4013,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 4058,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 4103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 4148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 4163,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack": {
									"entryPoint": 4178,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack": {
									"entryPoint": 4193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4208,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4243,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4278,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4313,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 4348,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 4383,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 4398,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4425,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 4480,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 4521,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed": {
									"entryPoint": 4548,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed": {
									"entryPoint": 4575,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4602,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4634,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4666,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4698,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 4730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 4762,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 4789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 4806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 4892,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4962,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4974,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 5006,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 5016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$233_to_t_address": {
									"entryPoint": 5034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTGame_$258_to_t_address": {
									"entryPoint": 5052,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 5070,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 5088,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 5106,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 5153,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b": {
									"entryPoint": 5158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f": {
									"entryPoint": 5199,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24": {
									"entryPoint": 5240,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682": {
									"entryPoint": 5281,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619": {
									"entryPoint": 5322,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 5363,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 5386,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 5409,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:12274:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "216:77:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "226:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "241:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "235:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "235:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "226:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "281:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "257:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "257:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "257:30:5"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "194:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "202:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "210:5:5",
														"type": ""
													}
												],
												"src": "156:137:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "351:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "361:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "383:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "370:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "361:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "426:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "399:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "399:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "399:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "329:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "337:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "345:5:5",
														"type": ""
													}
												],
												"src": "299:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "507:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "517:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "532:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "526:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "526:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "517:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "575:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "548:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "548:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "548:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "485:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "493:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "501:5:5",
														"type": ""
													}
												],
												"src": "444:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "670:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "716:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "718:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "718:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "718:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "691:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "700:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "687:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "687:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "712:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "683:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "683:32:5"
															},
															"nodeType": "YulIf",
															"src": "680:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "809:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "824:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "838:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "828:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "853:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "899:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "910:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "895:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "895:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "919:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "863:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "863:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "853:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "640:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "651:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "663:6:5",
														"type": ""
													}
												],
												"src": "593:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1024:271:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1070:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1072:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1072:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1072:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1045:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1054:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1041:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1041:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1066:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1037:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:32:5"
															},
															"nodeType": "YulIf",
															"src": "1034:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1163:125:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1178:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1192:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1182:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1207:71:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1250:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1261:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1246:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1246:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1270:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1217:28:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1217:61:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1207:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "994:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1005:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1017:6:5",
														"type": ""
													}
												],
												"src": "950:345:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1367:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1413:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1415:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1415:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1415:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1388:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1397:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1384:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1384:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1409:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1380:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1380:32:5"
															},
															"nodeType": "YulIf",
															"src": "1377:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1506:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1521:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1535:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1525:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1550:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1585:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1596:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1581:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1581:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1605:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1560:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1560:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1550:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1337:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1348:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1360:6:5",
														"type": ""
													}
												],
												"src": "1301:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1713:274:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1759:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1761:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1761:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1761:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1734:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1743:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1730:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1730:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1755:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1726:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1726:32:5"
															},
															"nodeType": "YulIf",
															"src": "1723:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1852:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1867:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1881:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1871:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1896:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1942:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1953:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1938:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1938:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1962:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "1906:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1906:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1896:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1683:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1694:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1706:6:5",
														"type": ""
													}
												],
												"src": "1636:351:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2058:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2075:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2098:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2080:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2080:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2068:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2068:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2068:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2046:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2053:3:5",
														"type": ""
													}
												],
												"src": "1993:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2196:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2213:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2263:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2218:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2218:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2206:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2206:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2184:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2191:3:5",
														"type": ""
													}
												],
												"src": "2117:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2362:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2379:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2430:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$233_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2384:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2384:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2372:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2372:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2372:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2350:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2357:3:5",
														"type": ""
													}
												],
												"src": "2282:161:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2530:82:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2547:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2599:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTGame_$258_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2552:46:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2552:53:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2540:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2540:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2540:66:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2518:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2525:3:5",
														"type": ""
													}
												],
												"src": "2449:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2764:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2774:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2840:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2845:2:5",
																		"type": "",
																		"value": "10"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2781:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2781:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2774:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2946:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b",
																	"nodeType": "YulIdentifier",
																	"src": "2857:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2857:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2857:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2959:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2970:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2975:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2966:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2966:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2959:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2752:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2760:3:5",
														"type": ""
													}
												],
												"src": "2618:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3136:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3146:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3212:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3217:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3153:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3153:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3146:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3318:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
																	"nodeType": "YulIdentifier",
																	"src": "3229:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3229:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3229:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3331:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3342:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3347:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3338:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3338:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3331:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3124:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3132:3:5",
														"type": ""
													}
												],
												"src": "2990:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3508:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3518:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3584:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3589:2:5",
																		"type": "",
																		"value": "13"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3525:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3525:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3518:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3690:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24",
																	"nodeType": "YulIdentifier",
																	"src": "3601:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3601:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3601:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3703:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3714:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3719:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3710:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3710:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3703:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3496:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3504:3:5",
														"type": ""
													}
												],
												"src": "3362:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3880:219:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3890:73:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3956:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3961:1:5",
																		"type": "",
																		"value": "9"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3897:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3897:66:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3890:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4061:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																	"nodeType": "YulIdentifier",
																	"src": "3972:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3972:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3972:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4074:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4085:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4090:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4081:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4081:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4074:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3868:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3876:3:5",
														"type": ""
													}
												],
												"src": "3734:365:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4251:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4261:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4327:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4332:2:5",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4268:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4268:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "4261:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4433:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																	"nodeType": "YulIdentifier",
																	"src": "4344:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4344:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4344:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4446:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4457:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4462:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4453:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4453:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4446:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4239:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "4247:3:5",
														"type": ""
													}
												],
												"src": "4105:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4542:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4559:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "4582:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "4564:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4564:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4552:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4552:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "4530:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "4537:3:5",
														"type": ""
													}
												],
												"src": "4477:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4699:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4709:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4721:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4732:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4717:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4717:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4709:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4789:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4802:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4813:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4798:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4798:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4745:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4745:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4745:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4671:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4683:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4694:4:5",
														"type": ""
													}
												],
												"src": "4601:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4983:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4993:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5005:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5016:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5001:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5001:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4993:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5073:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5086:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5097:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5082:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5082:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5029:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5029:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5029:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5154:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5167:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5178:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5163:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5163:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5110:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5110:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5110:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5236:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5249:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5260:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5245:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5245:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5192:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5192:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5192:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4939:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "4951:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "4959:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4967:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4978:4:5",
														"type": ""
													}
												],
												"src": "4829:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5403:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5413:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5425:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5436:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5421:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5421:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5413:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5493:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5506:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5517:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5502:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5502:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5449:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5449:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5449:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5574:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5587:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5598:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5583:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5583:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5530:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5530:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5530:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5367:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5379:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5387:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5398:4:5",
														"type": ""
													}
												],
												"src": "5277:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5727:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5737:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5749:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5760:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5745:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5745:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5737:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5831:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5844:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5855:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5840:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5840:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5773:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5773:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5773:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5699:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5711:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5722:4:5",
														"type": ""
													}
												],
												"src": "5615:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5984:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5994:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6006:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6017:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6002:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6002:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5994:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6089:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6102:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6113:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6098:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6098:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6030:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6030:86:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6030:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5956:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5968:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5979:4:5",
														"type": ""
													}
												],
												"src": "5871:252:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6243:140:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6253:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6265:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6276:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6261:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6261:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6253:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "6349:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6362:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6373:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6358:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6358:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6289:59:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6289:87:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6289:87:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6215:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "6227:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6238:4:5",
														"type": ""
													}
												],
												"src": "6129:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6560:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6570:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6582:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6593:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6578:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6578:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6570:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6617:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6628:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6613:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6613:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6636:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6642:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6632:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6632:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6606:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6606:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6606:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6662:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6796:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6670:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6670:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6662:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6540:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6555:4:5",
														"type": ""
													}
												],
												"src": "6389:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6985:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6995:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7007:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7018:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7003:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7003:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6995:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7042:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7053:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7038:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7038:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7061:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7067:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7057:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7057:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7031:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7031:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7031:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7087:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7221:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7095:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7095:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7087:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6965:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6980:4:5",
														"type": ""
													}
												],
												"src": "6814:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7410:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7420:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7432:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7443:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7428:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7428:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7420:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7467:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7478:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7463:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7463:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7486:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7492:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7482:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7482:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7456:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7456:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7456:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7512:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7646:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7520:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7520:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7512:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7390:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7405:4:5",
														"type": ""
													}
												],
												"src": "7239:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7835:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7845:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "7857:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7868:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7853:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7853:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7845:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7892:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7903:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7888:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7888:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7911:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7917:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7907:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7907:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7881:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7881:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7881:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7937:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8071:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7945:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7945:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7937:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "7815:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "7830:4:5",
														"type": ""
													}
												],
												"src": "7664:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8260:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8270:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8282:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8293:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8278:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8278:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8270:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8317:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8328:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8313:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8313:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "8336:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8342:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "8332:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8332:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8306:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8306:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8306:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8362:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "8496:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8370:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8370:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8362:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8240:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8255:4:5",
														"type": ""
													}
												],
												"src": "8089:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8612:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8622:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "8634:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8645:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8630:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8630:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "8622:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "8702:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "8715:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8726:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8711:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8711:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "8658:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8658:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8658:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "8584:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "8596:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "8607:4:5",
														"type": ""
													}
												],
												"src": "8514:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8782:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8792:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8808:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "8802:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8802:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8775:6:5",
														"type": ""
													}
												],
												"src": "8742:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8919:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8936:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8941:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8929:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8929:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8929:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "8957:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "8976:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8981:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8972:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8972:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "8957:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "8891:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8896:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "8907:11:5",
														"type": ""
													}
												],
												"src": "8823:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9042:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9052:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9075:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9057:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9057:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9052:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9086:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9109:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9091:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9091:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9086:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9249:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9251:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9251:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9251:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9170:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9177:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "9245:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "9173:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9173:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "9167:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9167:81:5"
															},
															"nodeType": "YulIf",
															"src": "9164:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9281:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9292:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9295:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "9288:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9288:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "9281:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9029:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9032:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "9038:3:5",
														"type": ""
													}
												],
												"src": "8998:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9354:146:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9364:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9387:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9369:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9369:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "9364:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "9398:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9421:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "9403:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9403:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "9398:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9445:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "9447:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9447:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9447:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9439:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9442:1:5"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "9436:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9436:8:5"
															},
															"nodeType": "YulIf",
															"src": "9433:34:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "9477:17:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9489:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "9492:1:5"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "9485:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9485:9:5"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "9477:4:5"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "9340:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "9343:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "9349:4:5",
														"type": ""
													}
												],
												"src": "9309:191:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9551:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9561:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9590:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "9572:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9572:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9561:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9533:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9543:7:5",
														"type": ""
													}
												],
												"src": "9506:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9650:48:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9660:32:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9685:5:5"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "9678:6:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9678:13:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9671:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9671:21:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9660:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9632:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9642:7:5",
														"type": ""
													}
												],
												"src": "9608:90:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9749:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9759:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "9774:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9781:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9770:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9770:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9759:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9731:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9741:7:5",
														"type": ""
													}
												],
												"src": "9704:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9881:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9891:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "9902:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "9891:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9863:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "9873:7:5",
														"type": ""
													}
												],
												"src": "9836:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9993:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10003:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10047:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10016:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10016:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10003:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9973:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "9983:9:5",
														"type": ""
													}
												],
												"src": "9919:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10140:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10150:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10194:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10163:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10163:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10150:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$233_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10120:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10130:9:5",
														"type": ""
													}
												],
												"src": "10065:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10288:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10298:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10342:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "10311:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10311:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10298:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTGame_$258_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10268:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10278:9:5",
														"type": ""
													}
												],
												"src": "10212:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10420:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10430:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10474:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10443:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10443:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10430:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10400:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10410:9:5",
														"type": ""
													}
												],
												"src": "10360:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10552:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "10562:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "10593:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "10575:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10575:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "10562:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "10532:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "10542:9:5",
														"type": ""
													}
												],
												"src": "10492:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10639:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10656:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10659:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10649:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10649:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10649:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10753:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10756:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "10746:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10746:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10746:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10777:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10780:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10770:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10770:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10770:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "10611:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "10886:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10903:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "10906:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "10896:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10896:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "10896:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "10797:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11009:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11026:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "11029:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "11019:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11019:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11019:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "10920:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11149:54:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11171:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11179:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11167:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11167:14:5"
																	},
																	{
																		"hexValue": "4e6f74207374616b6564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11183:12:5",
																		"type": "",
																		"value": "Not staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11160:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11160:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11160:36:5"
														}
													]
												},
												"name": "store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11141:6:5",
														"type": ""
													}
												],
												"src": "11043:160:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11315:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11337:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11345:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11333:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11333:14:5"
																	},
																	{
																		"hexValue": "5472616e73666572206661696c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11349:15:5",
																		"type": "",
																		"value": "Transfer fail"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11326:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11326:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11326:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11307:6:5",
														"type": ""
													}
												],
												"src": "11209:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11484:57:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11506:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11514:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11502:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11502:14:5"
																	},
																	{
																		"hexValue": "4e6f74207265616c4f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11518:15:5",
																		"type": "",
																		"value": "Not realOwner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11495:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11495:39:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11495:39:5"
														}
													]
												},
												"name": "store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11476:6:5",
														"type": ""
													}
												],
												"src": "11378:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11653:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11675:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11683:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11671:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11671:14:5"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11687:11:5",
																		"type": "",
																		"value": "Not owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11664:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11664:35:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11664:35:5"
														}
													]
												},
												"name": "store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11645:6:5",
														"type": ""
													}
												],
												"src": "11547:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11818:75:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "11840:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "11848:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "11836:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11836:14:5"
																	},
																	{
																		"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "11852:33:5",
																		"type": "",
																		"value": "ReentrancyGuard: reentrant call"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "11829:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11829:57:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "11829:57:5"
														}
													]
												},
												"name": "store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "11810:6:5",
														"type": ""
													}
												],
												"src": "11712:181:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "11942:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "11999:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12008:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12011:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12001:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12001:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12001:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "11965:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "11990:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "11972:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "11972:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "11962:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "11962:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "11955:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "11955:43:5"
															},
															"nodeType": "YulIf",
															"src": "11952:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "11935:5:5",
														"type": ""
													}
												],
												"src": "11899:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12067:76:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12121:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12130:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12133:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12123:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12123:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12123:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12090:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12112:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nodeType": "YulIdentifier",
																					"src": "12097:14:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12097:21:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12087:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12087:32:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12080:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12080:40:5"
															},
															"nodeType": "YulIf",
															"src": "12077:60:5"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12060:5:5",
														"type": ""
													}
												],
												"src": "12027:116:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "12192:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "12249:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12258:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "12261:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "12251:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "12251:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "12251:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "12215:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "12240:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "12222:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "12222:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "12212:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "12212:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "12205:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "12205:43:5"
															},
															"nodeType": "YulIf",
															"src": "12202:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "12185:5:5",
														"type": ""
													}
												],
												"src": "12149:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$233_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTGame_$258_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 10)\n        store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 9)\n        store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 31)\n        store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$233_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_INFTGame_$258_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not staked\")\n\n    }\n\n    function store_literal_in_memory_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Transfer fail\")\n\n    }\n\n    function store_literal_in_memory_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not realOwner\")\n\n    }\n\n    function store_literal_in_memory_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not owner\")\n\n    }\n\n    function store_literal_in_memory_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619(memPtr) {\n\n        mstore(add(memPtr, 0), \"ReentrancyGuard: reentrant call\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100935760003560e01c806366bb863b1161006657806366bb863b1461011c57806380a540011461013a578063a694fc3a14610158578063b8e33fb214610174578063fead3d6e1461019257610093565b80630eeadd30146100985780632e17de78146100b4578063379607f5146100d057806353eebc6d146100ec575b600080fd5b6100b260048036038101906100ad9190610fda565b6101b0565b005b6100ce60048036038101906100c99190610fda565b61027a565b005b6100ea60048036038101906100e59190610fda565b6107ef565b005b61010660048036038101906101019190610fda565b610c02565b604051610113919061129a565b60405180910390f35b610124610c22565b604051610131919061112e565b60405180910390f35b610142610c48565b60405161014f91906111a9565b60405180910390f35b610172600480360381019061016d9190610fda565b610c6e565b005b61017c610ee0565b60405161018991906111c4565b60405180910390f35b61019a610f06565b6040516101a791906111df565b60405180910390f35b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d826040518263ffffffff1660e01b815260040161020b919061129a565b602060405180830381600087803b15801561022557600080fd5b505af1158015610239573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061025d9190611007565b600560008381526020019081526020016000206001018190555050565b3073ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b81526004016102ec919061129a565b60206040518083038186803b15801561030457600080fd5b505afa158015610318573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033c9190610f80565b73ffffffffffffffffffffffffffffffffffffffff1614610392576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610389906111fa565b60405180910390fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610436576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161042d9061123a565b60405180910390fd5b60006005600083815260200190815260200160002060010154600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d846040518263ffffffff1660e01b81526004016104aa919061129a565b602060405180830381600087803b1580156104c457600080fd5b505af11580156104d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104fc9190611007565b610506919061131c565b600560008481526020019081526020016000206002015442610528919061131c565b61053291906112c6565b90506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d846040518263ffffffff1660e01b8152600401610591919061129a565b602060405180830381600087803b1580156105ab57600080fd5b505af11580156105bf573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105e39190611007565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33846040518363ffffffff1660e01b8152600401610642929190611180565b602060405180830381600087803b15801561065c57600080fd5b505af1158015610670573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106949190610fad565b15610703574260056000858152602001908152602001600020600201819055506005600084815260200190815260200160002060010154816106d6919061131c565b6005600085815260200190815260200160002060010160008282546106fb91906112c6565b925050819055505b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3033866040518463ffffffff1660e01b815260040161076293929190611149565b600060405180830381600087803b15801561077c57600080fd5b505af1158015610790573d6000803e3d6000fd5b5050505060006005600085815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60026000541415610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161082c9061127a565b60405180910390fd5b6002600081905550600060056000838152602001908152602001600020600201541161086057600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166005600083815260200190815260200160002060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146108ce57600080fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d826040518263ffffffff1660e01b8152600401610929919061129a565b602060405180830381600087803b15801561094357600080fd5b505af1158015610957573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061097b9190611007565b60056000838152602001908152602001600020600101819055506000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a0c4442d836040518263ffffffff1660e01b81526004016109f2919061129a565b602060405180830381600087803b158015610a0c57600080fd5b505af1158015610a20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a449190611007565b90506000600560008481526020019081526020016000206001015482610a6a919061131c565b600560008581526020019081526020016000206002015442610a8c919061131c565b610a9691906112c6565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610af5929190611180565b602060405180830381600087803b158015610b0f57600080fd5b505af1158015610b23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b479190610fad565b15610bba57426005600085815260200190815260200160002060020181905550600560008481526020019081526020016000206001015482610b89919061131c565b600560008581526020019081526020016000206001016000828254610bae91906112c6565b92505081905550610bf5565b6040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec9061121a565b60405180910390fd5b5050600160008190555050565b600060056000838152602001908152602001600020600101549050919050565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60026000541415610cb4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cab9061127a565b60405180910390fd5b60026000819055503373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16636352211e836040518263ffffffff1660e01b8152600401610d2e919061129a565b60206040518083038186803b158015610d4657600080fd5b505afa158015610d5a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d7e9190610f80565b73ffffffffffffffffffffffffffffffffffffffff1614610dd4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dcb9061125a565b60405180910390fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401610e3393929190611149565b600060405180830381600087803b158015610e4d57600080fd5b505af1158015610e61573d6000803e3d6000fd5b50505050336005600083815260200190815260200160002060000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426005600083815260200190815260200160002060020181905550600160008190555050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600081519050610f3b816114f3565b92915050565b600081519050610f508161150a565b92915050565b600081359050610f6581611521565b92915050565b600081519050610f7a81611521565b92915050565b600060208284031215610f9657610f95611421565b5b6000610fa484828501610f2c565b91505092915050565b600060208284031215610fc357610fc2611421565b5b6000610fd184828501610f41565b91505092915050565b600060208284031215610ff057610fef611421565b5b6000610ffe84828501610f56565b91505092915050565b60006020828403121561101d5761101c611421565b5b600061102b84828501610f6b565b91505092915050565b61103d81611350565b82525050565b61104c81611398565b82525050565b61105b816113aa565b82525050565b61106a816113bc565b82525050565b600061107d600a836112b5565b915061108882611426565b602082019050919050565b60006110a0600d836112b5565b91506110ab8261144f565b602082019050919050565b60006110c3600d836112b5565b91506110ce82611478565b602082019050919050565b60006110e66009836112b5565b91506110f1826114a1565b602082019050919050565b6000611109601f836112b5565b9150611114826114ca565b602082019050919050565b6111288161138e565b82525050565b60006020820190506111436000830184611034565b92915050565b600060608201905061115e6000830186611034565b61116b6020830185611034565b611178604083018461111f565b949350505050565b60006040820190506111956000830185611034565b6111a2602083018461111f565b9392505050565b60006020820190506111be6000830184611043565b92915050565b60006020820190506111d96000830184611052565b92915050565b60006020820190506111f46000830184611061565b92915050565b6000602082019050818103600083015261121381611070565b9050919050565b6000602082019050818103600083015261123381611093565b9050919050565b60006020820190508181036000830152611253816110b6565b9050919050565b60006020820190508181036000830152611273816110d9565b9050919050565b60006020820190508181036000830152611293816110fc565b9050919050565b60006020820190506112af600083018461111f565b92915050565b600082825260208201905092915050565b60006112d18261138e565b91506112dc8361138e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115611311576113106113f2565b5b828201905092915050565b60006113278261138e565b91506113328361138e565b925082821015611345576113446113f2565b5b828203905092915050565b600061135b8261136e565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006113a3826113ce565b9050919050565b60006113b5826113ce565b9050919050565b60006113c7826113ce565b9050919050565b60006113d9826113e0565b9050919050565b60006113eb8261136e565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600080fd5b7f4e6f74207374616b656400000000000000000000000000000000000000000000600082015250565b7f5472616e73666572206661696c00000000000000000000000000000000000000600082015250565b7f4e6f74207265616c4f776e657200000000000000000000000000000000000000600082015250565b7f4e6f74206f776e65720000000000000000000000000000000000000000000000600082015250565b7f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00600082015250565b6114fc81611350565b811461150757600080fd5b50565b61151381611362565b811461151e57600080fd5b50565b61152a8161138e565b811461153557600080fd5b5056fea26469706673582212204b47107a69dfcb0b92bb6c189783a86e2af9f8deb9fdad3f63ef5dc33324e22c64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x93 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66BB863B GT PUSH2 0x66 JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x11C JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x13A JUMPI DUP1 PUSH4 0xA694FC3A EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x174 JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x192 JUMPI PUSH2 0x93 JUMP JUMPDEST DUP1 PUSH4 0xEEADD30 EQ PUSH2 0x98 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xB4 JUMPI DUP1 PUSH4 0x379607F5 EQ PUSH2 0xD0 JUMPI DUP1 PUSH4 0x53EEBC6D EQ PUSH2 0xEC JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB2 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAD SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x1B0 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xCE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC9 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST PUSH2 0xEA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xE5 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0x7EF JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x101 SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0xC02 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x124 PUSH2 0xC22 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x112E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x142 PUSH2 0xC48 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x11A9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x172 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16D SWAP2 SWAP1 PUSH2 0xFDA JUMP JUMPDEST PUSH2 0xC6E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17C PUSH2 0xEE0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x11C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x19A PUSH2 0xF06 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1A7 SWAP2 SWAP1 PUSH2 0x11DF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x20B SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x225 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x239 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x25D SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EC SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x304 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x318 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x33C SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x392 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x389 SWAP1 PUSH2 0x11FA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x436 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x42D SWAP1 PUSH2 0x123A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4AA SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x4C4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x4D8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x4FC SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH2 0x506 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0x528 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH2 0x532 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP5 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x591 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x5AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5BF JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x5E3 SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x642 SWAP3 SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x65C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x670 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x694 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST ISZERO PUSH2 0x703 JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 PUSH2 0x6D6 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x6FB SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD ADDRESS CALLER DUP7 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x762 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x77C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0x835 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x82C SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD GT PUSH2 0x860 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x8CE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x929 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x943 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x957 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x97B SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA0C4442D DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9F2 SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xA0C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xA20 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xA44 SWAP2 SWAP1 PUSH2 0x1007 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0xA6A SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD SLOAD TIMESTAMP PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH2 0xA96 SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB CALLER DUP4 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xAF5 SWAP3 SWAP2 SWAP1 PUSH2 0x1180 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xB23 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB47 SWAP2 SWAP1 PUSH2 0xFAD JUMP JUMPDEST ISZERO PUSH2 0xBBA JUMPI TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD DUP3 PUSH2 0xB89 SWAP2 SWAP1 PUSH2 0x131C JUMP JUMPDEST PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xBAE SWAP2 SWAP1 PUSH2 0x12C6 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP PUSH2 0xBF5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBEC SWAP1 PUSH2 0x121A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SLOAD EQ ISZERO PUSH2 0xCB4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCAB SWAP1 PUSH2 0x127A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 SWAP1 SSTORE POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x6352211E DUP4 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xD2E SWAP2 SWAP1 PUSH2 0x129A JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xD46 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0xD5A JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0xF80 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDD4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xDCB SWAP1 PUSH2 0x125A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD CALLER ADDRESS DUP5 PUSH1 0x40 MLOAD DUP5 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xE33 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1149 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0xE4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0xE61 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP CALLER PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP TIMESTAMP PUSH1 0x5 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x2 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF3B DUP2 PUSH2 0x14F3 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF50 DUP2 PUSH2 0x150A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xF65 DUP2 PUSH2 0x1521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0xF7A DUP2 PUSH2 0x1521 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF96 JUMPI PUSH2 0xF95 PUSH2 0x1421 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFA4 DUP5 DUP3 DUP6 ADD PUSH2 0xF2C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFC3 JUMPI PUSH2 0xFC2 PUSH2 0x1421 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFD1 DUP5 DUP3 DUP6 ADD PUSH2 0xF41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xFF0 JUMPI PUSH2 0xFEF PUSH2 0x1421 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xFFE DUP5 DUP3 DUP6 ADD PUSH2 0xF56 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x101D JUMPI PUSH2 0x101C PUSH2 0x1421 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x102B DUP5 DUP3 DUP6 ADD PUSH2 0xF6B JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x103D DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x104C DUP2 PUSH2 0x1398 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x105B DUP2 PUSH2 0x13AA JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x106A DUP2 PUSH2 0x13BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x107D PUSH1 0xA DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1088 DUP3 PUSH2 0x1426 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10A0 PUSH1 0xD DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x10AB DUP3 PUSH2 0x144F JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10C3 PUSH1 0xD DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x10CE DUP3 PUSH2 0x1478 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x10E6 PUSH1 0x9 DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x10F1 DUP3 PUSH2 0x14A1 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1109 PUSH1 0x1F DUP4 PUSH2 0x12B5 JUMP JUMPDEST SWAP2 POP PUSH2 0x1114 DUP3 PUSH2 0x14CA JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1128 DUP2 PUSH2 0x138E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1143 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1034 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x115E PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x116B PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x1178 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x1195 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x1034 JUMP JUMPDEST PUSH2 0x11A2 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11BE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1043 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11D9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1052 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x11F4 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x1061 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1213 DUP2 PUSH2 0x1070 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1233 DUP2 PUSH2 0x1093 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1253 DUP2 PUSH2 0x10B6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1273 DUP2 PUSH2 0x10D9 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x1293 DUP2 PUSH2 0x10FC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x12AF PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x111F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x12D1 DUP3 PUSH2 0x138E JUMP JUMPDEST SWAP2 POP PUSH2 0x12DC DUP4 PUSH2 0x138E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x1311 JUMPI PUSH2 0x1310 PUSH2 0x13F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1327 DUP3 PUSH2 0x138E JUMP JUMPDEST SWAP2 POP PUSH2 0x1332 DUP4 PUSH2 0x138E JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x1345 JUMPI PUSH2 0x1344 PUSH2 0x13F2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x135B DUP3 PUSH2 0x136E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13A3 DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13B5 DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13C7 DUP3 PUSH2 0x13CE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13D9 DUP3 PUSH2 0x13E0 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x13EB DUP3 PUSH2 0x136E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E6F74207374616B656400000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5472616E73666572206661696C00000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74207265616C4F776E657200000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4E6F74206F776E65720000000000000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5265656E7472616E637947756172643A207265656E7472616E742063616C6C00 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x14FC DUP2 PUSH2 0x1350 JUMP JUMPDEST DUP2 EQ PUSH2 0x1507 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1513 DUP2 PUSH2 0x1362 JUMP JUMPDEST DUP2 EQ PUSH2 0x151E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x152A DUP2 PUSH2 0x138E JUMP JUMPDEST DUP2 EQ PUSH2 0x1535 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x4B SELFBALANCE LT PUSH27 0x69DFCB0B92BB6C189783A86E2AF9F8DEB9FDAD3F63EF5DC33324E2 0x2C PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:3103:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1086:159;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2548:847;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1746:796;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1251:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;488:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1394:340;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;416:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1086:159;1188:18;;;;;;;;;;;:30;;;1219:8;1188:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1146:13;:23;1160:8;1146:23;;;;;;;;;;;:39;;:82;;;;1086:159;:::o;2548:847::-;2648:4;2609:44;;:9;;;;;;;;;;;:17;;;2627:8;2609:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:44;;;2601:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;2724:10;2687:47;;:13;:23;2701:8;2687:23;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;2679:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2763:14;2885:13;:23;2899:8;2885:23;;;;;;;;;;;:39;;;2842:18;;;;;;;;;;;:30;;;2873:8;2842:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:82;;;;:::i;:::-;2800:13;:23;2814:8;2800:23;;;;;;;;;;;:37;;;2782:15;:55;;;;:::i;:::-;2781:144;;;;:::i;:::-;2763:164;;2939:23;2965:18;;;;;;;;;;;:30;;;2996:8;2965:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2939:66;;3020:11;;;;;;;;;;;:20;;;3041:10;3053:6;3020:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3016:245;;;3116:15;3076:13;:23;3090:8;3076:23;;;;;;;;;;;:37;;:55;;;;3209:13;:23;3223:8;3209:23;;;;;;;;;;;:39;;;3191:15;:57;;;;:::i;:::-;3147:13;:23;3161:8;3147:23;;;;;;;;;;;:39;;;:102;;;;;;;:::i;:::-;;;;;;;;3016:245;3271:9;;;;;;;;;;;:22;;;3302:4;3309:10;3321:8;3271:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3385:1;3341:13;:23;3355:8;3341:23;;;;;;;;;;;:33;;;:46;;;;;;;;;;;;;;;;;;2590:805;;2548:847;:::o;1746:796::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1858:1:4::1;1818:13;:23;1832:8;1818:23;;;;;;;;;;;:37;;;:41;1810:51;;;::::0;::::1;;1917:10;1880:47;;:13;:23;1894:8;1880:23;;;;;;;;;;;:33;;;;;;;;;;;;:47;;;1872:56;;;::::0;::::1;;1983:18;;;;;;;;;;;:30;;;2014:8;1983:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1941:13;:23;1955:8;1941:23;;;;;;;;;;;:39;;:82;;;;2034:23;2060:18;;;;;;;;;;;:30;;;2091:8;2060:40;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2034:66;;2111:14;2208:13;:23;2222:8;2208:23;;;;;;;;;;;:39;;;2190:15;:57;;;;:::i;:::-;2148:13;:23;2162:8;2148:23;;;;;;;;;;;:37;;;2130:15;:55;;;;:::i;:::-;2129:119;;;;:::i;:::-;2111:139;;2265:11;;;;;;;;;;;:20;;;2286:10;2298:6;2265:40;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2261:273;;;2361:15;2321:13;:23;2335:8;2321:23;;;;;;;;;;;:37;;:55;;;;2453:13;:23;2467:8;2453:23;;;;;;;;;;;:39;;;2435:15;:57;;;;:::i;:::-;2391:13;:23;2405:8;2391:23;;;;;;;;;;;:39;;;:102;;;;;;;:::i;:::-;;;;;;;;2261:273;;;2511:23;;;;;;;;;;:::i;:::-;;;;;;;;2261:273;1799:743;;1701:1:0::0;2628:7;:22;;;;1746:796:4;:::o;1251:137::-;1315:7;1341:13;:23;1355:8;1341:23;;;;;;;;;;;:39;;;1334:46;;1251:137;;;:::o;488:31::-;;;;;;;;;;;;;:::o;384:25::-;;;;;;;;;;;;;:::o;1394:340::-;1744:1:0;2325:7;;:19;;2317:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1744:1;2455:7;:18;;;;1499:10:4::1;1468:41;;:9;;;;;;;;;;;:17;;;1486:8;1468:27;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:41;;;1460:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;1544:9;;;;;;;;;;;:22;;;1567:10;1587:4;1594:8;1544:59;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;1650:10;1614:13;:23;1628:8;1614:23;;;;;;;;;;;:33;;;:46;;;;;;;;;;;;;;;;;;1711:15;1671:13;:23;1685:8;1671:23;;;;;;;;;;;:37;;:55;;;;1701:1:0::0;2628:7;:22;;;;1394:340:4;:::o;416:24::-;;;;;;;;;;;;;:::o;447:34::-;;;;;;;;;;;;;:::o;7:143:5:-;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:137::-;210:5;241:6;235:13;226:22;;257:30;281:5;257:30;:::i;:::-;156:137;;;;:::o;299:139::-;345:5;383:6;370:20;361:29;;399:33;426:5;399:33;:::i;:::-;299:139;;;;:::o;444:143::-;501:5;532:6;526:13;517:22;;548:33;575:5;548:33;:::i;:::-;444:143;;;;:::o;593:351::-;663:6;712:2;700:9;691:7;687:23;683:32;680:119;;;718:79;;:::i;:::-;680:119;838:1;863:64;919:7;910:6;899:9;895:22;863:64;:::i;:::-;853:74;;809:128;593:351;;;;:::o;950:345::-;1017:6;1066:2;1054:9;1045:7;1041:23;1037:32;1034:119;;;1072:79;;:::i;:::-;1034:119;1192:1;1217:61;1270:7;1261:6;1250:9;1246:22;1217:61;:::i;:::-;1207:71;;1163:125;950:345;;;;:::o;1301:329::-;1360:6;1409:2;1397:9;1388:7;1384:23;1380:32;1377:119;;;1415:79;;:::i;:::-;1377:119;1535:1;1560:53;1605:7;1596:6;1585:9;1581:22;1560:53;:::i;:::-;1550:63;;1506:117;1301:329;;;;:::o;1636:351::-;1706:6;1755:2;1743:9;1734:7;1730:23;1726:32;1723:119;;;1761:79;;:::i;:::-;1723:119;1881:1;1906:64;1962:7;1953:6;1942:9;1938:22;1906:64;:::i;:::-;1896:74;;1852:128;1636:351;;;;:::o;1993:118::-;2080:24;2098:5;2080:24;:::i;:::-;2075:3;2068:37;1993:118;;:::o;2117:159::-;2218:51;2263:5;2218:51;:::i;:::-;2213:3;2206:64;2117:159;;:::o;2282:161::-;2384:52;2430:5;2384:52;:::i;:::-;2379:3;2372:65;2282:161;;:::o;2449:163::-;2552:53;2599:5;2552:53;:::i;:::-;2547:3;2540:66;2449:163;;:::o;2618:366::-;2760:3;2781:67;2845:2;2840:3;2781:67;:::i;:::-;2774:74;;2857:93;2946:3;2857:93;:::i;:::-;2975:2;2970:3;2966:12;2959:19;;2618:366;;;:::o;2990:::-;3132:3;3153:67;3217:2;3212:3;3153:67;:::i;:::-;3146:74;;3229:93;3318:3;3229:93;:::i;:::-;3347:2;3342:3;3338:12;3331:19;;2990:366;;;:::o;3362:::-;3504:3;3525:67;3589:2;3584:3;3525:67;:::i;:::-;3518:74;;3601:93;3690:3;3601:93;:::i;:::-;3719:2;3714:3;3710:12;3703:19;;3362:366;;;:::o;3734:365::-;3876:3;3897:66;3961:1;3956:3;3897:66;:::i;:::-;3890:73;;3972:93;4061:3;3972:93;:::i;:::-;4090:2;4085:3;4081:12;4074:19;;3734:365;;;:::o;4105:366::-;4247:3;4268:67;4332:2;4327:3;4268:67;:::i;:::-;4261:74;;4344:93;4433:3;4344:93;:::i;:::-;4462:2;4457:3;4453:12;4446:19;;4105:366;;;:::o;4477:118::-;4564:24;4582:5;4564:24;:::i;:::-;4559:3;4552:37;4477:118;;:::o;4601:222::-;4694:4;4732:2;4721:9;4717:18;4709:26;;4745:71;4813:1;4802:9;4798:17;4789:6;4745:71;:::i;:::-;4601:222;;;;:::o;4829:442::-;4978:4;5016:2;5005:9;5001:18;4993:26;;5029:71;5097:1;5086:9;5082:17;5073:6;5029:71;:::i;:::-;5110:72;5178:2;5167:9;5163:18;5154:6;5110:72;:::i;:::-;5192;5260:2;5249:9;5245:18;5236:6;5192:72;:::i;:::-;4829:442;;;;;;:::o;5277:332::-;5398:4;5436:2;5425:9;5421:18;5413:26;;5449:71;5517:1;5506:9;5502:17;5493:6;5449:71;:::i;:::-;5530:72;5598:2;5587:9;5583:18;5574:6;5530:72;:::i;:::-;5277:332;;;;;:::o;5615:250::-;5722:4;5760:2;5749:9;5745:18;5737:26;;5773:85;5855:1;5844:9;5840:17;5831:6;5773:85;:::i;:::-;5615:250;;;;:::o;5871:252::-;5979:4;6017:2;6006:9;6002:18;5994:26;;6030:86;6113:1;6102:9;6098:17;6089:6;6030:86;:::i;:::-;5871:252;;;;:::o;6129:254::-;6238:4;6276:2;6265:9;6261:18;6253:26;;6289:87;6373:1;6362:9;6358:17;6349:6;6289:87;:::i;:::-;6129:254;;;;:::o;6389:419::-;6555:4;6593:2;6582:9;6578:18;6570:26;;6642:9;6636:4;6632:20;6628:1;6617:9;6613:17;6606:47;6670:131;6796:4;6670:131;:::i;:::-;6662:139;;6389:419;;;:::o;6814:::-;6980:4;7018:2;7007:9;7003:18;6995:26;;7067:9;7061:4;7057:20;7053:1;7042:9;7038:17;7031:47;7095:131;7221:4;7095:131;:::i;:::-;7087:139;;6814:419;;;:::o;7239:::-;7405:4;7443:2;7432:9;7428:18;7420:26;;7492:9;7486:4;7482:20;7478:1;7467:9;7463:17;7456:47;7520:131;7646:4;7520:131;:::i;:::-;7512:139;;7239:419;;;:::o;7664:::-;7830:4;7868:2;7857:9;7853:18;7845:26;;7917:9;7911:4;7907:20;7903:1;7892:9;7888:17;7881:47;7945:131;8071:4;7945:131;:::i;:::-;7937:139;;7664:419;;;:::o;8089:::-;8255:4;8293:2;8282:9;8278:18;8270:26;;8342:9;8336:4;8332:20;8328:1;8317:9;8313:17;8306:47;8370:131;8496:4;8370:131;:::i;:::-;8362:139;;8089:419;;;:::o;8514:222::-;8607:4;8645:2;8634:9;8630:18;8622:26;;8658:71;8726:1;8715:9;8711:17;8702:6;8658:71;:::i;:::-;8514:222;;;;:::o;8823:169::-;8907:11;8941:6;8936:3;8929:19;8981:4;8976:3;8972:14;8957:29;;8823:169;;;;:::o;8998:305::-;9038:3;9057:20;9075:1;9057:20;:::i;:::-;9052:25;;9091:20;9109:1;9091:20;:::i;:::-;9086:25;;9245:1;9177:66;9173:74;9170:1;9167:81;9164:107;;;9251:18;;:::i;:::-;9164:107;9295:1;9292;9288:9;9281:16;;8998:305;;;;:::o;9309:191::-;9349:4;9369:20;9387:1;9369:20;:::i;:::-;9364:25;;9403:20;9421:1;9403:20;:::i;:::-;9398:25;;9442:1;9439;9436:8;9433:34;;;9447:18;;:::i;:::-;9433:34;9492:1;9489;9485:9;9477:17;;9309:191;;;;:::o;9506:96::-;9543:7;9572:24;9590:5;9572:24;:::i;:::-;9561:35;;9506:96;;;:::o;9608:90::-;9642:7;9685:5;9678:13;9671:21;9660:32;;9608:90;;;:::o;9704:126::-;9741:7;9781:42;9774:5;9770:54;9759:65;;9704:126;;;:::o;9836:77::-;9873:7;9902:5;9891:16;;9836:77;;;:::o;9919:140::-;9983:9;10016:37;10047:5;10016:37;:::i;:::-;10003:50;;9919:140;;;:::o;10065:141::-;10130:9;10163:37;10194:5;10163:37;:::i;:::-;10150:50;;10065:141;;;:::o;10212:142::-;10278:9;10311:37;10342:5;10311:37;:::i;:::-;10298:50;;10212:142;;;:::o;10360:126::-;10410:9;10443:37;10474:5;10443:37;:::i;:::-;10430:50;;10360:126;;;:::o;10492:113::-;10542:9;10575:24;10593:5;10575:24;:::i;:::-;10562:37;;10492:113;;;:::o;10611:180::-;10659:77;10656:1;10649:88;10756:4;10753:1;10746:15;10780:4;10777:1;10770:15;10920:117;11029:1;11026;11019:12;11043:160;11183:12;11179:1;11171:6;11167:14;11160:36;11043:160;:::o;11209:163::-;11349:15;11345:1;11337:6;11333:14;11326:39;11209:163;:::o;11378:::-;11518:15;11514:1;11506:6;11502:14;11495:39;11378:163;:::o;11547:159::-;11687:11;11683:1;11675:6;11671:14;11664:35;11547:159;:::o;11712:181::-;11852:33;11848:1;11840:6;11836:14;11829:57;11712:181;:::o;11899:122::-;11972:24;11990:5;11972:24;:::i;:::-;11965:5;11962:35;11952:63;;12011:1;12008;12001:12;11952:63;11899:122;:::o;12027:116::-;12097:21;12112:5;12097:21;:::i;:::-;12090:5;12087:32;12077:60;;12133:1;12130;12123:12;12077:60;12027:116;:::o;12149:122::-;12222:24;12240:5;12222:24;:::i;:::-;12215:5;12212:35;12202:63;;12261:1;12258;12251:12;12202:63;12149:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1097200",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"claim(uint256)": "infinite",
								"claimedTrophies(uint256)": "infinite",
								"parentNFT()": "2666",
								"parentNFTAddress()": "2514",
								"parentNftFunctions()": "2688",
								"parentToken()": "2622",
								"refreshTrophies(uint256)": "infinite",
								"stake(uint256)": "infinite",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 3444,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 668,
									"end": 680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 713,
									"end": 727,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 758,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 3444,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212204b47107a69dfcb0b92bb6c189783a86e2af9f8deb9fdad3f63ef5dc33324e22c64736f6c63430008070033",
									".code": [
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "66BB863B"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "66BB863B"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "80A54001"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "A694FC3A"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "B8E33FB2"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "FEAD3D6E"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "EEADD30"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "2E17DE78"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "379607F5"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "53EEBC6D"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 3444,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "STOP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1206,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1218,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1218,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1218,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 1219,
											"end": 1227,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1188,
											"end": 1228,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1159,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1160,
											"end": 1168,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1146,
											"end": 1169,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1185,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1146,
											"end": 1185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1228,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1228,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1228,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1146,
											"end": 1228,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1086,
											"end": 1245,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2648,
											"end": 2652,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2653,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2618,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2626,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 2627,
											"end": 2635,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "tag",
											"source": 4,
											"value": "59"
										},
										{
											"begin": 2609,
											"end": 2636,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2653,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2609,
											"end": 2653,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2609,
											"end": 2653,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 2601,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2734,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2700,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2701,
											"end": 2709,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2710,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2720,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2734,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2687,
											"end": 2734,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2687,
											"end": 2734,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "66"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "tag",
											"source": 4,
											"value": "64"
										},
										{
											"begin": 2679,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2777,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2898,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2899,
											"end": 2907,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2908,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2924,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2885,
											"end": 2924,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2885,
											"end": 2924,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2860,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2872,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2872,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2872,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 2873,
											"end": 2881,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "68"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2842,
											"end": 2882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "tag",
											"source": 4,
											"value": "72"
										},
										{
											"begin": 2842,
											"end": 2924,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2813,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2814,
											"end": 2822,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2800,
											"end": 2823,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2800,
											"end": 2837,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2800,
											"end": 2837,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2797,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2782,
											"end": 2837,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2837,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2782,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2782,
											"end": 2837,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2782,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "74"
										},
										{
											"begin": 2782,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2781,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2781,
											"end": 2925,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2781,
											"end": 2925,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2781,
											"end": 2925,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2781,
											"end": 2925,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 2925,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2781,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2927,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2763,
											"end": 2927,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 2962,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 2983,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 2995,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 2995,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 2996,
											"end": 3004,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "tag",
											"source": 4,
											"value": "81"
										},
										{
											"begin": 2965,
											"end": 3005,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 3005,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2939,
											"end": 3005,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3031,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3040,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 3041,
											"end": 3051,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3053,
											"end": 3059,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "tag",
											"source": 4,
											"value": "82"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "tag",
											"source": 4,
											"value": "84"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "tag",
											"source": 4,
											"value": "86"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "tag",
											"source": 4,
											"value": "87"
										},
										{
											"begin": 3020,
											"end": 3060,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3261,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3016,
											"end": 3261,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3116,
											"end": 3131,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3089,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3090,
											"end": 3098,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3076,
											"end": 3099,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3113,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3076,
											"end": 3113,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3131,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3131,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3131,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3076,
											"end": 3131,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3222,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3223,
											"end": 3231,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3209,
											"end": 3232,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3248,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3209,
											"end": 3248,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3209,
											"end": 3248,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3206,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3191,
											"end": 3248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3191,
											"end": 3248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 3191,
											"end": 3248,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3191,
											"end": 3248,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 3191,
											"end": 3248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3160,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3161,
											"end": 3169,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3170,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3186,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3147,
											"end": 3186,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3186,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "tag",
											"source": 4,
											"value": "91"
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3147,
											"end": 3249,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3016,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "89"
										},
										{
											"begin": 3016,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3280,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3293,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 3302,
											"end": 3306,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 3309,
											"end": 3319,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 3321,
											"end": 3329,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "tag",
											"source": 4,
											"value": "92"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "tag",
											"source": 4,
											"value": "94"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "tag",
											"source": 4,
											"value": "96"
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3271,
											"end": 3330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3385,
											"end": 3386,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3354,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3363,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3364,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3374,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3374,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3374,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3341,
											"end": 3387,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 3395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2590,
											"end": 3395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2548,
											"end": 3395,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 1859,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1831,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1832,
											"end": 1840,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1818,
											"end": 1841,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1855,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1818,
											"end": 1855,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1855,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1818,
											"end": 1859,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1810,
											"end": 1861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1861,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1810,
											"end": 1861,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1861,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1810,
											"end": 1861,
											"name": "tag",
											"source": 4,
											"value": "102"
										},
										{
											"begin": 1810,
											"end": 1861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1917,
											"end": 1927,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1893,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1894,
											"end": 1902,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1903,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1913,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1927,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1880,
											"end": 1927,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1880,
											"end": 1927,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1928,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1872,
											"end": 1928,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1928,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1872,
											"end": 1928,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1928,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1872,
											"end": 1928,
											"name": "tag",
											"source": 4,
											"value": "103"
										},
										{
											"begin": 1872,
											"end": 1928,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1983,
											"end": 2001,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1983,
											"end": 2013,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2013,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 2014,
											"end": 2022,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "104"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 1983,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1954,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1955,
											"end": 1963,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1941,
											"end": 1964,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 1980,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1941,
											"end": 1980,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2023,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2023,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1941,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2057,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2078,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2090,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2090,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2090,
											"name": "PUSH",
											"source": 4,
											"value": "A0C4442D"
										},
										{
											"begin": 2091,
											"end": 2099,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "110"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "53"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "tag",
											"source": 4,
											"value": "113"
										},
										{
											"begin": 2060,
											"end": 2100,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2100,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2034,
											"end": 2100,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2125,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2221,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2222,
											"end": 2230,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2208,
											"end": 2231,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2247,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2208,
											"end": 2247,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2208,
											"end": 2247,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2205,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2190,
											"end": 2247,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2247,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2190,
											"end": 2247,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2190,
											"end": 2247,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2190,
											"end": 2247,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 2190,
											"end": 2247,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2161,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2162,
											"end": 2170,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2148,
											"end": 2171,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2185,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2148,
											"end": 2185,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2148,
											"end": 2185,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2145,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 2130,
											"end": 2185,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2129,
											"end": 2248,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2248,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2129,
											"end": 2248,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2129,
											"end": 2248,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2129,
											"end": 2248,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 2129,
											"end": 2248,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2111,
											"end": 2250,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2265,
											"end": 2276,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2285,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 2286,
											"end": 2296,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 2298,
											"end": 2304,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "83"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "tag",
											"source": 4,
											"value": "118"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "88"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 2265,
											"end": 2305,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2361,
											"end": 2376,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2334,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2335,
											"end": 2343,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2321,
											"end": 2344,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2358,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 2321,
											"end": 2358,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2376,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2376,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2376,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2321,
											"end": 2376,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2466,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2467,
											"end": 2475,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2453,
											"end": 2476,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2492,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2453,
											"end": 2492,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2453,
											"end": 2492,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2450,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2492,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2492,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2435,
											"end": 2492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2435,
											"end": 2492,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2435,
											"end": 2492,
											"name": "tag",
											"source": 4,
											"value": "123"
										},
										{
											"begin": 2435,
											"end": 2492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2404,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2405,
											"end": 2413,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2414,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2430,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 2391,
											"end": 2430,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2430,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 2391,
											"end": 2493,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "127"
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 2261,
											"end": 2534,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1799,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1746,
											"end": 2542,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1315,
											"end": 1322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1354,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1355,
											"end": 1363,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1341,
											"end": 1364,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1380,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1341,
											"end": 1380,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1341,
											"end": 1380,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1380,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1334,
											"end": 1380,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1251,
											"end": 1388,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2325,
											"end": 2332,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2325,
											"end": 2344,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 2317,
											"end": 2380,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 2455,
											"end": 2462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2455,
											"end": 2473,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1499,
											"end": 1509,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1509,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1477,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1485,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1485,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1485,
											"name": "PUSH",
											"source": 4,
											"value": "6352211E"
										},
										{
											"begin": 1486,
											"end": 1494,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "STATICCALL",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "1F"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1468,
											"end": 1495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1468,
											"end": 1509,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1468,
											"end": 1509,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "tag",
											"source": 4,
											"value": "139"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1460,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1553,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1566,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1567,
											"end": 1577,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1591,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 1594,
											"end": 1602,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "EXTCODESIZE",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "GAS",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "CALL",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "RETURNDATACOPY",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "RETURNDATASIZE",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1544,
											"end": 1603,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1650,
											"end": 1660,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1627,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1628,
											"end": 1636,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1637,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1647,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1614,
											"end": 1660,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1711,
											"end": 1726,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1684,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1685,
											"end": 1693,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1671,
											"end": 1694,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1708,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 1671,
											"end": 1708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1726,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1726,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1671,
											"end": 1726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1701,
											"end": 1702,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 2628,
											"end": 2635,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2628,
											"end": 2650,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1394,
											"end": 1734,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 150,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 7,
											"end": 150,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 64,
											"end": 69,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 95,
											"end": 101,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 89,
											"end": 102,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 80,
											"end": 102,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 80,
											"end": 102,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 111,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 138,
											"end": 143,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 111,
											"end": 144,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 111,
											"end": 144,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 111,
											"end": 144,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 111,
											"end": 144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7,
											"end": 150,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 150,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7,
											"end": 150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 150,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 150,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 156,
											"end": 293,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 156,
											"end": 293,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 210,
											"end": 215,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 241,
											"end": 247,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 235,
											"end": 248,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 226,
											"end": 248,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 226,
											"end": 248,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 257,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 281,
											"end": 286,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 257,
											"end": 287,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 257,
											"end": 287,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 257,
											"end": 287,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 257,
											"end": 287,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 156,
											"end": 293,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 156,
											"end": 293,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 156,
											"end": 293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 156,
											"end": 293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 156,
											"end": 293,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 299,
											"end": 438,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 299,
											"end": 438,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 345,
											"end": 350,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 383,
											"end": 389,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 370,
											"end": 390,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 361,
											"end": 390,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 361,
											"end": 390,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 426,
											"end": 431,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 399,
											"end": 432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "tag",
											"source": 5,
											"value": "156"
										},
										{
											"begin": 399,
											"end": 432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 299,
											"end": 438,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 299,
											"end": 438,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 299,
											"end": 438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 299,
											"end": 438,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 299,
											"end": 438,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 444,
											"end": 587,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 444,
											"end": 587,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 501,
											"end": 506,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 538,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 526,
											"end": 539,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 517,
											"end": 539,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 548,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 575,
											"end": 580,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 548,
											"end": 581,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 548,
											"end": 581,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 548,
											"end": 581,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 548,
											"end": 581,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 444,
											"end": 587,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 444,
											"end": 587,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 444,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 587,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 444,
											"end": 587,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 593,
											"end": 944,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 593,
											"end": 944,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 663,
											"end": 669,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 712,
											"end": 714,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 700,
											"end": 709,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 691,
											"end": 698,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 687,
											"end": 710,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 683,
											"end": 715,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 680,
											"end": 799,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 680,
											"end": 799,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 680,
											"end": 799,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 718,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 718,
											"end": 797,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 718,
											"end": 797,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 718,
											"end": 797,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 718,
											"end": 797,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 680,
											"end": 799,
											"name": "tag",
											"source": 5,
											"value": "162"
										},
										{
											"begin": 680,
											"end": 799,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 838,
											"end": 839,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 863,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 919,
											"end": 926,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 910,
											"end": 916,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 899,
											"end": 908,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 895,
											"end": 917,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 863,
											"end": 927,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 863,
											"end": 927,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 863,
											"end": 927,
											"name": "tag",
											"source": 5,
											"value": "165"
										},
										{
											"begin": 863,
											"end": 927,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 853,
											"end": 927,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 853,
											"end": 927,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 809,
											"end": 937,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 944,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 593,
											"end": 944,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 593,
											"end": 944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 944,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 593,
											"end": 944,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 950,
											"end": 1295,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 950,
											"end": 1295,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1017,
											"end": 1023,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1066,
											"end": 1068,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1054,
											"end": 1063,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1045,
											"end": 1052,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1041,
											"end": 1064,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1037,
											"end": 1069,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "tag",
											"source": 5,
											"value": "168"
										},
										{
											"begin": 1072,
											"end": 1151,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "tag",
											"source": 5,
											"value": "167"
										},
										{
											"begin": 1034,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1192,
											"end": 1193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1270,
											"end": 1277,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1261,
											"end": 1267,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1250,
											"end": 1259,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1246,
											"end": 1268,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 1217,
											"end": 1278,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1278,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1207,
											"end": 1278,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1163,
											"end": 1288,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 950,
											"end": 1295,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 950,
											"end": 1295,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 950,
											"end": 1295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 950,
											"end": 1295,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 950,
											"end": 1295,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1301,
											"end": 1630,
											"name": "tag",
											"source": 5,
											"value": "15"
										},
										{
											"begin": 1301,
											"end": 1630,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1360,
											"end": 1366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1409,
											"end": 1411,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1397,
											"end": 1406,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1388,
											"end": 1395,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1384,
											"end": 1407,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1412,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1496,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1496,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1377,
											"end": 1496,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1415,
											"end": 1494,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1415,
											"end": 1494,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1415,
											"end": 1494,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 1415,
											"end": 1494,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1377,
											"end": 1496,
											"name": "tag",
											"source": 5,
											"value": "171"
										},
										{
											"begin": 1377,
											"end": 1496,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1535,
											"end": 1536,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1560,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1605,
											"end": 1612,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1596,
											"end": 1602,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1585,
											"end": 1594,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1581,
											"end": 1603,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1560,
											"end": 1613,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 1560,
											"end": 1613,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1560,
											"end": 1613,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 1560,
											"end": 1613,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1613,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1550,
											"end": 1613,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1506,
											"end": 1623,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1630,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1630,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1630,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1301,
											"end": 1630,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1636,
											"end": 1987,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 1636,
											"end": 1987,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1706,
											"end": 1712,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1755,
											"end": 1757,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1743,
											"end": 1752,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1734,
											"end": 1741,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1730,
											"end": 1753,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1726,
											"end": 1758,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 1761,
											"end": 1840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "tag",
											"source": 5,
											"value": "175"
										},
										{
											"begin": 1723,
											"end": 1842,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1906,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1962,
											"end": 1969,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 1953,
											"end": 1959,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1942,
											"end": 1951,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1938,
											"end": 1960,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1906,
											"end": 1970,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 1906,
											"end": 1970,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1906,
											"end": 1970,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 1906,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1970,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1896,
											"end": 1970,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1852,
											"end": 1980,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1987,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1987,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1987,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1987,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1993,
											"end": 2111,
											"name": "tag",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 1993,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2098,
											"end": 2103,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "tag",
											"source": 5,
											"value": "180"
										},
										{
											"begin": 2080,
											"end": 2104,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2075,
											"end": 2078,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2068,
											"end": 2105,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1993,
											"end": 2111,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2117,
											"end": 2276,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 2117,
											"end": 2276,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2263,
											"end": 2268,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2218,
											"end": 2269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 2218,
											"end": 2269,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2218,
											"end": 2269,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 2218,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2213,
											"end": 2216,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2206,
											"end": 2270,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2276,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2117,
											"end": 2276,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2282,
											"end": 2443,
											"name": "tag",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 2282,
											"end": 2443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2430,
											"end": 2435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "tag",
											"source": 5,
											"value": "188"
										},
										{
											"begin": 2384,
											"end": 2436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2379,
											"end": 2382,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2372,
											"end": 2437,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2282,
											"end": 2443,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2449,
											"end": 2612,
											"name": "tag",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 2449,
											"end": 2612,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2599,
											"end": 2604,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2552,
											"end": 2605,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 2552,
											"end": 2605,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2552,
											"end": 2605,
											"name": "tag",
											"source": 5,
											"value": "192"
										},
										{
											"begin": 2552,
											"end": 2605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2547,
											"end": 2550,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2540,
											"end": 2606,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2612,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2449,
											"end": 2612,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2618,
											"end": 2984,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 2618,
											"end": 2984,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2760,
											"end": 2763,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2781,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2845,
											"end": 2847,
											"name": "PUSH",
											"source": 5,
											"value": "A"
										},
										{
											"begin": 2840,
											"end": 2843,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2781,
											"end": 2848,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 2781,
											"end": 2848,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2781,
											"end": 2848,
											"name": "tag",
											"source": 5,
											"value": "196"
										},
										{
											"begin": 2781,
											"end": 2848,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2848,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2774,
											"end": 2848,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2946,
											"end": 2949,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2857,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 2857,
											"end": 2950,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2857,
											"end": 2950,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 2857,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2975,
											"end": 2977,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2970,
											"end": 2973,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2966,
											"end": 2978,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2978,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2959,
											"end": 2978,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2984,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2984,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2984,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2618,
											"end": 2984,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2990,
											"end": 3356,
											"name": "tag",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 2990,
											"end": 3356,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3132,
											"end": 3135,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3153,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3217,
											"end": 3219,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 3212,
											"end": 3215,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3153,
											"end": 3220,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3153,
											"end": 3220,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3153,
											"end": 3220,
											"name": "tag",
											"source": 5,
											"value": "202"
										},
										{
											"begin": 3153,
											"end": 3220,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3220,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3146,
											"end": 3220,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3318,
											"end": 3321,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3229,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 3229,
											"end": 3322,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3229,
											"end": 3322,
											"name": "tag",
											"source": 5,
											"value": "203"
										},
										{
											"begin": 3229,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3347,
											"end": 3349,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3342,
											"end": 3345,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3338,
											"end": 3350,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3350,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3331,
											"end": 3350,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3356,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3356,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3356,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2990,
											"end": 3356,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3362,
											"end": 3728,
											"name": "tag",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 3362,
											"end": 3728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3504,
											"end": 3507,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3525,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3589,
											"end": 3591,
											"name": "PUSH",
											"source": 5,
											"value": "D"
										},
										{
											"begin": 3584,
											"end": 3587,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3525,
											"end": 3592,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3525,
											"end": 3592,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3525,
											"end": 3592,
											"name": "tag",
											"source": 5,
											"value": "207"
										},
										{
											"begin": 3525,
											"end": 3592,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3592,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3518,
											"end": 3592,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3690,
											"end": 3693,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3601,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 3601,
											"end": 3694,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3694,
											"name": "tag",
											"source": 5,
											"value": "208"
										},
										{
											"begin": 3601,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3719,
											"end": 3721,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3714,
											"end": 3717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3710,
											"end": 3722,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3722,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3703,
											"end": 3722,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3728,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3728,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3728,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3362,
											"end": 3728,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3734,
											"end": 4099,
											"name": "tag",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 3734,
											"end": 4099,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3876,
											"end": 3879,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3961,
											"end": 3962,
											"name": "PUSH",
											"source": 5,
											"value": "9"
										},
										{
											"begin": 3956,
											"end": 3959,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "tag",
											"source": 5,
											"value": "212"
										},
										{
											"begin": 3897,
											"end": 3963,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3963,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3890,
											"end": 3963,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 4061,
											"end": 4064,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3972,
											"end": 4065,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 3972,
											"end": 4065,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3972,
											"end": 4065,
											"name": "tag",
											"source": 5,
											"value": "213"
										},
										{
											"begin": 3972,
											"end": 4065,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4090,
											"end": 4092,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4085,
											"end": 4088,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4081,
											"end": 4093,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4093,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4074,
											"end": 4093,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 4099,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 4099,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 4099,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3734,
											"end": 4099,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4105,
											"end": 4471,
											"name": "tag",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 4105,
											"end": 4471,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4247,
											"end": 4250,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4268,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4332,
											"end": 4334,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 4327,
											"end": 4330,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 4268,
											"end": 4335,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4268,
											"end": 4335,
											"name": "tag",
											"source": 5,
											"value": "217"
										},
										{
											"begin": 4268,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4261,
											"end": 4335,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4261,
											"end": 4335,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4433,
											"end": 4436,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4344,
											"end": 4437,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 4344,
											"end": 4437,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4344,
											"end": 4437,
											"name": "tag",
											"source": 5,
											"value": "218"
										},
										{
											"begin": 4344,
											"end": 4437,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4462,
											"end": 4464,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4457,
											"end": 4460,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4453,
											"end": 4465,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4446,
											"end": 4465,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4471,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4471,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4471,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4105,
											"end": 4471,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4477,
											"end": 4595,
											"name": "tag",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 4477,
											"end": 4595,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4582,
											"end": 4587,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 4564,
											"end": 4588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 4564,
											"end": 4588,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4564,
											"end": 4588,
											"name": "tag",
											"source": 5,
											"value": "222"
										},
										{
											"begin": 4564,
											"end": 4588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4559,
											"end": 4562,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4552,
											"end": 4589,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4595,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4477,
											"end": 4595,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4601,
											"end": 4823,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 4601,
											"end": 4823,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4694,
											"end": 4698,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4732,
											"end": 4734,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4721,
											"end": 4730,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4717,
											"end": 4735,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4735,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4709,
											"end": 4735,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4813,
											"end": 4814,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4802,
											"end": 4811,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4798,
											"end": 4815,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4789,
											"end": 4795,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "tag",
											"source": 5,
											"value": "225"
										},
										{
											"begin": 4745,
											"end": 4816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4601,
											"end": 4823,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4601,
											"end": 4823,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4601,
											"end": 4823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4601,
											"end": 4823,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4601,
											"end": 4823,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4978,
											"end": 4982,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5016,
											"end": 5018,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5005,
											"end": 5014,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5001,
											"end": 5019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4993,
											"end": 5019,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4993,
											"end": 5019,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5029,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5097,
											"end": 5098,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5086,
											"end": 5095,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5082,
											"end": 5099,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5073,
											"end": 5079,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5029,
											"end": 5100,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5029,
											"end": 5100,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5029,
											"end": 5100,
											"name": "tag",
											"source": 5,
											"value": "227"
										},
										{
											"begin": 5029,
											"end": 5100,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5167,
											"end": 5176,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5154,
											"end": 5160,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5110,
											"end": 5182,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5110,
											"end": 5182,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5110,
											"end": 5182,
											"name": "tag",
											"source": 5,
											"value": "228"
										},
										{
											"begin": 5110,
											"end": 5182,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5192,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5260,
											"end": 5262,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5249,
											"end": 5258,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5245,
											"end": 5263,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5236,
											"end": 5242,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5192,
											"end": 5264,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5192,
											"end": 5264,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5192,
											"end": 5264,
											"name": "tag",
											"source": 5,
											"value": "229"
										},
										{
											"begin": 5192,
											"end": 5264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4829,
											"end": 5271,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5277,
											"end": 5609,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 5277,
											"end": 5609,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5398,
											"end": 5402,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5436,
											"end": 5438,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5425,
											"end": 5434,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5421,
											"end": 5439,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5439,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5439,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5449,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5517,
											"end": 5518,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5506,
											"end": 5515,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5502,
											"end": 5519,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5493,
											"end": 5499,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5449,
											"end": 5520,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "178"
										},
										{
											"begin": 5449,
											"end": 5520,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5449,
											"end": 5520,
											"name": "tag",
											"source": 5,
											"value": "231"
										},
										{
											"begin": 5449,
											"end": 5520,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5598,
											"end": 5600,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5587,
											"end": 5596,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5583,
											"end": 5601,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5574,
											"end": 5580,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5530,
											"end": 5602,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 5530,
											"end": 5602,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5530,
											"end": 5602,
											"name": "tag",
											"source": 5,
											"value": "232"
										},
										{
											"begin": 5530,
											"end": 5602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5609,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5609,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5609,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5277,
											"end": 5609,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5615,
											"end": 5865,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 5615,
											"end": 5865,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5722,
											"end": 5726,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5760,
											"end": 5762,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5758,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5745,
											"end": 5763,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5763,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5737,
											"end": 5763,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5855,
											"end": 5856,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5844,
											"end": 5853,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5840,
											"end": 5857,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5831,
											"end": 5837,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5773,
											"end": 5858,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 5773,
											"end": 5858,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5773,
											"end": 5858,
											"name": "tag",
											"source": 5,
											"value": "234"
										},
										{
											"begin": 5773,
											"end": 5858,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5865,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5865,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5865,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5615,
											"end": 5865,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5871,
											"end": 6123,
											"name": "tag",
											"source": 5,
											"value": "42"
										},
										{
											"begin": 5871,
											"end": 6123,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5979,
											"end": 5983,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6017,
											"end": 6019,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6015,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6002,
											"end": 6020,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6020,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5994,
											"end": 6020,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6113,
											"end": 6114,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6111,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6098,
											"end": 6115,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6089,
											"end": 6095,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6030,
											"end": 6116,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "186"
										},
										{
											"begin": 6030,
											"end": 6116,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6030,
											"end": 6116,
											"name": "tag",
											"source": 5,
											"value": "236"
										},
										{
											"begin": 6030,
											"end": 6116,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 6123,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 6123,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 6123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 6123,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5871,
											"end": 6123,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6129,
											"end": 6383,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 6129,
											"end": 6383,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6238,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6276,
											"end": 6278,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6265,
											"end": 6274,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6261,
											"end": 6279,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6279,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6253,
											"end": 6279,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6289,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6373,
											"end": 6374,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6362,
											"end": 6371,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6358,
											"end": 6375,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6349,
											"end": 6355,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 6289,
											"end": 6376,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "190"
										},
										{
											"begin": 6289,
											"end": 6376,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6289,
											"end": 6376,
											"name": "tag",
											"source": 5,
											"value": "238"
										},
										{
											"begin": 6289,
											"end": 6376,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6383,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6383,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6383,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6129,
											"end": 6383,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6389,
											"end": 6808,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 6389,
											"end": 6808,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6555,
											"end": 6559,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6593,
											"end": 6595,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6582,
											"end": 6591,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6578,
											"end": 6596,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6570,
											"end": 6596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6642,
											"end": 6651,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6636,
											"end": 6640,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6632,
											"end": 6652,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6628,
											"end": 6629,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6617,
											"end": 6626,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6613,
											"end": 6630,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6606,
											"end": 6653,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6670,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6796,
											"end": 6800,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6670,
											"end": 6801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 6670,
											"end": 6801,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6670,
											"end": 6801,
											"name": "tag",
											"source": 5,
											"value": "240"
										},
										{
											"begin": 6670,
											"end": 6801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6662,
											"end": 6801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6662,
											"end": 6801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6389,
											"end": 6808,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6389,
											"end": 6808,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6389,
											"end": 6808,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6389,
											"end": 6808,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6814,
											"end": 7233,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 6814,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6980,
											"end": 6984,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7018,
											"end": 7020,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7007,
											"end": 7016,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7003,
											"end": 7021,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6995,
											"end": 7021,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6995,
											"end": 7021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7067,
											"end": 7076,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7061,
											"end": 7065,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7057,
											"end": 7077,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7053,
											"end": 7054,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7042,
											"end": 7051,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7038,
											"end": 7055,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7078,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7095,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7221,
											"end": 7225,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7095,
											"end": 7226,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "200"
										},
										{
											"begin": 7095,
											"end": 7226,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7095,
											"end": 7226,
											"name": "tag",
											"source": 5,
											"value": "242"
										},
										{
											"begin": 7095,
											"end": 7226,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7226,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7087,
											"end": 7226,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 7233,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 7233,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 7233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6814,
											"end": 7233,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7239,
											"end": 7658,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 7239,
											"end": 7658,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7405,
											"end": 7409,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7443,
											"end": 7445,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7432,
											"end": 7441,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7428,
											"end": 7446,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7420,
											"end": 7446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7501,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7486,
											"end": 7490,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7482,
											"end": 7502,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7478,
											"end": 7479,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7467,
											"end": 7476,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7463,
											"end": 7480,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7456,
											"end": 7503,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7520,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7646,
											"end": 7650,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7520,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "205"
										},
										{
											"begin": 7520,
											"end": 7651,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7520,
											"end": 7651,
											"name": "tag",
											"source": 5,
											"value": "244"
										},
										{
											"begin": 7520,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7651,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7512,
											"end": 7651,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7658,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7658,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7658,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7239,
											"end": 7658,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7664,
											"end": 8083,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 7664,
											"end": 8083,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7830,
											"end": 7834,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7868,
											"end": 7870,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 7857,
											"end": 7866,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7853,
											"end": 7871,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7845,
											"end": 7871,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7845,
											"end": 7871,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7917,
											"end": 7926,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7911,
											"end": 7915,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7907,
											"end": 7927,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7892,
											"end": 7901,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 7888,
											"end": 7905,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7881,
											"end": 7928,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7945,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 8071,
											"end": 8075,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7945,
											"end": 8076,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "210"
										},
										{
											"begin": 7945,
											"end": 8076,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7945,
											"end": 8076,
											"name": "tag",
											"source": 5,
											"value": "246"
										},
										{
											"begin": 7945,
											"end": 8076,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7937,
											"end": 8076,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7937,
											"end": 8076,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7664,
											"end": 8083,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7664,
											"end": 8083,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7664,
											"end": 8083,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7664,
											"end": 8083,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8255,
											"end": 8259,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8293,
											"end": 8295,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8282,
											"end": 8291,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8278,
											"end": 8296,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8270,
											"end": 8296,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8270,
											"end": 8296,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8342,
											"end": 8351,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8336,
											"end": 8340,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8332,
											"end": 8352,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 8328,
											"end": 8329,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8317,
											"end": 8326,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8313,
											"end": 8330,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8306,
											"end": 8353,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8496,
											"end": 8500,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "215"
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "tag",
											"source": 5,
											"value": "248"
										},
										{
											"begin": 8370,
											"end": 8501,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8501,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8362,
											"end": 8501,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8508,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8514,
											"end": 8736,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 8514,
											"end": 8736,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8607,
											"end": 8611,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8645,
											"end": 8647,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8634,
											"end": 8643,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8630,
											"end": 8648,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8648,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8622,
											"end": 8648,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 8726,
											"end": 8727,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8715,
											"end": 8724,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8711,
											"end": 8728,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8702,
											"end": 8708,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "220"
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "tag",
											"source": 5,
											"value": "250"
										},
										{
											"begin": 8658,
											"end": 8729,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8514,
											"end": 8736,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8514,
											"end": 8736,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8514,
											"end": 8736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8514,
											"end": 8736,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8514,
											"end": 8736,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8823,
											"end": 8992,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 8823,
											"end": 8992,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8907,
											"end": 8918,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8941,
											"end": 8947,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8936,
											"end": 8939,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8929,
											"end": 8948,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8981,
											"end": 8985,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 8976,
											"end": 8979,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8972,
											"end": 8986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8957,
											"end": 8986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8823,
											"end": 8992,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8823,
											"end": 8992,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8823,
											"end": 8992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8823,
											"end": 8992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8823,
											"end": 8992,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8998,
											"end": 9303,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 8998,
											"end": 9303,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9038,
											"end": 9041,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9057,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9075,
											"end": 9076,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9057,
											"end": 9077,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 9057,
											"end": 9077,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9057,
											"end": 9077,
											"name": "tag",
											"source": 5,
											"value": "255"
										},
										{
											"begin": 9057,
											"end": 9077,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9077,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9052,
											"end": 9077,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9091,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 9109,
											"end": 9110,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9091,
											"end": 9111,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 9091,
											"end": 9111,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9091,
											"end": 9111,
											"name": "tag",
											"source": 5,
											"value": "256"
										},
										{
											"begin": 9091,
											"end": 9111,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9086,
											"end": 9111,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9086,
											"end": 9111,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9245,
											"end": 9246,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9177,
											"end": 9243,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9173,
											"end": 9247,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9170,
											"end": 9171,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9167,
											"end": 9248,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9271,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9271,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9164,
											"end": 9271,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9251,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 9251,
											"end": 9269,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9251,
											"end": 9269,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9251,
											"end": 9269,
											"name": "tag",
											"source": 5,
											"value": "258"
										},
										{
											"begin": 9251,
											"end": 9269,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9164,
											"end": 9271,
											"name": "tag",
											"source": 5,
											"value": "257"
										},
										{
											"begin": 9164,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9295,
											"end": 9296,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9292,
											"end": 9293,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9288,
											"end": 9297,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9281,
											"end": 9297,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9303,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9303,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9303,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8998,
											"end": 9303,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9309,
											"end": 9500,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 9309,
											"end": 9500,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9349,
											"end": 9353,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "tag",
											"source": 5,
											"value": "261"
										},
										{
											"begin": 9369,
											"end": 9389,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9389,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9364,
											"end": 9389,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 9421,
											"end": 9422,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "tag",
											"source": 5,
											"value": "262"
										},
										{
											"begin": 9403,
											"end": 9423,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9398,
											"end": 9423,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9398,
											"end": 9423,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9442,
											"end": 9443,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9439,
											"end": 9440,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9436,
											"end": 9444,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 9433,
											"end": 9467,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9433,
											"end": 9467,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9433,
											"end": 9467,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "tag",
											"source": 5,
											"value": "264"
										},
										{
											"begin": 9447,
											"end": 9465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9433,
											"end": 9467,
											"name": "tag",
											"source": 5,
											"value": "263"
										},
										{
											"begin": 9433,
											"end": 9467,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9492,
											"end": 9493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9489,
											"end": 9490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9485,
											"end": 9494,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 9494,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9477,
											"end": 9494,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9500,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9500,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9500,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9309,
											"end": 9500,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9506,
											"end": 9602,
											"name": "tag",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 9506,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9543,
											"end": 9550,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9572,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9590,
											"end": 9595,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9572,
											"end": 9596,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9572,
											"end": 9596,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9572,
											"end": 9596,
											"name": "tag",
											"source": 5,
											"value": "266"
										},
										{
											"begin": 9572,
											"end": 9596,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9561,
											"end": 9596,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9561,
											"end": 9596,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9602,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9602,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9602,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9506,
											"end": 9602,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9608,
											"end": 9698,
											"name": "tag",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 9608,
											"end": 9698,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9642,
											"end": 9649,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9685,
											"end": 9690,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9678,
											"end": 9691,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9671,
											"end": 9692,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9660,
											"end": 9692,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9608,
											"end": 9698,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9608,
											"end": 9698,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9608,
											"end": 9698,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9608,
											"end": 9698,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9704,
											"end": 9830,
											"name": "tag",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 9704,
											"end": 9830,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9741,
											"end": 9748,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9781,
											"end": 9823,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 9774,
											"end": 9779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9770,
											"end": 9824,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9759,
											"end": 9824,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9704,
											"end": 9830,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9704,
											"end": 9830,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9704,
											"end": 9830,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9704,
											"end": 9830,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9836,
											"end": 9913,
											"name": "tag",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 9836,
											"end": 9913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9873,
											"end": 9880,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9902,
											"end": 9907,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9907,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9891,
											"end": 9907,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9913,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9836,
											"end": 9913,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9919,
											"end": 10059,
											"name": "tag",
											"source": 5,
											"value": "185"
										},
										{
											"begin": 9919,
											"end": 10059,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9983,
											"end": 9992,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10016,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 10047,
											"end": 10052,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10016,
											"end": 10053,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10016,
											"end": 10053,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10016,
											"end": 10053,
											"name": "tag",
											"source": 5,
											"value": "273"
										},
										{
											"begin": 10016,
											"end": 10053,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10003,
											"end": 10053,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10003,
											"end": 10053,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9919,
											"end": 10059,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9919,
											"end": 10059,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9919,
											"end": 10059,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9919,
											"end": 10059,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10065,
											"end": 10206,
											"name": "tag",
											"source": 5,
											"value": "189"
										},
										{
											"begin": 10065,
											"end": 10206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10130,
											"end": 10139,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10163,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10194,
											"end": 10199,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10163,
											"end": 10200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10163,
											"end": 10200,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10163,
											"end": 10200,
											"name": "tag",
											"source": 5,
											"value": "276"
										},
										{
											"begin": 10163,
											"end": 10200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10150,
											"end": 10200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10065,
											"end": 10206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10065,
											"end": 10206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10065,
											"end": 10206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10065,
											"end": 10206,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10212,
											"end": 10354,
											"name": "tag",
											"source": 5,
											"value": "193"
										},
										{
											"begin": 10212,
											"end": 10354,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10278,
											"end": 10287,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10311,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10342,
											"end": 10347,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10311,
											"end": 10348,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10311,
											"end": 10348,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10311,
											"end": 10348,
											"name": "tag",
											"source": 5,
											"value": "278"
										},
										{
											"begin": 10311,
											"end": 10348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10348,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10298,
											"end": 10348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10212,
											"end": 10354,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10212,
											"end": 10354,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10212,
											"end": 10354,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10212,
											"end": 10354,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10360,
											"end": 10486,
											"name": "tag",
											"source": 5,
											"value": "274"
										},
										{
											"begin": 10360,
											"end": 10486,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10410,
											"end": 10419,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10443,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10474,
											"end": 10479,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10443,
											"end": 10480,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10443,
											"end": 10480,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10443,
											"end": 10480,
											"name": "tag",
											"source": 5,
											"value": "280"
										},
										{
											"begin": 10443,
											"end": 10480,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10430,
											"end": 10480,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10430,
											"end": 10480,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10486,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10486,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10486,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10360,
											"end": 10486,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10492,
											"end": 10605,
											"name": "tag",
											"source": 5,
											"value": "281"
										},
										{
											"begin": 10492,
											"end": 10605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10542,
											"end": 10551,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10575,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 10593,
											"end": 10598,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 10575,
											"end": 10599,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "267"
										},
										{
											"begin": 10575,
											"end": 10599,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10575,
											"end": 10599,
											"name": "tag",
											"source": 5,
											"value": "283"
										},
										{
											"begin": 10575,
											"end": 10599,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10599,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10562,
											"end": 10599,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10492,
											"end": 10605,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 10492,
											"end": 10605,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 10492,
											"end": 10605,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 10492,
											"end": 10605,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 10611,
											"end": 10791,
											"name": "tag",
											"source": 5,
											"value": "259"
										},
										{
											"begin": 10611,
											"end": 10791,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10659,
											"end": 10736,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10656,
											"end": 10657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10649,
											"end": 10737,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10756,
											"end": 10760,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 10753,
											"end": 10754,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 10746,
											"end": 10761,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 10780,
											"end": 10784,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 10777,
											"end": 10778,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10770,
											"end": 10785,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 10920,
											"end": 11037,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 10920,
											"end": 11037,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11029,
											"end": 11030,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11026,
											"end": 11027,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 11019,
											"end": 11031,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11203,
											"name": "tag",
											"source": 5,
											"value": "199"
										},
										{
											"begin": 11043,
											"end": 11203,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11183,
											"end": 11195,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74207374616B656400000000000000000000000000000000000000000000"
										},
										{
											"begin": 11179,
											"end": 11180,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11171,
											"end": 11177,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11167,
											"end": 11181,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11160,
											"end": 11196,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11203,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11043,
											"end": 11203,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11209,
											"end": 11372,
											"name": "tag",
											"source": 5,
											"value": "204"
										},
										{
											"begin": 11209,
											"end": 11372,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11349,
											"end": 11364,
											"name": "PUSH",
											"source": 5,
											"value": "5472616E73666572206661696C00000000000000000000000000000000000000"
										},
										{
											"begin": 11345,
											"end": 11346,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11337,
											"end": 11343,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11333,
											"end": 11347,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11326,
											"end": 11365,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11209,
											"end": 11372,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11209,
											"end": 11372,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11378,
											"end": 11541,
											"name": "tag",
											"source": 5,
											"value": "209"
										},
										{
											"begin": 11378,
											"end": 11541,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11518,
											"end": 11533,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74207265616C4F776E657200000000000000000000000000000000000000"
										},
										{
											"begin": 11514,
											"end": 11515,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11506,
											"end": 11512,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11502,
											"end": 11516,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11495,
											"end": 11534,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11378,
											"end": 11541,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11378,
											"end": 11541,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11547,
											"end": 11706,
											"name": "tag",
											"source": 5,
											"value": "214"
										},
										{
											"begin": 11547,
											"end": 11706,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11687,
											"end": 11698,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F74206F776E65720000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11683,
											"end": 11684,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11675,
											"end": 11681,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11671,
											"end": 11685,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11664,
											"end": 11699,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11547,
											"end": 11706,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11547,
											"end": 11706,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11712,
											"end": 11893,
											"name": "tag",
											"source": 5,
											"value": "219"
										},
										{
											"begin": 11712,
											"end": 11893,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11852,
											"end": 11885,
											"name": "PUSH",
											"source": 5,
											"value": "5265656E7472616E637947756172643A207265656E7472616E742063616C6C00"
										},
										{
											"begin": 11848,
											"end": 11849,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 11840,
											"end": 11846,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 11836,
											"end": 11850,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 11829,
											"end": 11886,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 11712,
											"end": 11893,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11712,
											"end": 11893,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 11899,
											"end": 12021,
											"name": "tag",
											"source": 5,
											"value": "149"
										},
										{
											"begin": 11899,
											"end": 12021,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11972,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 11990,
											"end": 11995,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11972,
											"end": 11996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "181"
										},
										{
											"begin": 11972,
											"end": 11996,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 11972,
											"end": 11996,
											"name": "tag",
											"source": 5,
											"value": "294"
										},
										{
											"begin": 11972,
											"end": 11996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11965,
											"end": 11970,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 11962,
											"end": 11997,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 11952,
											"end": 12015,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 11952,
											"end": 12015,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12011,
											"end": 12012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12008,
											"end": 12009,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12001,
											"end": 12013,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 11952,
											"end": 12015,
											"name": "tag",
											"source": 5,
											"value": "295"
										},
										{
											"begin": 11952,
											"end": 12015,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 11899,
											"end": 12021,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 11899,
											"end": 12021,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12027,
											"end": 12143,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 12027,
											"end": 12143,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12097,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 12112,
											"end": 12117,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12097,
											"end": 12118,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "268"
										},
										{
											"begin": 12097,
											"end": 12118,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12097,
											"end": 12118,
											"name": "tag",
											"source": 5,
											"value": "297"
										},
										{
											"begin": 12097,
											"end": 12118,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12090,
											"end": 12095,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12087,
											"end": 12119,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12137,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 12077,
											"end": 12137,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12133,
											"end": 12134,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12130,
											"end": 12131,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12123,
											"end": 12135,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12077,
											"end": 12137,
											"name": "tag",
											"source": 5,
											"value": "298"
										},
										{
											"begin": 12077,
											"end": 12137,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12027,
											"end": 12143,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12027,
											"end": 12143,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 12149,
											"end": 12271,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 12149,
											"end": 12271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 12240,
											"end": 12245,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "223"
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "tag",
											"source": 5,
											"value": "300"
										},
										{
											"begin": 12222,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12215,
											"end": 12220,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 12212,
											"end": 12247,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 12202,
											"end": 12265,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 12202,
											"end": 12265,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 12261,
											"end": 12262,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 12258,
											"end": 12259,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 12251,
											"end": 12263,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 12202,
											"end": 12265,
											"name": "tag",
											"source": 5,
											"value": "301"
										},
										{
											"begin": 12202,
											"end": 12265,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 12149,
											"end": 12271,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 12149,
											"end": 12271,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"claim(uint256)": "379607f5",
							"claimedTrophies(uint256)": "53eebc6d",
							"parentNFT()": "b8e33fb2",
							"parentNFTAddress()": "66bb863b",
							"parentNftFunctions()": "fead3d6e",
							"parentToken()": "80a54001",
							"refreshTrophies(uint256)": "0eeadd30",
							"stake(uint256)": "a694fc3a",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"claimedTrophies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNftFunctions\",\"outputs\":[{\"internalType\":\"contract INFTGame\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"refreshTrophies\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"stake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0x9b3d4eb1177998a9a8f7be952f2342d14136d1f0debf3b0f01f118174a3776c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8b4c961449de1e3cd591c1822013f163530a40a705bae532d49ba8239934207d\",\"dweb:/ipfs/QmeF4oqNWi5TtXxUiGRjw8LuPy3MMNtvQ9xwm9r3ifSimg\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Missions.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 266,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)233"
							},
							{
								"astId": 269,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNftFunctions",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(INFTGame)258"
							},
							{
								"astId": 271,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFTAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 318,
								"contract": "contracts/Missions.sol:Staking",
								"label": "s_stakeReview",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_struct(StakeReview)325_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)233": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(INFTGame)258": {
								"encoding": "inplace",
								"label": "contract INFTGame",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_struct(StakeReview)325_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct Staking.StakeReview)",
								"numberOfBytes": "32",
								"value": "t_struct(StakeReview)325_storage"
							},
							"t_struct(StakeReview)325_storage": {
								"encoding": "inplace",
								"label": "struct Staking.StakeReview",
								"members": [
									{
										"astId": 320,
										"contract": "contracts/Missions.sol:Staking",
										"label": "realOwner",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 322,
										"contract": "contracts/Missions.sol:Staking",
										"label": "claimedTrophies",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 324,
										"contract": "contracts/Missions.sol:Staking",
										"label": "lastClaimTime",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "96"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC721": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 246,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 122,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "271:7:2"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 121,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								245
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 132,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 141,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 150,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 233,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 233,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 233,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 233,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 233,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 233,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 233,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 233,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 233,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 234,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 245,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"contracts/Missions.sol": {
				"ast": {
					"absolutePath": "contracts/Missions.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC20": [
							117
						],
						"IERC721": [
							233
						],
						"INFTGame": [
							258
						],
						"ReentrancyGuard": [
							39
						],
						"Staking": [
							610
						]
					},
					"id": 611,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 40,
							"src": "64:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 118,
							"src": "128:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 611,
							"sourceUnit": 234,
							"src": "186:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "INFTGame",
							"nameLocation": "258:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a0c4442d",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrophies",
									"nameLocation": "286:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "298:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:9:4"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "325:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:9:4"
									},
									"scope": 258,
									"src": "277:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 611,
							"src": "248:89:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "361:15:4"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "361:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 610,
							"linearizedBaseContracts": [
								610,
								39
							],
							"name": "Staking",
							"nameLocation": "350:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "80a54001",
									"id": 263,
									"mutability": "mutable",
									"name": "parentToken",
									"nameLocation": "398:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "384:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 262,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 261,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "384:6:4"
										},
										"referencedDeclaration": 117,
										"src": "384:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 266,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "431:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "416:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$233",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 265,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 264,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 233,
											"src": "416:7:4"
										},
										"referencedDeclaration": 233,
										"src": "416:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$233",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fead3d6e",
									"id": 269,
									"mutability": "mutable",
									"name": "parentNftFunctions",
									"nameLocation": "463:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "447:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTGame_$258",
										"typeString": "contract INFTGame"
									},
									"typeName": {
										"id": 268,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 267,
											"name": "INFTGame",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 258,
											"src": "447:8:4"
										},
										"referencedDeclaration": 258,
										"src": "447:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTGame_$258",
											"typeString": "contract INFTGame"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66bb863b",
									"id": 271,
									"mutability": "mutable",
									"name": "parentNFTAddress",
									"nameLocation": "503:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "488:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "583:205:4",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "594:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 280,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "614:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 279,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "606:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$233_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "606:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"src": "594:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$233",
														"typeString": "contract IERC721"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "594:33:4"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "parentNftFunctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 286,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "668:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 285,
															"name": "INFTGame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "659:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INFTGame_$258_$",
																"typeString": "type(contract INFTGame)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "659:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"src": "638:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTGame_$258",
														"typeString": "contract INFTGame"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "638:43:4"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "parentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "692:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 292,
																"name": "_tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "713:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 291,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "706:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "706:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "692:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "692:36:4"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "parentNFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "739:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "758:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "739:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "739:31:4"
											}
										]
									},
									"id": 301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "546:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "538:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "568:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "560:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:46:4"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:4"
									},
									"scope": 610,
									"src": "526:262:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 312,
										"nodeType": "Block",
										"src": "811:85:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 307,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 304,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "830:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "830:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"id": 306,
																"name": "parentNFTAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "844:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "830:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f776564",
															"id": 308,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "862:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															},
															"value": "Not allowed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
																"typeString": "literal_string \"Not allowed\""
															}
														],
														"id": 303,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "822:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "822:54:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 310,
												"nodeType": "ExpressionStatement",
												"src": "822:54:4"
											},
											{
												"id": 311,
												"nodeType": "PlaceholderStatement",
												"src": "887:1:4"
											}
										]
									},
									"id": 313,
									"name": "onlyMain",
									"nameLocation": "803:8:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "811:0:4"
									},
									"src": "794:102:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 318,
									"mutability": "mutable",
									"name": "s_stakeReview",
									"nameLocation": "935:13:4",
									"nodeType": "VariableDeclaration",
									"scope": 610,
									"src": "902:46:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
										"typeString": "mapping(uint256 => struct Staking.StakeReview)"
									},
									"typeName": {
										"id": 317,
										"keyType": {
											"id": 314,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "911:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "902:32:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
											"typeString": "mapping(uint256 => struct Staking.StakeReview)"
										},
										"valueType": {
											"id": 316,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 315,
												"name": "StakeReview",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 325,
												"src": "922:11:4"
											},
											"referencedDeclaration": 325,
											"src": "922:11:4",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_StakeReview_$325_storage_ptr",
												"typeString": "struct Staking.StakeReview"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"canonicalName": "Staking.StakeReview",
									"id": 325,
									"members": [
										{
											"constant": false,
											"id": 320,
											"mutability": "mutable",
											"name": "realOwner",
											"nameLocation": "996:9:4",
											"nodeType": "VariableDeclaration",
											"scope": 325,
											"src": "988:17:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 319,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "988:7:4",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 322,
											"mutability": "mutable",
											"name": "claimedTrophies",
											"nameLocation": "1024:15:4",
											"nodeType": "VariableDeclaration",
											"scope": 325,
											"src": "1016:23:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 321,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1016:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 324,
											"mutability": "mutable",
											"name": "lastClaimTime",
											"nameLocation": "1058:13:4",
											"nodeType": "VariableDeclaration",
											"scope": 325,
											"src": "1050:21:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 323,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1050:7:4",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StakeReview",
									"nameLocation": "966:11:4",
									"nodeType": "StructDefinition",
									"scope": 610,
									"src": "959:121:4",
									"visibility": "public"
								},
								{
									"body": {
										"id": 340,
										"nodeType": "Block",
										"src": "1136:109:4",
										"statements": [
											{
												"expression": {
													"id": 338,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 330,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1146:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 332,
															"indexExpression": {
																"id": 331,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "1160:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1146:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 333,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimedTrophies",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 322,
														"src": "1146:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 336,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 327,
																"src": "1219:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 334,
																"name": "parentNftFunctions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "1188:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INFTGame_$258",
																	"typeString": "contract INFTGame"
																}
															},
															"id": 335,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getTrophies",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 257,
															"src": "1188:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) external returns (uint256)"
															}
														},
														"id": 337,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1188:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1146:82:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 339,
												"nodeType": "ExpressionStatement",
												"src": "1146:82:4"
											}
										]
									},
									"functionSelector": "0eeadd30",
									"id": 341,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "refreshTrophies",
									"nameLocation": "1095:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 327,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1119:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 341,
												"src": "1111:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 326,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1111:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1110:18:4"
									},
									"returnParameters": {
										"id": 329,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1136:0:4"
									},
									"scope": 610,
									"src": "1086:159:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 353,
										"nodeType": "Block",
										"src": "1323:65:4",
										"statements": [
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"id": 348,
															"name": "s_stakeReview",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "1341:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
															}
														},
														"id": 350,
														"indexExpression": {
															"id": 349,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 343,
															"src": "1355:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "1341:23:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_StakeReview_$325_storage",
															"typeString": "struct Staking.StakeReview storage ref"
														}
													},
													"id": 351,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "claimedTrophies",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 322,
													"src": "1341:39:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 347,
												"id": 352,
												"nodeType": "Return",
												"src": "1334:46:4"
											}
										]
									},
									"functionSelector": "53eebc6d",
									"id": 354,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "claimedTrophies",
									"nameLocation": "1260:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 344,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1284:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1276:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 342,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1276:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1275:18:4"
									},
									"returnParameters": {
										"id": 347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 346,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 354,
												"src": "1315:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 345,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1315:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1314:9:4"
									},
									"scope": 610,
									"src": "1251:137:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 400,
										"nodeType": "Block",
										"src": "1449:285:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 368,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 364,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 356,
																		"src": "1486:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 362,
																		"name": "parentNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "1468:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$233",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "1468:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 365,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1468:27:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 366,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1499:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 367,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1499:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1468:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572",
															"id": 369,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1511:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															},
															"value": "Not owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c266efca4f4ed37612271196433531dcbb4fca89a694d568d1e290e32feb1682",
																"typeString": "literal_string \"Not owner\""
															}
														],
														"id": 361,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1460:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1460:63:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 371,
												"nodeType": "ExpressionStatement",
												"src": "1460:63:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 375,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1567:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 376,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1567:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 379,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1587:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$610",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$610",
																		"typeString": "contract Staking"
																	}
																],
																"id": 378,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1579:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 377,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1579:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 380,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1579:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 381,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 356,
															"src": "1594:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 372,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "1544:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$233",
																"typeString": "contract IERC721"
															}
														},
														"id": 374,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 198,
														"src": "1544:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1544:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 383,
												"nodeType": "ExpressionStatement",
												"src": "1544:59:4"
											},
											{
												"expression": {
													"id": 390,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 384,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1614:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 386,
															"indexExpression": {
																"id": 385,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "1628:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1614:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 387,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "realOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 320,
														"src": "1614:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 388,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "1650:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 389,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "1650:10:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1614:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 391,
												"nodeType": "ExpressionStatement",
												"src": "1614:46:4"
											},
											{
												"expression": {
													"id": 398,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 392,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1671:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 394,
															"indexExpression": {
																"id": 393,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 356,
																"src": "1685:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1671:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 395,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "lastClaimTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 324,
														"src": "1671:37:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 396,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "1711:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 397,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "1711:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1671:55:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 399,
												"nodeType": "ExpressionStatement",
												"src": "1671:55:4"
											}
										]
									},
									"functionSelector": "a694fc3a",
									"id": 401,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [],
											"id": 359,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 358,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1434:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1434:14:4"
										}
									],
									"name": "stake",
									"nameLocation": "1403:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 356,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1417:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "1409:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 355,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1408:18:4"
									},
									"returnParameters": {
										"id": 360,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1449:0:4"
									},
									"scope": 610,
									"src": "1394:340:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 497,
										"nodeType": "Block",
										"src": "1799:743:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 409,
																		"name": "s_stakeReview",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "1818:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																			"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																		}
																	},
																	"id": 411,
																	"indexExpression": {
																		"id": 410,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "1832:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1818:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																		"typeString": "struct Staking.StakeReview storage ref"
																	}
																},
																"id": 412,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "lastClaimTime",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 324,
																"src": "1818:37:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1858:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1818:41:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 408,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1810:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1810:51:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 416,
												"nodeType": "ExpressionStatement",
												"src": "1810:51:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 424,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 418,
																		"name": "s_stakeReview",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "1880:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																			"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																		}
																	},
																	"id": 420,
																	"indexExpression": {
																		"id": 419,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "1894:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "1880:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																		"typeString": "struct Staking.StakeReview storage ref"
																	}
																},
																"id": 421,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "realOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 320,
																"src": "1880:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 422,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1917:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 423,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1917:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1880:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 417,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1872:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1872:56:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 426,
												"nodeType": "ExpressionStatement",
												"src": "1872:56:4"
											},
											{
												"expression": {
													"id": 435,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 427,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "1941:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 429,
															"indexExpression": {
																"id": 428,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "1955:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1941:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 430,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "claimedTrophies",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 322,
														"src": "1941:39:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 433,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2014:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 431,
																"name": "parentNftFunctions",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 269,
																"src": "1983:18:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_INFTGame_$258",
																	"typeString": "contract INFTGame"
																}
															},
															"id": 432,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "getTrophies",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 257,
															"src": "1983:30:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																"typeString": "function (uint256) external returns (uint256)"
															}
														},
														"id": 434,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1983:40:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1941:82:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 436,
												"nodeType": "ExpressionStatement",
												"src": "1941:82:4"
											},
											{
												"assignments": [
													438
												],
												"declarations": [
													{
														"constant": false,
														"id": 438,
														"mutability": "mutable",
														"name": "currentTrophies",
														"nameLocation": "2042:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2034:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 437,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2034:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 443,
												"initialValue": {
													"arguments": [
														{
															"id": 441,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "2091:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 439,
															"name": "parentNftFunctions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2060:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFTGame_$258",
																"typeString": "contract INFTGame"
															}
														},
														"id": 440,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getTrophies",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "2060:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) external returns (uint256)"
														}
													},
													"id": 442,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2060:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2034:66:4"
											},
											{
												"assignments": [
													445
												],
												"declarations": [
													{
														"constant": false,
														"id": 445,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2119:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 497,
														"src": "2111:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 444,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2111:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 463,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 461,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 452,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 446,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2130:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 447,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2130:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 448,
																					"name": "s_stakeReview",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "2148:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																						"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																					}
																				},
																				"id": 450,
																				"indexExpression": {
																					"id": 449,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "2162:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2148:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																					"typeString": "struct Staking.StakeReview storage ref"
																				}
																			},
																			"id": 451,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastClaimTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 324,
																			"src": "2148:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2130:55:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 453,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2129:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 459,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 454,
																			"name": "currentTrophies",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 438,
																			"src": "2190:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 455,
																					"name": "s_stakeReview",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "2208:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																						"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																					}
																				},
																				"id": 457,
																				"indexExpression": {
																					"id": 456,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 403,
																					"src": "2222:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2208:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																					"typeString": "struct Staking.StakeReview storage ref"
																				}
																			},
																			"id": 458,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "claimedTrophies",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 322,
																			"src": "2208:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2190:57:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 460,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2189:59:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2129:119:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 462,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2128:122:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2111:139:4"
											},
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 466,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2286:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 467,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2286:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 468,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 445,
															"src": "2298:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 464,
															"name": "parentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "2265:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 465,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "2265:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 469,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2265:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"expression": {
														"arguments": [
															{
																"hexValue": "5472616e73666572206661696c",
																"id": 493,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "string",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2518:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
																	"typeString": "literal_string \"Transfer fail\""
																},
																"value": "Transfer fail"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_16c777a58f6e3d980b39cb8f48eb79a80df895169ab129c60d82e2c36ce3881f",
																	"typeString": "literal_string \"Transfer fail\""
																}
															],
															"id": 492,
															"name": "revert",
															"nodeType": "Identifier",
															"overloadedDeclarations": [
																4294967277,
																4294967277
															],
															"referencedDeclaration": 4294967277,
															"src": "2511:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
																"typeString": "function (string memory) pure"
															}
														},
														"id": 494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2511:23:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 495,
													"nodeType": "ExpressionStatement",
													"src": "2511:23:4"
												},
												"id": 496,
												"nodeType": "IfStatement",
												"src": "2261:273:4",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "2306:199:4",
													"statements": [
														{
															"expression": {
																"id": 476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 470,
																			"name": "s_stakeReview",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "2321:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																				"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																			}
																		},
																		"id": 472,
																		"indexExpression": {
																			"id": 471,
																			"name": "_tokenID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "2335:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2321:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																			"typeString": "struct Staking.StakeReview storage ref"
																		}
																	},
																	"id": 473,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastClaimTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 324,
																	"src": "2321:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 474,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "2361:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 475,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "2361:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2321:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 477,
															"nodeType": "ExpressionStatement",
															"src": "2321:55:4"
														},
														{
															"expression": {
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 478,
																			"name": "s_stakeReview",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "2391:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																				"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																			}
																		},
																		"id": 480,
																		"indexExpression": {
																			"id": 479,
																			"name": "_tokenID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 403,
																			"src": "2405:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "2391:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																			"typeString": "struct Staking.StakeReview storage ref"
																		}
																	},
																	"id": 481,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimedTrophies",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 322,
																	"src": "2391:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 487,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 482,
																				"name": "currentTrophies",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 438,
																				"src": "2435:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 483,
																						"name": "s_stakeReview",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "2453:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																							"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																						}
																					},
																					"id": 485,
																					"indexExpression": {
																						"id": 484,
																						"name": "_tokenID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 403,
																						"src": "2467:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "2453:23:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																						"typeString": "struct Staking.StakeReview storage ref"
																					}
																				},
																				"id": 486,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "claimedTrophies",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 322,
																				"src": "2453:39:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2435:57:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 488,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "2434:59:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2391:102:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 490,
															"nodeType": "ExpressionStatement",
															"src": "2391:102:4"
														}
													]
												}
											}
										]
									},
									"functionSelector": "379607f5",
									"id": 498,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 406,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 405,
												"name": "nonReentrant",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 38,
												"src": "1786:12:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1786:12:4"
										}
									],
									"name": "claim",
									"nameLocation": "1755:5:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1769:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 498,
												"src": "1761:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1761:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1760:18:4"
									},
									"returnParameters": {
										"id": 407,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1799:0:4"
									},
									"scope": 610,
									"src": "1746:796:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 608,
										"nodeType": "Block",
										"src": "2590:805:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 506,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "2627:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 504,
																		"name": "parentNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 266,
																		"src": "2609:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721_$233",
																			"typeString": "contract IERC721"
																		}
																	},
																	"id": 505,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 166,
																	"src": "2609:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2609:27:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 510,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "2648:4:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_Staking_$610",
																			"typeString": "contract Staking"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_Staking_$610",
																			"typeString": "contract Staking"
																		}
																	],
																	"id": 509,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2640:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 508,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2640:7:4",
																		"typeDescriptions": {}
																	}
																},
																"id": 511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2640:13:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2609:44:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207374616b6564",
															"id": 513,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2655:12:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b",
																"typeString": "literal_string \"Not staked\""
															},
															"value": "Not staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0a9d0ecd49bee278668e19f1af22fe4be1e214161373796d5a2b94d737799b7b",
																"typeString": "literal_string \"Not staked\""
															}
														],
														"id": 503,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2601:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2601:67:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "ExpressionStatement",
												"src": "2601:67:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 517,
																		"name": "s_stakeReview",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "2687:13:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																			"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																		}
																	},
																	"id": 519,
																	"indexExpression": {
																		"id": 518,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 500,
																		"src": "2701:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2687:23:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																		"typeString": "struct Staking.StakeReview storage ref"
																	}
																},
																"id": 520,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "realOwner",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 320,
																"src": "2687:33:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 521,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2724:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "2724:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2687:47:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74207265616c4f776e6572",
															"id": 524,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2736:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24",
																"typeString": "literal_string \"Not realOwner\""
															},
															"value": "Not realOwner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_65bf7e5ac3f00b13cd2aaf25d42053f58e96cb66bd726c717b1b6b7161940e24",
																"typeString": "literal_string \"Not realOwner\""
															}
														],
														"id": 516,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2679:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2679:73:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 526,
												"nodeType": "ExpressionStatement",
												"src": "2679:73:4"
											},
											{
												"assignments": [
													528
												],
												"declarations": [
													{
														"constant": false,
														"id": 528,
														"mutability": "mutable",
														"name": "amount",
														"nameLocation": "2771:6:4",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "2763:14:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 527,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2763:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"components": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 547,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 529,
																				"name": "block",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967292,
																				"src": "2782:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_block",
																					"typeString": "block"
																				}
																			},
																			"id": 530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "timestamp",
																			"nodeType": "MemberAccess",
																			"src": "2782:15:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 531,
																					"name": "s_stakeReview",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "2800:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																						"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																					}
																				},
																				"id": 533,
																				"indexExpression": {
																					"id": 532,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "2814:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2800:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																					"typeString": "struct Staking.StakeReview storage ref"
																				}
																			},
																			"id": 534,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "lastClaimTime",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 324,
																			"src": "2800:37:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2782:55:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 536,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2781:57:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 545,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"arguments": [
																				{
																					"id": 539,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "2873:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"expression": {
																					"id": 537,
																					"name": "parentNftFunctions",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 269,
																					"src": "2842:18:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_INFTGame_$258",
																						"typeString": "contract INFTGame"
																					}
																				},
																				"id": 538,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "getTrophies",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 257,
																				"src": "2842:30:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
																					"typeString": "function (uint256) external returns (uint256)"
																				}
																			},
																			"id": 540,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2842:40:4",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"expression": {
																				"baseExpression": {
																					"id": 541,
																					"name": "s_stakeReview",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 318,
																					"src": "2885:13:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																						"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																					}
																				},
																				"id": 543,
																				"indexExpression": {
																					"id": 542,
																					"name": "_tokenID",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 500,
																					"src": "2899:8:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2885:23:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																					"typeString": "struct Staking.StakeReview storage ref"
																				}
																			},
																			"id": 544,
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberName": "claimedTrophies",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 322,
																			"src": "2885:39:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "2842:82:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 546,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2841:84:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2781:144:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 548,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "2780:147:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2763:164:4"
											},
											{
												"assignments": [
													551
												],
												"declarations": [
													{
														"constant": false,
														"id": 551,
														"mutability": "mutable",
														"name": "currentTrophies",
														"nameLocation": "2947:15:4",
														"nodeType": "VariableDeclaration",
														"scope": 608,
														"src": "2939:23:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 550,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2939:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 556,
												"initialValue": {
													"arguments": [
														{
															"id": 554,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "2996:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 552,
															"name": "parentNftFunctions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 269,
															"src": "2965:18:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_INFTGame_$258",
																"typeString": "contract INFTGame"
															}
														},
														"id": 553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "getTrophies",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 257,
														"src": "2965:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256) external returns (uint256)"
														}
													},
													"id": 555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2965:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2939:66:4"
											},
											{
												"condition": {
													"arguments": [
														{
															"expression": {
																"id": 559,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3041:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3041:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 561,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 528,
															"src": "3053:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 557,
															"name": "parentToken",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 263,
															"src": "3020:11:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$117",
																"typeString": "contract IERC20"
															}
														},
														"id": 558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 84,
														"src": "3020:20:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3020:40:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 585,
												"nodeType": "IfStatement",
												"src": "3016:245:4",
												"trueBody": {
													"id": 584,
													"nodeType": "Block",
													"src": "3061:200:4",
													"statements": [
														{
															"expression": {
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 563,
																			"name": "s_stakeReview",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "3076:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																				"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																			}
																		},
																		"id": 565,
																		"indexExpression": {
																			"id": 564,
																			"name": "_tokenID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "3090:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3076:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																			"typeString": "struct Staking.StakeReview storage ref"
																		}
																	},
																	"id": 566,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "lastClaimTime",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 324,
																	"src": "3076:37:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 567,
																		"name": "block",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967292,
																		"src": "3116:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_block",
																			"typeString": "block"
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "timestamp",
																	"nodeType": "MemberAccess",
																	"src": "3116:15:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3076:55:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 570,
															"nodeType": "ExpressionStatement",
															"src": "3076:55:4"
														},
														{
															"expression": {
																"id": 582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"baseExpression": {
																			"id": 571,
																			"name": "s_stakeReview",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 318,
																			"src": "3147:13:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																				"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																			}
																		},
																		"id": 573,
																		"indexExpression": {
																			"id": 572,
																			"name": "_tokenID",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 500,
																			"src": "3161:8:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "3147:23:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																			"typeString": "struct Staking.StakeReview storage ref"
																		}
																	},
																	"id": 574,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberName": "claimedTrophies",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 322,
																	"src": "3147:39:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 580,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 575,
																				"name": "currentTrophies",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 551,
																				"src": "3191:15:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "-",
																			"rightExpression": {
																				"expression": {
																					"baseExpression": {
																						"id": 576,
																						"name": "s_stakeReview",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 318,
																						"src": "3209:13:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																							"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																						}
																					},
																					"id": 578,
																					"indexExpression": {
																						"id": 577,
																						"name": "_tokenID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 500,
																						"src": "3223:8:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3209:23:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																						"typeString": "struct Staking.StakeReview storage ref"
																					}
																				},
																				"id": 579,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "claimedTrophies",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 322,
																				"src": "3209:39:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3191:57:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 581,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3190:59:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3147:102:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 583,
															"nodeType": "ExpressionStatement",
															"src": "3147:102:4"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 591,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3302:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Staking_$610",
																		"typeString": "contract Staking"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Staking_$610",
																		"typeString": "contract Staking"
																	}
																],
																"id": 590,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3294:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 589,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3294:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 592,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3294:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 593,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3309:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3309:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 595,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 500,
															"src": "3321:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 586,
															"name": "parentNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 266,
															"src": "3271:9:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721_$233",
																"typeString": "contract IERC721"
															}
														},
														"id": 588,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 198,
														"src": "3271:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3271:59:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 597,
												"nodeType": "ExpressionStatement",
												"src": "3271:59:4"
											},
											{
												"expression": {
													"id": 606,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 598,
																"name": "s_stakeReview",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 318,
																"src": "3341:13:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_StakeReview_$325_storage_$",
																	"typeString": "mapping(uint256 => struct Staking.StakeReview storage ref)"
																}
															},
															"id": 600,
															"indexExpression": {
																"id": 599,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 500,
																"src": "3355:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3341:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_StakeReview_$325_storage",
																"typeString": "struct Staking.StakeReview storage ref"
															}
														},
														"id": 601,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "realOwner",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 320,
														"src": "3341:33:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 604,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "3385:1:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 603,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "3377:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 602,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "3377:7:4",
																"typeDescriptions": {}
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3377:10:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3341:46:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 607,
												"nodeType": "ExpressionStatement",
												"src": "3341:46:4"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "2557:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 501,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 500,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "2573:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 609,
												"src": "2565:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 499,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2565:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2564:18:4"
									},
									"returnParameters": {
										"id": 502,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2590:0:4"
									},
									"scope": 610,
									"src": "2548:847:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 611,
							"src": "341:3103:4",
							"usedErrors": []
						}
					],
					"src": "35:3409:4"
				},
				"id": 4
			}
		}
	}
}