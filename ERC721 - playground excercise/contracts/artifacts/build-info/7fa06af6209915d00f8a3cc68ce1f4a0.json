{
	"id": "7fa06af6209915d00f8a3cc68ce1f4a0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Missions.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\ninterface INFTGame {\r\n       function getTrophies(uint256) external returns (uint256);\r\n}\r\n\r\ncontract Staking is ReentrancyGuard {\r\n    IERC20 public parentToken;\r\n    IERC721 public parentNFT;\r\n    INFTGame public parentNftFunctions;\r\n    address public parentNFTAddress;\r\n    constructor(address _nftContract, address _tokenContract){\r\n        parentNFT = IERC721(_nftContract);\r\n        parentNftFunctions = INFTGame(_nftContract);\r\n        parentToken = IERC20(_tokenContract);\r\n        parentNFTAddress = _nftContract;\r\n        \r\n    }\r\n\r\n    mapping (uint256=>address) s_stakers;\r\n    mapping (uint256=>uint256) s_missionTimers;\r\n     \r\n    function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r\n        return (s_stakers[_tokenID], s_missionTimers[_tokenID]);\r\n    }\r\n \r\n    \r\n    function onERC721Received(address _operator, address _sender, uint256 _tokenID, bytes memory) public virtual returns (bytes4) {\r\n        \r\n\r\n        if (_operator == parentNFTAddress){\r\n        s_stakers[_tokenID] = _sender;\r\n        s_missionTimers[_tokenID] = block.timestamp + 5 days;\r\n        }\r\n        \r\n        return this.onERC721Received.selector;\r\n    }\r\n    \r\n\r\n    \r\n \r\n\r\n   \r\n \r\n\r\n    \r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Missions.sol": {
				"INFTGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getTrophies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTrophies(uint256)": "a0c4442d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTrophies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"INFTGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0xe1dacdc4adc9d752fd18cd44b1ea42c951c012ce62adc7f96dbf6fcabb952a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f9fcf7b9510dffa23766ead0180e9116a1e2ed6c3e15cf30c7c6fe6dbb826e0\",\"dweb:/ipfs/QmRwBFJNjDZLDk6aN75tSH1YLixss7w91cUfgG17SrSdwq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "getStakes",
							"outputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFTAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNftFunctions",
							"outputs": [
								{
									"internalType": "contract INFTGame",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Missions.sol\":341:1471  contract Staking is ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":614:626  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":594:603  parentNFT */\n  0x02\n  0x00\n    /* \"contracts/Missions.sol\":594:627  parentNFT = IERC721(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":668:680  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":638:656  parentNftFunctions */\n  0x03\n  0x00\n    /* \"contracts/Missions.sol\":638:681  parentNftFunctions = INFTGame(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":713:727  _tokenContract */\n  dup1\n    /* \"contracts/Missions.sol\":692:703  parentToken */\n  0x01\n  0x00\n    /* \"contracts/Missions.sol\":692:728  parentToken = IERC20(_tokenContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":758:770  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":739:755  parentNFTAddress */\n  0x04\n  0x00\n    /* \"contracts/Missions.sol\":739:770  parentNFTAddress = _nftContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  pop\n  pop\n    /* \"contracts/Missions.sol\":341:1471  contract Staking is ReentrancyGuard {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":260:379   */\ntag_15:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_18\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_19\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_22:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_24\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_25:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_17:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_13:\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_32:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Missions.sol\":341:1471  contract Staking is ReentrancyGuard {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Missions.sol\":341:1471  contract Staking is ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x472343b9\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x66bb863b\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x80a54001\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xfead3d6e\n      eq\n      tag_8\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Missions.sol\":1068:1431  function onERC721Received(address _operator, address _sender, uint256 _tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n    tag_3:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_14\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n    tag_4:\n      tag_15\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_16\n      swap2\n      swap1\n      tag_17\n      jump\t// in\n    tag_16:\n      tag_18\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      tag_19\n      swap3\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_5:\n      tag_21\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      tag_23\n      swap2\n      swap1\n      tag_24\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_6:\n      tag_25\n      tag_26\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_27\n      swap2\n      swap1\n      tag_28\n      jump\t// in\n    tag_27:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_7:\n      tag_29\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      tag_31\n      swap2\n      swap1\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_8:\n      tag_33\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      tag_35\n      swap2\n      swap1\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1068:1431  function onERC721Received(address _operator, address _sender, uint256 _tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n    tag_12:\n        /* \"contracts/Missions.sol\":1186:1192  bytes4 */\n      0x00\n        /* \"contracts/Missions.sol\":1234:1250  parentNFTAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1221:1250  _operator == parentNFTAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1221:1230  _operator */\n      dup6\n        /* \"contracts/Missions.sol\":1221:1250  _operator == parentNFTAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Missions.sol\":1217:1366  if (_operator == parentNFTAddress){\r... */\n      iszero\n      tag_38\n      jumpi\n        /* \"contracts/Missions.sol\":1284:1291  _sender */\n      dup4\n        /* \"contracts/Missions.sol\":1262:1271  s_stakers */\n      0x05\n        /* \"contracts/Missions.sol\":1262:1281  s_stakers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1272:1280  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1262:1281  s_stakers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Missions.sol\":1262:1291  s_stakers[_tokenID] = _sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1348:1354  5 days */\n      0x069780\n        /* \"contracts/Missions.sol\":1330:1345  block.timestamp */\n      timestamp\n        /* \"contracts/Missions.sol\":1330:1354  block.timestamp + 5 days */\n      tag_39\n      swap2\n      swap1\n      tag_40\n      jump\t// in\n    tag_39:\n        /* \"contracts/Missions.sol\":1302:1317  s_missionTimers */\n      0x06\n        /* \"contracts/Missions.sol\":1302:1327  s_missionTimers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1318:1326  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1302:1327  s_missionTimers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1302:1354  s_missionTimers[_tokenID] = block.timestamp + 5 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1217:1366  if (_operator == parentNFTAddress){\r... */\n    tag_38:\n        /* \"contracts/Missions.sol\":1393:1423  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/Missions.sol\":1386:1423  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":1068:1431  function onERC721Received(address _operator, address _sender, uint256 _tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n    tag_18:\n        /* \"contracts/Missions.sol\":953:964  address add */\n      0x00\n        /* \"contracts/Missions.sol\":966:978  uint256 time */\n      dup1\n        /* \"contracts/Missions.sol\":998:1007  s_stakers */\n      0x05\n        /* \"contracts/Missions.sol\":998:1017  s_stakers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1008:1016  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":998:1017  s_stakers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1019:1034  s_missionTimers */\n      0x06\n        /* \"contracts/Missions.sol\":1019:1044  s_missionTimers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1035:1043  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1019:1044  s_missionTimers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Missions.sol\":990:1045  return (s_stakers[_tokenID], s_missionTimers[_tokenID]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_22:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_26:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_30:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_34:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_43:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_45\n        /* \"#utility.yul\":125:173   */\n      tag_46\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":109:174   */\n      tag_48\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_49\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_50\n      tag_51\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":249:361   */\n    tag_49:\n        /* \"#utility.yul\":370:411   */\n      tag_52\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_53\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_54:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_56\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_57\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_58:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_60\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":652:774   */\n    tag_60:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_63\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_43\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_64:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_66\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_67\n      jump\t// in\n    tag_66:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2013   */\n    tag_11:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1181:1187   */\n      0x00\n        /* \"#utility.yul\":1189:1195   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      0x80\n        /* \"#utility.yul\":1226:1235   */\n      dup6\n        /* \"#utility.yul\":1217:1224   */\n      dup8\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1242   */\n      slt\n        /* \"#utility.yul\":1206:1326   */\n      iszero\n      tag_69\n      jumpi\n        /* \"#utility.yul\":1245:1324   */\n      tag_70\n      tag_71\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":1206:1326   */\n    tag_69:\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1390:1443   */\n      tag_72\n        /* \"#utility.yul\":1435:1442   */\n      dup8\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup9\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_54\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":1380:1443   */\n      swap5\n      pop\n        /* \"#utility.yul\":1336:1453   */\n      pop\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1518:1571   */\n      tag_73\n        /* \"#utility.yul\":1563:1570   */\n      dup8\n        /* \"#utility.yul\":1554:1560   */\n      dup3\n        /* \"#utility.yul\":1543:1552   */\n      dup9\n        /* \"#utility.yul\":1539:1561   */\n      add\n        /* \"#utility.yul\":1518:1571   */\n      tag_54\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":1508:1571   */\n      swap4\n      pop\n        /* \"#utility.yul\":1463:1581   */\n      pop\n        /* \"#utility.yul\":1620:1622   */\n      0x40\n        /* \"#utility.yul\":1646:1699   */\n      tag_74\n        /* \"#utility.yul\":1691:1698   */\n      dup8\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup9\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1646:1699   */\n      tag_64\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":1636:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1591:1709   */\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n        /* \"#utility.yul\":1807:1825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1799:1805   */\n      dup2\n        /* \"#utility.yul\":1796:1826   */\n      gt\n        /* \"#utility.yul\":1793:1910   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":1829:1908   */\n      tag_76\n      tag_77\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":1793:1910   */\n    tag_75:\n        /* \"#utility.yul\":1934:1996   */\n      tag_78\n        /* \"#utility.yul\":1988:1995   */\n      dup8\n        /* \"#utility.yul\":1979:1985   */\n      dup3\n        /* \"#utility.yul\":1968:1977   */\n      dup9\n        /* \"#utility.yul\":1964:1986   */\n      add\n        /* \"#utility.yul\":1934:1996   */\n      tag_58\n      jump\t// in\n    tag_78:\n        /* \"#utility.yul\":1924:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:2006   */\n      pop\n        /* \"#utility.yul\":1070:2013   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2348   */\n    tag_17:\n        /* \"#utility.yul\":2078:2084   */\n      0x00\n        /* \"#utility.yul\":2127:2129   */\n      0x20\n        /* \"#utility.yul\":2115:2124   */\n      dup3\n        /* \"#utility.yul\":2106:2113   */\n      dup5\n        /* \"#utility.yul\":2102:2125   */\n      sub\n        /* \"#utility.yul\":2098:2130   */\n      slt\n        /* \"#utility.yul\":2095:2214   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":2133:2212   */\n      tag_81\n      tag_71\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":2095:2214   */\n    tag_80:\n        /* \"#utility.yul\":2253:2254   */\n      0x00\n        /* \"#utility.yul\":2278:2331   */\n      tag_82\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2314:2320   */\n      dup3\n        /* \"#utility.yul\":2303:2312   */\n      dup6\n        /* \"#utility.yul\":2299:2321   */\n      add\n        /* \"#utility.yul\":2278:2331   */\n      tag_64\n      jump\t// in\n    tag_82:\n        /* \"#utility.yul\":2268:2331   */\n      swap2\n      pop\n        /* \"#utility.yul\":2224:2341   */\n      pop\n        /* \"#utility.yul\":2019:2348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2354:2472   */\n    tag_83:\n        /* \"#utility.yul\":2441:2465   */\n      tag_85\n        /* \"#utility.yul\":2459:2464   */\n      dup2\n        /* \"#utility.yul\":2441:2465   */\n      tag_86\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":2436:2439   */\n      dup3\n        /* \"#utility.yul\":2429:2466   */\n      mstore\n        /* \"#utility.yul\":2354:2472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2478:2593   */\n    tag_87:\n        /* \"#utility.yul\":2563:2586   */\n      tag_89\n        /* \"#utility.yul\":2580:2585   */\n      dup2\n        /* \"#utility.yul\":2563:2586   */\n      tag_90\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":2558:2561   */\n      dup3\n        /* \"#utility.yul\":2551:2587   */\n      mstore\n        /* \"#utility.yul\":2478:2593   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2599:2758   */\n    tag_91:\n        /* \"#utility.yul\":2700:2751   */\n      tag_93\n        /* \"#utility.yul\":2745:2750   */\n      dup2\n        /* \"#utility.yul\":2700:2751   */\n      tag_94\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2695:2698   */\n      dup3\n        /* \"#utility.yul\":2688:2752   */\n      mstore\n        /* \"#utility.yul\":2599:2758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2764:2925   */\n    tag_95:\n        /* \"#utility.yul\":2866:2918   */\n      tag_97\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2866:2918   */\n      tag_98\n      jump\t// in\n    tag_97:\n        /* \"#utility.yul\":2861:2864   */\n      dup3\n        /* \"#utility.yul\":2854:2919   */\n      mstore\n        /* \"#utility.yul\":2764:2925   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2931:3094   */\n    tag_99:\n        /* \"#utility.yul\":3034:3087   */\n      tag_101\n        /* \"#utility.yul\":3081:3086   */\n      dup2\n        /* \"#utility.yul\":3034:3087   */\n      tag_102\n      jump\t// in\n    tag_101:\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3022:3088   */\n      mstore\n        /* \"#utility.yul\":2931:3094   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3100:3218   */\n    tag_103:\n        /* \"#utility.yul\":3187:3211   */\n      tag_105\n        /* \"#utility.yul\":3205:3210   */\n      dup2\n        /* \"#utility.yul\":3187:3211   */\n      tag_106\n      jump\t// in\n    tag_105:\n        /* \"#utility.yul\":3182:3185   */\n      dup3\n        /* \"#utility.yul\":3175:3212   */\n      mstore\n        /* \"#utility.yul\":3100:3218   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3224:3446   */\n    tag_24:\n        /* \"#utility.yul\":3317:3321   */\n      0x00\n        /* \"#utility.yul\":3355:3357   */\n      0x20\n        /* \"#utility.yul\":3344:3353   */\n      dup3\n        /* \"#utility.yul\":3340:3358   */\n      add\n        /* \"#utility.yul\":3332:3358   */\n      swap1\n      pop\n        /* \"#utility.yul\":3368:3439   */\n      tag_108\n        /* \"#utility.yul\":3436:3437   */\n      0x00\n        /* \"#utility.yul\":3425:3434   */\n      dup4\n        /* \"#utility.yul\":3421:3438   */\n      add\n        /* \"#utility.yul\":3412:3418   */\n      dup5\n        /* \"#utility.yul\":3368:3439   */\n      tag_83\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":3224:3446   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3452:3784   */\n    tag_20:\n        /* \"#utility.yul\":3573:3577   */\n      0x00\n        /* \"#utility.yul\":3611:3613   */\n      0x40\n        /* \"#utility.yul\":3600:3609   */\n      dup3\n        /* \"#utility.yul\":3596:3614   */\n      add\n        /* \"#utility.yul\":3588:3614   */\n      swap1\n      pop\n        /* \"#utility.yul\":3624:3695   */\n      tag_110\n        /* \"#utility.yul\":3692:3693   */\n      0x00\n        /* \"#utility.yul\":3681:3690   */\n      dup4\n        /* \"#utility.yul\":3677:3694   */\n      add\n        /* \"#utility.yul\":3668:3674   */\n      dup6\n        /* \"#utility.yul\":3624:3695   */\n      tag_83\n      jump\t// in\n    tag_110:\n        /* \"#utility.yul\":3705:3777   */\n      tag_111\n        /* \"#utility.yul\":3773:3775   */\n      0x20\n        /* \"#utility.yul\":3762:3771   */\n      dup4\n        /* \"#utility.yul\":3758:3776   */\n      add\n        /* \"#utility.yul\":3749:3755   */\n      dup5\n        /* \"#utility.yul\":3705:3777   */\n      tag_103\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":3452:3784   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3790:4008   */\n    tag_14:\n        /* \"#utility.yul\":3881:3885   */\n      0x00\n        /* \"#utility.yul\":3919:3921   */\n      0x20\n        /* \"#utility.yul\":3908:3917   */\n      dup3\n        /* \"#utility.yul\":3904:3922   */\n      add\n        /* \"#utility.yul\":3896:3922   */\n      swap1\n      pop\n        /* \"#utility.yul\":3932:4001   */\n      tag_113\n        /* \"#utility.yul\":3998:3999   */\n      0x00\n        /* \"#utility.yul\":3987:3996   */\n      dup4\n        /* \"#utility.yul\":3983:4000   */\n      add\n        /* \"#utility.yul\":3974:3980   */\n      dup5\n        /* \"#utility.yul\":3932:4001   */\n      tag_87\n      jump\t// in\n    tag_113:\n        /* \"#utility.yul\":3790:4008   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4014:4264   */\n    tag_28:\n        /* \"#utility.yul\":4121:4125   */\n      0x00\n        /* \"#utility.yul\":4159:4161   */\n      0x20\n        /* \"#utility.yul\":4148:4157   */\n      dup3\n        /* \"#utility.yul\":4144:4162   */\n      add\n        /* \"#utility.yul\":4136:4162   */\n      swap1\n      pop\n        /* \"#utility.yul\":4172:4257   */\n      tag_115\n        /* \"#utility.yul\":4254:4255   */\n      0x00\n        /* \"#utility.yul\":4243:4252   */\n      dup4\n        /* \"#utility.yul\":4239:4256   */\n      add\n        /* \"#utility.yul\":4230:4236   */\n      dup5\n        /* \"#utility.yul\":4172:4257   */\n      tag_91\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":4014:4264   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4270:4522   */\n    tag_32:\n        /* \"#utility.yul\":4378:4382   */\n      0x00\n        /* \"#utility.yul\":4416:4418   */\n      0x20\n        /* \"#utility.yul\":4405:4414   */\n      dup3\n        /* \"#utility.yul\":4401:4419   */\n      add\n        /* \"#utility.yul\":4393:4419   */\n      swap1\n      pop\n        /* \"#utility.yul\":4429:4515   */\n      tag_117\n        /* \"#utility.yul\":4512:4513   */\n      0x00\n        /* \"#utility.yul\":4501:4510   */\n      dup4\n        /* \"#utility.yul\":4497:4514   */\n      add\n        /* \"#utility.yul\":4488:4494   */\n      dup5\n        /* \"#utility.yul\":4429:4515   */\n      tag_95\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":4270:4522   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4528:4782   */\n    tag_36:\n        /* \"#utility.yul\":4637:4641   */\n      0x00\n        /* \"#utility.yul\":4675:4677   */\n      0x20\n        /* \"#utility.yul\":4664:4673   */\n      dup3\n        /* \"#utility.yul\":4660:4678   */\n      add\n        /* \"#utility.yul\":4652:4678   */\n      swap1\n      pop\n        /* \"#utility.yul\":4688:4775   */\n      tag_119\n        /* \"#utility.yul\":4772:4773   */\n      0x00\n        /* \"#utility.yul\":4761:4770   */\n      dup4\n        /* \"#utility.yul\":4757:4774   */\n      add\n        /* \"#utility.yul\":4748:4754   */\n      dup5\n        /* \"#utility.yul\":4688:4775   */\n      tag_99\n      jump\t// in\n    tag_119:\n        /* \"#utility.yul\":4528:4782   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4788:4917   */\n    tag_48:\n        /* \"#utility.yul\":4822:4828   */\n      0x00\n        /* \"#utility.yul\":4849:4869   */\n      tag_121\n      tag_122\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":4839:4869   */\n      swap1\n      pop\n        /* \"#utility.yul\":4878:4911   */\n      tag_123\n        /* \"#utility.yul\":4906:4910   */\n      dup3\n        /* \"#utility.yul\":4898:4904   */\n      dup3\n        /* \"#utility.yul\":4878:4911   */\n      tag_124\n      jump\t// in\n    tag_123:\n        /* \"#utility.yul\":4788:4917   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4923:4998   */\n    tag_122:\n        /* \"#utility.yul\":4956:4962   */\n      0x00\n        /* \"#utility.yul\":4989:4991   */\n      0x40\n        /* \"#utility.yul\":4983:4992   */\n      mload\n        /* \"#utility.yul\":4973:4992   */\n      swap1\n      pop\n        /* \"#utility.yul\":4923:4998   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":5004:5311   */\n    tag_47:\n        /* \"#utility.yul\":5065:5069   */\n      0x00\n        /* \"#utility.yul\":5155:5173   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5147:5153   */\n      dup3\n        /* \"#utility.yul\":5144:5174   */\n      gt\n        /* \"#utility.yul\":5141:5197   */\n      iszero\n      tag_127\n      jumpi\n        /* \"#utility.yul\":5177:5195   */\n      tag_128\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":5141:5197   */\n    tag_127:\n        /* \"#utility.yul\":5215:5244   */\n      tag_130\n        /* \"#utility.yul\":5237:5243   */\n      dup3\n        /* \"#utility.yul\":5215:5244   */\n      tag_131\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":5207:5244   */\n      swap1\n      pop\n        /* \"#utility.yul\":5299:5303   */\n      0x20\n        /* \"#utility.yul\":5293:5297   */\n      dup2\n        /* \"#utility.yul\":5289:5304   */\n      add\n        /* \"#utility.yul\":5281:5304   */\n      swap1\n      pop\n        /* \"#utility.yul\":5004:5311   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5317:5622   */\n    tag_40:\n        /* \"#utility.yul\":5357:5360   */\n      0x00\n        /* \"#utility.yul\":5376:5396   */\n      tag_133\n        /* \"#utility.yul\":5394:5395   */\n      dup3\n        /* \"#utility.yul\":5376:5396   */\n      tag_106\n      jump\t// in\n    tag_133:\n        /* \"#utility.yul\":5371:5396   */\n      swap2\n      pop\n        /* \"#utility.yul\":5410:5430   */\n      tag_134\n        /* \"#utility.yul\":5428:5429   */\n      dup4\n        /* \"#utility.yul\":5410:5430   */\n      tag_106\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":5405:5430   */\n      swap3\n      pop\n        /* \"#utility.yul\":5564:5565   */\n      dup3\n        /* \"#utility.yul\":5496:5562   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5492:5566   */\n      sub\n        /* \"#utility.yul\":5489:5490   */\n      dup3\n        /* \"#utility.yul\":5486:5567   */\n      gt\n        /* \"#utility.yul\":5483:5590   */\n      iszero\n      tag_135\n      jumpi\n        /* \"#utility.yul\":5570:5588   */\n      tag_136\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":5483:5590   */\n    tag_135:\n        /* \"#utility.yul\":5614:5615   */\n      dup3\n        /* \"#utility.yul\":5611:5612   */\n      dup3\n        /* \"#utility.yul\":5607:5616   */\n      add\n        /* \"#utility.yul\":5600:5616   */\n      swap1\n      pop\n        /* \"#utility.yul\":5317:5622   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5628:5724   */\n    tag_86:\n        /* \"#utility.yul\":5665:5672   */\n      0x00\n        /* \"#utility.yul\":5694:5718   */\n      tag_139\n        /* \"#utility.yul\":5712:5717   */\n      dup3\n        /* \"#utility.yul\":5694:5718   */\n      tag_140\n      jump\t// in\n    tag_139:\n        /* \"#utility.yul\":5683:5718   */\n      swap1\n      pop\n        /* \"#utility.yul\":5628:5724   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5730:5879   */\n    tag_90:\n        /* \"#utility.yul\":5766:5773   */\n      0x00\n        /* \"#utility.yul\":5806:5872   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":5799:5804   */\n      dup3\n        /* \"#utility.yul\":5795:5873   */\n      and\n        /* \"#utility.yul\":5784:5873   */\n      swap1\n      pop\n        /* \"#utility.yul\":5730:5879   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5885:6011   */\n    tag_140:\n        /* \"#utility.yul\":5922:5929   */\n      0x00\n        /* \"#utility.yul\":5962:6004   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":5955:5960   */\n      dup3\n        /* \"#utility.yul\":5951:6005   */\n      and\n        /* \"#utility.yul\":5940:6005   */\n      swap1\n      pop\n        /* \"#utility.yul\":5885:6011   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6017:6094   */\n    tag_106:\n        /* \"#utility.yul\":6054:6061   */\n      0x00\n        /* \"#utility.yul\":6083:6088   */\n      dup2\n        /* \"#utility.yul\":6072:6088   */\n      swap1\n      pop\n        /* \"#utility.yul\":6017:6094   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6100:6240   */\n    tag_94:\n        /* \"#utility.yul\":6164:6173   */\n      0x00\n        /* \"#utility.yul\":6197:6234   */\n      tag_145\n        /* \"#utility.yul\":6228:6233   */\n      dup3\n        /* \"#utility.yul\":6197:6234   */\n      tag_146\n      jump\t// in\n    tag_145:\n        /* \"#utility.yul\":6184:6234   */\n      swap1\n      pop\n        /* \"#utility.yul\":6100:6240   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6246:6387   */\n    tag_98:\n        /* \"#utility.yul\":6311:6320   */\n      0x00\n        /* \"#utility.yul\":6344:6381   */\n      tag_148\n        /* \"#utility.yul\":6375:6380   */\n      dup3\n        /* \"#utility.yul\":6344:6381   */\n      tag_146\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":6331:6381   */\n      swap1\n      pop\n        /* \"#utility.yul\":6246:6387   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6393:6535   */\n    tag_102:\n        /* \"#utility.yul\":6459:6468   */\n      0x00\n        /* \"#utility.yul\":6492:6529   */\n      tag_150\n        /* \"#utility.yul\":6523:6528   */\n      dup3\n        /* \"#utility.yul\":6492:6529   */\n      tag_146\n      jump\t// in\n    tag_150:\n        /* \"#utility.yul\":6479:6529   */\n      swap1\n      pop\n        /* \"#utility.yul\":6393:6535   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6541:6667   */\n    tag_146:\n        /* \"#utility.yul\":6591:6600   */\n      0x00\n        /* \"#utility.yul\":6624:6661   */\n      tag_152\n        /* \"#utility.yul\":6655:6660   */\n      dup3\n        /* \"#utility.yul\":6624:6661   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":6611:6661   */\n      swap1\n      pop\n        /* \"#utility.yul\":6541:6667   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6673:6786   */\n    tag_153:\n        /* \"#utility.yul\":6723:6732   */\n      0x00\n        /* \"#utility.yul\":6756:6780   */\n      tag_155\n        /* \"#utility.yul\":6774:6779   */\n      dup3\n        /* \"#utility.yul\":6756:6780   */\n      tag_140\n      jump\t// in\n    tag_155:\n        /* \"#utility.yul\":6743:6780   */\n      swap1\n      pop\n        /* \"#utility.yul\":6673:6786   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6792:6946   */\n    tag_53:\n        /* \"#utility.yul\":6876:6882   */\n      dup3\n        /* \"#utility.yul\":6871:6874   */\n      dup2\n        /* \"#utility.yul\":6866:6869   */\n      dup4\n        /* \"#utility.yul\":6853:6883   */\n      calldatacopy\n        /* \"#utility.yul\":6938:6939   */\n      0x00\n        /* \"#utility.yul\":6929:6935   */\n      dup4\n        /* \"#utility.yul\":6924:6927   */\n      dup4\n        /* \"#utility.yul\":6920:6936   */\n      add\n        /* \"#utility.yul\":6913:6940   */\n      mstore\n        /* \"#utility.yul\":6792:6946   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6952:7233   */\n    tag_124:\n        /* \"#utility.yul\":7035:7062   */\n      tag_158\n        /* \"#utility.yul\":7057:7061   */\n      dup3\n        /* \"#utility.yul\":7035:7062   */\n      tag_131\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":7027:7033   */\n      dup2\n        /* \"#utility.yul\":7023:7063   */\n      add\n        /* \"#utility.yul\":7165:7171   */\n      dup2\n        /* \"#utility.yul\":7153:7163   */\n      dup2\n        /* \"#utility.yul\":7150:7172   */\n      lt\n        /* \"#utility.yul\":7129:7147   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":7117:7127   */\n      dup3\n        /* \"#utility.yul\":7114:7148   */\n      gt\n        /* \"#utility.yul\":7111:7173   */\n      or\n        /* \"#utility.yul\":7108:7196   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":7176:7194   */\n      tag_160\n      tag_129\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":7108:7196   */\n    tag_159:\n        /* \"#utility.yul\":7216:7226   */\n      dup1\n        /* \"#utility.yul\":7212:7214   */\n      0x40\n        /* \"#utility.yul\":7205:7227   */\n      mstore\n        /* \"#utility.yul\":6995:7233   */\n      pop\n        /* \"#utility.yul\":6952:7233   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7239:7419   */\n    tag_137:\n        /* \"#utility.yul\":7287:7364   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7284:7285   */\n      0x00\n        /* \"#utility.yul\":7277:7365   */\n      mstore\n        /* \"#utility.yul\":7384:7388   */\n      0x11\n        /* \"#utility.yul\":7381:7382   */\n      0x04\n        /* \"#utility.yul\":7374:7389   */\n      mstore\n        /* \"#utility.yul\":7408:7412   */\n      0x24\n        /* \"#utility.yul\":7405:7406   */\n      0x00\n        /* \"#utility.yul\":7398:7413   */\n      revert\n        /* \"#utility.yul\":7425:7605   */\n    tag_129:\n        /* \"#utility.yul\":7473:7550   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7470:7471   */\n      0x00\n        /* \"#utility.yul\":7463:7551   */\n      mstore\n        /* \"#utility.yul\":7570:7574   */\n      0x41\n        /* \"#utility.yul\":7567:7568   */\n      0x04\n        /* \"#utility.yul\":7560:7575   */\n      mstore\n        /* \"#utility.yul\":7594:7598   */\n      0x24\n        /* \"#utility.yul\":7591:7592   */\n      0x00\n        /* \"#utility.yul\":7584:7599   */\n      revert\n        /* \"#utility.yul\":7611:7728   */\n    tag_62:\n        /* \"#utility.yul\":7720:7721   */\n      0x00\n        /* \"#utility.yul\":7717:7718   */\n      dup1\n        /* \"#utility.yul\":7710:7722   */\n      revert\n        /* \"#utility.yul\":7734:7851   */\n    tag_51:\n        /* \"#utility.yul\":7843:7844   */\n      0x00\n        /* \"#utility.yul\":7840:7841   */\n      dup1\n        /* \"#utility.yul\":7833:7845   */\n      revert\n        /* \"#utility.yul\":7857:7974   */\n    tag_77:\n        /* \"#utility.yul\":7966:7967   */\n      0x00\n        /* \"#utility.yul\":7963:7964   */\n      dup1\n        /* \"#utility.yul\":7956:7968   */\n      revert\n        /* \"#utility.yul\":7980:8097   */\n    tag_71:\n        /* \"#utility.yul\":8089:8090   */\n      0x00\n        /* \"#utility.yul\":8086:8087   */\n      dup1\n        /* \"#utility.yul\":8079:8091   */\n      revert\n        /* \"#utility.yul\":8103:8205   */\n    tag_131:\n        /* \"#utility.yul\":8144:8150   */\n      0x00\n        /* \"#utility.yul\":8195:8197   */\n      0x1f\n        /* \"#utility.yul\":8191:8198   */\n      not\n        /* \"#utility.yul\":8186:8188   */\n      0x1f\n        /* \"#utility.yul\":8179:8184   */\n      dup4\n        /* \"#utility.yul\":8175:8189   */\n      add\n        /* \"#utility.yul\":8171:8199   */\n      and\n        /* \"#utility.yul\":8161:8199   */\n      swap1\n      pop\n        /* \"#utility.yul\":8103:8205   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8211:8333   */\n    tag_57:\n        /* \"#utility.yul\":8284:8308   */\n      tag_169\n        /* \"#utility.yul\":8302:8307   */\n      dup2\n        /* \"#utility.yul\":8284:8308   */\n      tag_86\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":8277:8282   */\n      dup2\n        /* \"#utility.yul\":8274:8309   */\n      eq\n        /* \"#utility.yul\":8264:8327   */\n      tag_170\n      jumpi\n        /* \"#utility.yul\":8323:8324   */\n      0x00\n        /* \"#utility.yul\":8320:8321   */\n      dup1\n        /* \"#utility.yul\":8313:8325   */\n      revert\n        /* \"#utility.yul\":8264:8327   */\n    tag_170:\n        /* \"#utility.yul\":8211:8333   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8339:8461   */\n    tag_67:\n        /* \"#utility.yul\":8412:8436   */\n      tag_172\n        /* \"#utility.yul\":8430:8435   */\n      dup2\n        /* \"#utility.yul\":8412:8436   */\n      tag_106\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":8405:8410   */\n      dup2\n        /* \"#utility.yul\":8402:8437   */\n      eq\n        /* \"#utility.yul\":8392:8455   */\n      tag_173\n      jumpi\n        /* \"#utility.yul\":8451:8452   */\n      0x00\n        /* \"#utility.yul\":8448:8449   */\n      dup1\n        /* \"#utility.yul\":8441:8453   */\n      revert\n        /* \"#utility.yul\":8392:8455   */\n    tag_173:\n        /* \"#utility.yul\":8339:8461   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f605a8e7f217c85bfda849e18a23129a15619659da000b5cc7b2274922c7edbf64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:5"
															},
															"nodeType": "YulIf",
															"src": "260:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:5",
														"type": ""
													}
												],
												"src": "156:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:5",
														"type": ""
													}
												],
												"src": "669:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:5",
														"type": ""
													}
												],
												"src": "750:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:5",
														"type": ""
													}
												],
												"src": "852:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:5"
															},
															"nodeType": "YulIf",
															"src": "1283:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:5",
														"type": ""
													}
												],
												"src": "1230:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506040516109ef3803806109ef8339818101604052810190610032919061015a565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e8565b600081519050610154816101d1565b92915050565b60008060408385031215610171576101706101cc565b5b600061017f85828601610145565b925050602061019085828601610145565b9150509250929050565b60006101a5826101ac565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101da8161019a565b81146101e557600080fd5b50565b6107f8806101f76000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c8063150b7a0214610067578063472343b91461009757806366bb863b146100c857806380a54001146100e6578063b8e33fb214610104578063fead3d6e14610122575b600080fd5b610081600480360381019061007c91906103a9565b610140565b60405161008e91906104f7565b60405180910390f35b6100b160048036038101906100ac919061042c565b610223565b6040516100bf9291906104ce565b60405180910390f35b6100d0610277565b6040516100dd91906104b3565b60405180910390f35b6100ee61029d565b6040516100fb9190610512565b60405180910390f35b61010c6102c3565b604051610119919061052d565b60405180910390f35b61012a6102e9565b6040516101379190610548565b60405180910390f35b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561021157836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062069780426101f991906105b9565b60066000858152602001908152602001600020819055505b63150b7a0260e01b9050949350505050565b6000806005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660008581526020019081526020016000205491509150915091565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061032261031d84610588565b610563565b90508281526020810184848401111561033e5761033d610774565b5b6103498482856106d1565b509392505050565b60008135905061036081610794565b92915050565b600082601f83011261037b5761037a61076f565b5b813561038b84826020860161030f565b91505092915050565b6000813590506103a3816107ab565b92915050565b600080600080608085870312156103c3576103c261077e565b5b60006103d187828801610351565b94505060206103e287828801610351565b93505060406103f387828801610394565b925050606085013567ffffffffffffffff81111561041457610413610779565b5b61042087828801610366565b91505092959194509250565b6000602082840312156104425761044161077e565b5b600061045084828501610394565b91505092915050565b6104628161060f565b82525050565b61047181610621565b82525050565b61048081610677565b82525050565b61048f81610689565b82525050565b61049e8161069b565b82525050565b6104ad8161066d565b82525050565b60006020820190506104c86000830184610459565b92915050565b60006040820190506104e36000830185610459565b6104f060208301846104a4565b9392505050565b600060208201905061050c6000830184610468565b92915050565b60006020820190506105276000830184610477565b92915050565b60006020820190506105426000830184610486565b92915050565b600060208201905061055d6000830184610495565b92915050565b600061056d61057e565b905061057982826106e0565b919050565b6000604051905090565b600067ffffffffffffffff8211156105a3576105a2610740565b5b6105ac82610783565b9050602081019050919050565b60006105c48261066d565b91506105cf8361066d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561060457610603610711565b5b828201905092915050565b600061061a8261064d565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610682826106ad565b9050919050565b6000610694826106ad565b9050919050565b60006106a6826106ad565b9050919050565b60006106b8826106bf565b9050919050565b60006106ca8261064d565b9050919050565b82818337600083830152505050565b6106e982610783565b810181811067ffffffffffffffff8211171561070857610707610740565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61079d8161060f565b81146107a857600080fd5b50565b6107b48161066d565b81146107bf57600080fd5b5056fea2646970667358221220f605a8e7f217c85bfda849e18a23129a15619659da000b5cc7b2274922c7edbf64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x9EF CODESIZE SUB DUP1 PUSH2 0x9EF DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x154 DUP2 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x1CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F DUP6 DUP3 DUP7 ADD PUSH2 0x145 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x190 DUP6 DUP3 DUP7 ADD PUSH2 0x145 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5 DUP3 PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x19A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7F8 DUP1 PUSH2 0x1F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x472343B9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP3 SWAP2 SWAP1 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x211 JUMPI DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x69780 TIMESTAMP PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x322 PUSH2 0x31D DUP5 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x774 JUMP JUMPDEST JUMPDEST PUSH2 0x349 DUP5 DUP3 DUP6 PUSH2 0x6D1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x360 DUP2 PUSH2 0x794 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x76F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x30F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A3 DUP2 PUSH2 0x7AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C2 PUSH2 0x77E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D1 DUP8 DUP3 DUP9 ADD PUSH2 0x351 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3E2 DUP8 DUP3 DUP9 ADD PUSH2 0x351 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3F3 DUP8 DUP3 DUP9 ADD PUSH2 0x394 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x414 JUMPI PUSH2 0x413 PUSH2 0x779 JUMP JUMPDEST JUMPDEST PUSH2 0x420 DUP8 DUP3 DUP9 ADD PUSH2 0x366 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x442 JUMPI PUSH2 0x441 PUSH2 0x77E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x450 DUP5 DUP3 DUP6 ADD PUSH2 0x394 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x462 DUP2 PUSH2 0x60F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x621 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x480 DUP2 PUSH2 0x677 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x48F DUP2 PUSH2 0x689 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x49E DUP2 PUSH2 0x69B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4AD DUP2 PUSH2 0x66D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x459 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x4F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x50C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x527 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x542 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x486 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x55D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56D PUSH2 0x57E JUMP JUMPDEST SWAP1 POP PUSH2 0x579 DUP3 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5A3 JUMPI PUSH2 0x5A2 PUSH2 0x740 JUMP JUMPDEST JUMPDEST PUSH2 0x5AC DUP3 PUSH2 0x783 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C4 DUP3 PUSH2 0x66D JUMP JUMPDEST SWAP2 POP PUSH2 0x5CF DUP4 PUSH2 0x66D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x604 JUMPI PUSH2 0x603 PUSH2 0x711 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A DUP3 PUSH2 0x64D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 DUP3 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 DUP3 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A6 DUP3 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B8 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CA DUP3 PUSH2 0x64D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x6E9 DUP3 PUSH2 0x783 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x708 JUMPI PUSH2 0x707 PUSH2 0x740 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79D DUP2 PUSH2 0x60F JUMP JUMPDEST DUP2 EQ PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7B4 DUP2 PUSH2 0x66D JUMP JUMPDEST DUP2 EQ PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 SDIV 0xA8 0xE7 CALLCODE OR 0xC8 JUMPDEST REVERT 0xA8 0x49 0xE1 DUP11 0x23 SLT SWAP11 ISZERO PUSH2 0x9659 0xDA STOP SIGNEXTEND 0x5C 0xC7 0xB2 0x27 0x49 0x22 0xC7 0xED 0xBF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:1130:4:-:0;;;526:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;614:12:4;594:9;;:33;;;;;;;;;;;;;;;;;;668:12;638:18;;:43;;;;;;;;;;;;;;;;;;713:14;692:11;;:36;;;;;;;;;;;;;;;;;;758:12;739:16;;:31;;;;;;;;;;;;;;;;;;526:262;;341:1130;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;341:1130:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getStakes_327": {
									"entryPoint": 547,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@onERC721Received_365": {
									"entryPoint": 320,
									"id": 365,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@parentNFTAddress_271": {
									"entryPoint": 631,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNFT_266": {
									"entryPoint": 707,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNftFunctions_269": {
									"entryPoint": 745,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentToken_263": {
									"entryPoint": 669,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 783,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 849,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 870,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 916,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 937,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1113,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1128,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 1143,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack": {
									"entryPoint": 1158,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack": {
									"entryPoint": 1173,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1188,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1203,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1230,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 1298,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed": {
									"entryPoint": 1325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed": {
									"entryPoint": 1352,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1379,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1416,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1465,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1551,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1569,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 1613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 1645,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 1655,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$233_to_t_address": {
									"entryPoint": 1673,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTGame_$258_to_t_address": {
									"entryPoint": 1691,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 1709,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 1727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 1745,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 1760,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 1809,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 1856,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 1903,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 1908,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 1913,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 1918,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 1923,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_revert_t_address": {
									"entryPoint": 1940,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 1963,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8464:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:5"
															},
															"nodeType": "YulIf",
															"src": "249:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:5",
														"type": ""
													}
												],
												"src": "7:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"src": "423:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:5"
															},
															"nodeType": "YulIf",
															"src": "652:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:5",
														"type": ""
													}
												],
												"src": "581:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:5",
														"type": ""
													}
												],
												"src": "925:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:817:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1245:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:33:5"
															},
															"nodeType": "YulIf",
															"src": "1206:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1336:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1351:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1355:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1463:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1478:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1482:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1508:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1518:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1636:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1646:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1719:287:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1765:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1776:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1748:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1827:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1829:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1829:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1829:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1793:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1934:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1153:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1165:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1173:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1181:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1189:6:5",
														"type": ""
													}
												],
												"src": "1070:943:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2085:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2131:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2133:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2106:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2115:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2102:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2127:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:32:5"
															},
															"nodeType": "YulIf",
															"src": "2095:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2224:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2239:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2243:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2268:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2303:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2314:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2299:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2299:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2278:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2278:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2268:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2055:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2066:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2078:6:5",
														"type": ""
													}
												],
												"src": "2019:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2419:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2436:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2459:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2441:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2429:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2407:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2414:3:5",
														"type": ""
													}
												],
												"src": "2354:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2541:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2558:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2580:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2563:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2563:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2551:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2529:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2536:3:5",
														"type": ""
													}
												],
												"src": "2478:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2678:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2695:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2745:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2700:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2688:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2688:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2666:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2673:3:5",
														"type": ""
													}
												],
												"src": "2599:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2844:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2861:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$233_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2866:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2854:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2854:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2832:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2839:3:5",
														"type": ""
													}
												],
												"src": "2764:161:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3012:82:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3081:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTGame_$258_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3034:46:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3034:53:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:66:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3000:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3007:3:5",
														"type": ""
													}
												],
												"src": "2931:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3165:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3182:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3205:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3187:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3187:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3175:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3175:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3175:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3153:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3160:3:5",
														"type": ""
													}
												],
												"src": "3100:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3322:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3332:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3344:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3355:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3340:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3340:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3332:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3412:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3425:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3436:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3421:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3421:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3368:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3368:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3368:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3294:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3306:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3317:4:5",
														"type": ""
													}
												],
												"src": "3224:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3578:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3588:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3600:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3611:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3596:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3596:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3588:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3668:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3681:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3692:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3677:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3677:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3624:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3624:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3624:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "3749:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3762:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3773:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3758:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3758:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3705:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3705:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3705:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3542:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3554:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3562:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3573:4:5",
														"type": ""
													}
												],
												"src": "3452:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3886:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3896:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3908:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3919:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3904:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3904:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3896:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3974:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3987:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3998:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3983:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3983:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3932:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3932:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3932:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3858:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3870:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3881:4:5",
														"type": ""
													}
												],
												"src": "3790:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4126:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4136:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4148:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4159:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4144:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4136:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4230:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4243:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4254:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4239:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4239:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4172:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4172:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4172:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4098:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4110:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4121:4:5",
														"type": ""
													}
												],
												"src": "4014:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4383:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4393:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4405:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4416:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4401:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4401:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4393:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4488:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4501:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4512:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4497:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4497:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4429:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4429:86:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4429:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4355:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4367:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4378:4:5",
														"type": ""
													}
												],
												"src": "4270:252:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4642:140:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4652:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4664:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4675:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4660:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4660:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4652:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4748:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4761:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4772:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4757:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4757:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4688:59:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4688:87:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4688:87:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4614:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4626:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4637:4:5",
														"type": ""
													}
												],
												"src": "4528:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4829:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4839:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "4849:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4849:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4839:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "4898:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "4906:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "4878:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4878:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4878:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "4813:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4822:6:5",
														"type": ""
													}
												],
												"src": "4788:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4963:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4973:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4989:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "4983:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4983:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "4973:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "4956:6:5",
														"type": ""
													}
												],
												"src": "4923:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5070:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5175:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "5177:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5177:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5177:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5147:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5155:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5144:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5144:30:5"
															},
															"nodeType": "YulIf",
															"src": "5141:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5207:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5237:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "5215:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5215:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5207:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5281:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "5293:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5299:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5289:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5289:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "5281:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5054:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "5065:4:5",
														"type": ""
													}
												],
												"src": "5004:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5361:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5371:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5394:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5376:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5376:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "5371:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5405:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5428:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "5410:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5410:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "5405:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "5568:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "5570:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "5570:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "5570:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5489:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5496:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "5564:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5492:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5492:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "5486:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5486:81:5"
															},
															"nodeType": "YulIf",
															"src": "5483:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5600:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "5611:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "5614:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5607:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5607:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "5600:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "5348:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "5351:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "5357:3:5",
														"type": ""
													}
												],
												"src": "5317:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5673:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5683:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5712:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "5694:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5694:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5683:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5655:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5665:7:5",
														"type": ""
													}
												],
												"src": "5628:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5774:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5784:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5799:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5806:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5795:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5795:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5784:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5756:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5766:7:5",
														"type": ""
													}
												],
												"src": "5730:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5930:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5940:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5955:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "5951:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5951:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "5940:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5912:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "5922:7:5",
														"type": ""
													}
												],
												"src": "5885:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6062:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6072:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6083:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6072:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6044:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6054:7:5",
														"type": ""
													}
												],
												"src": "6017:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6174:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6184:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6228:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6197:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6197:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6184:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6154:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6164:9:5",
														"type": ""
													}
												],
												"src": "6100:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6321:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6331:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6375:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6344:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6331:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$233_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6301:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6311:9:5",
														"type": ""
													}
												],
												"src": "6246:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6469:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6479:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6523:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "6492:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6492:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6479:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTGame_$258_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6449:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6459:9:5",
														"type": ""
													}
												],
												"src": "6393:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6601:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6611:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6655:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6624:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6624:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6611:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6581:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6591:9:5",
														"type": ""
													}
												],
												"src": "6541:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6733:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6743:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6774:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6756:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6756:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "6743:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6713:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "6723:9:5",
														"type": ""
													}
												],
												"src": "6673:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6843:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "6866:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "6871:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6876:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "6853:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6853:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6853:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "6924:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "6929:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6920:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6920:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6938:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6913:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6913:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6913:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "6825:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "6830:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6835:6:5",
														"type": ""
													}
												],
												"src": "6792:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6995:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "7005:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "7027:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "7057:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "7035:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7035:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7023:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7023:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "7009:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "7174:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "7176:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "7176:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "7176:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7117:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7129:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "7114:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7114:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "7153:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7165:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "7150:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7150:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "7111:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7111:62:5"
															},
															"nodeType": "YulIf",
															"src": "7108:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7212:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "7216:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7205:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7205:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7205:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6981:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6989:4:5",
														"type": ""
													}
												],
												"src": "6952:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7267:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7284:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7287:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7277:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7277:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7277:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7381:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7384:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7374:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7374:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7374:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7405:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7408:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7398:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7398:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7398:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "7239:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7453:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7470:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7473:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7463:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7463:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7463:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7567:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7570:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7560:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7560:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7560:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7591:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7594:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7584:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7584:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7584:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "7425:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7700:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7717:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7720:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7710:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7710:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7710:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "7611:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7823:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7840:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7843:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7833:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7833:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7833:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "7734:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7946:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7963:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7966:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7956:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7956:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7956:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7857:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8069:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8086:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8089:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8079:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8079:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8079:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7980:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8151:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8161:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8179:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8186:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8175:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8175:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8195:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "8191:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8191:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "8171:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8171:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "8161:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8134:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "8144:6:5",
														"type": ""
													}
												],
												"src": "8103:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8254:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8311:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8320:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8323:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8313:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8313:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8313:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8277:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8302:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8284:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8284:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8274:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8274:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8267:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8267:43:5"
															},
															"nodeType": "YulIf",
															"src": "8264:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8247:5:5",
														"type": ""
													}
												],
												"src": "8211:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8382:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8439:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8448:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8451:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8441:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8441:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8441:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8405:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8430:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8412:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8412:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8402:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8402:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8395:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8395:43:5"
															},
															"nodeType": "YulIf",
															"src": "8392:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8375:5:5",
														"type": ""
													}
												],
												"src": "8339:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$233_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTGame_$258_to_t_address(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$233_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_INFTGame_$258_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100625760003560e01c8063150b7a0214610067578063472343b91461009757806366bb863b146100c857806380a54001146100e6578063b8e33fb214610104578063fead3d6e14610122575b600080fd5b610081600480360381019061007c91906103a9565b610140565b60405161008e91906104f7565b60405180910390f35b6100b160048036038101906100ac919061042c565b610223565b6040516100bf9291906104ce565b60405180910390f35b6100d0610277565b6040516100dd91906104b3565b60405180910390f35b6100ee61029d565b6040516100fb9190610512565b60405180910390f35b61010c6102c3565b604051610119919061052d565b60405180910390f35b61012a6102e9565b6040516101379190610548565b60405180910390f35b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561021157836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555062069780426101f991906105b9565b60066000858152602001908152602001600020819055505b63150b7a0260e01b9050949350505050565b6000806005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660008581526020019081526020016000205491509150915091565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061032261031d84610588565b610563565b90508281526020810184848401111561033e5761033d610774565b5b6103498482856106d1565b509392505050565b60008135905061036081610794565b92915050565b600082601f83011261037b5761037a61076f565b5b813561038b84826020860161030f565b91505092915050565b6000813590506103a3816107ab565b92915050565b600080600080608085870312156103c3576103c261077e565b5b60006103d187828801610351565b94505060206103e287828801610351565b93505060406103f387828801610394565b925050606085013567ffffffffffffffff81111561041457610413610779565b5b61042087828801610366565b91505092959194509250565b6000602082840312156104425761044161077e565b5b600061045084828501610394565b91505092915050565b6104628161060f565b82525050565b61047181610621565b82525050565b61048081610677565b82525050565b61048f81610689565b82525050565b61049e8161069b565b82525050565b6104ad8161066d565b82525050565b60006020820190506104c86000830184610459565b92915050565b60006040820190506104e36000830185610459565b6104f060208301846104a4565b9392505050565b600060208201905061050c6000830184610468565b92915050565b60006020820190506105276000830184610477565b92915050565b60006020820190506105426000830184610486565b92915050565b600060208201905061055d6000830184610495565b92915050565b600061056d61057e565b905061057982826106e0565b919050565b6000604051905090565b600067ffffffffffffffff8211156105a3576105a2610740565b5b6105ac82610783565b9050602081019050919050565b60006105c48261066d565b91506105cf8361066d565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0382111561060457610603610711565b5b828201905092915050565b600061061a8261064d565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000610682826106ad565b9050919050565b6000610694826106ad565b9050919050565b60006106a6826106ad565b9050919050565b60006106b8826106bf565b9050919050565b60006106ca8261064d565b9050919050565b82818337600083830152505050565b6106e982610783565b810181811067ffffffffffffffff8211171561070857610707610740565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b61079d8161060f565b81146107a857600080fd5b50565b6107b48161066d565b81146107bf57600080fd5b5056fea2646970667358221220f605a8e7f217c85bfda849e18a23129a15619659da000b5cc7b2274922c7edbf64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x62 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x67 JUMPI DUP1 PUSH4 0x472343B9 EQ PUSH2 0x97 JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0xC8 JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0xE6 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x104 JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x122 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x81 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x3A9 JUMP JUMPDEST PUSH2 0x140 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x8E SWAP2 SWAP1 PUSH2 0x4F7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xB1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xAC SWAP2 SWAP1 PUSH2 0x42C JUMP JUMPDEST PUSH2 0x223 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBF SWAP3 SWAP2 SWAP1 PUSH2 0x4CE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xD0 PUSH2 0x277 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDD SWAP2 SWAP1 PUSH2 0x4B3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xEE PUSH2 0x29D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xFB SWAP2 SWAP1 PUSH2 0x512 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x10C PUSH2 0x2C3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x119 SWAP2 SWAP1 PUSH2 0x52D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12A PUSH2 0x2E9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x137 SWAP2 SWAP1 PUSH2 0x548 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x211 JUMPI DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x69780 TIMESTAMP PUSH2 0x1F9 SWAP2 SWAP1 PUSH2 0x5B9 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x322 PUSH2 0x31D DUP5 PUSH2 0x588 JUMP JUMPDEST PUSH2 0x563 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x33E JUMPI PUSH2 0x33D PUSH2 0x774 JUMP JUMPDEST JUMPDEST PUSH2 0x349 DUP5 DUP3 DUP6 PUSH2 0x6D1 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x360 DUP2 PUSH2 0x794 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x37B JUMPI PUSH2 0x37A PUSH2 0x76F JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x38B DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x30F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3A3 DUP2 PUSH2 0x7AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3C3 JUMPI PUSH2 0x3C2 PUSH2 0x77E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3D1 DUP8 DUP3 DUP9 ADD PUSH2 0x351 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3E2 DUP8 DUP3 DUP9 ADD PUSH2 0x351 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3F3 DUP8 DUP3 DUP9 ADD PUSH2 0x394 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x414 JUMPI PUSH2 0x413 PUSH2 0x779 JUMP JUMPDEST JUMPDEST PUSH2 0x420 DUP8 DUP3 DUP9 ADD PUSH2 0x366 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x442 JUMPI PUSH2 0x441 PUSH2 0x77E JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x450 DUP5 DUP3 DUP6 ADD PUSH2 0x394 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x462 DUP2 PUSH2 0x60F JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x471 DUP2 PUSH2 0x621 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x480 DUP2 PUSH2 0x677 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x48F DUP2 PUSH2 0x689 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x49E DUP2 PUSH2 0x69B JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x4AD DUP2 PUSH2 0x66D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4C8 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x459 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x4E3 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x459 JUMP JUMPDEST PUSH2 0x4F0 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x4A4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x50C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x468 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x527 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x477 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x542 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x486 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x55D PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x495 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x56D PUSH2 0x57E JUMP JUMPDEST SWAP1 POP PUSH2 0x579 DUP3 DUP3 PUSH2 0x6E0 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x5A3 JUMPI PUSH2 0x5A2 PUSH2 0x740 JUMP JUMPDEST JUMPDEST PUSH2 0x5AC DUP3 PUSH2 0x783 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C4 DUP3 PUSH2 0x66D JUMP JUMPDEST SWAP2 POP PUSH2 0x5CF DUP4 PUSH2 0x66D JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x604 JUMPI PUSH2 0x603 PUSH2 0x711 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x61A DUP3 PUSH2 0x64D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x682 DUP3 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x694 DUP3 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6A6 DUP3 PUSH2 0x6AD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B8 DUP3 PUSH2 0x6BF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6CA DUP3 PUSH2 0x64D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x6E9 DUP3 PUSH2 0x783 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x708 JUMPI PUSH2 0x707 PUSH2 0x740 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x79D DUP2 PUSH2 0x60F JUMP JUMPDEST DUP2 EQ PUSH2 0x7A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x7B4 DUP2 PUSH2 0x66D JUMP JUMPDEST DUP2 EQ PUSH2 0x7BF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xF6 SDIV 0xA8 0xE7 CALLCODE OR 0xC8 JUMPDEST REVERT 0xA8 0x49 0xE1 DUP11 0x23 SLT SWAP11 ISZERO PUSH2 0x9659 0xDA STOP SIGNEXTEND 0x5C 0xC7 0xB2 0x27 0x49 0x22 0xC7 0xED 0xBF PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:1130:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1068:363;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;895:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;488:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;416:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1068:363;1186:6;1234:16;;;;;;;;;;;1221:29;;:9;:29;;;1217:149;;;1284:7;1262:9;:19;1272:8;1262:19;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1348:6;1330:15;:24;;;;:::i;:::-;1302:15;:25;1318:8;1302:25;;;;;;;;;;;:52;;;;1217:149;1393:30;;;1386:37;;1068:363;;;;;;:::o;895:158::-;953:11;966:12;998:9;:19;1008:8;998:19;;;;;;;;;;;;;;;;;;;;;1019:15;:25;1035:8;1019:25;;;;;;;;;;;;990:55;;;;895:158;;;:::o;488:31::-;;;;;;;;;;;;;:::o;384:25::-;;;;;;;;;;;;;:::o;416:24::-;;;;;;;;;;;;;:::o;447:34::-;;;;;;;;;;;;;:::o;7:410:5:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:943::-;1165:6;1173;1181;1189;1238:3;1226:9;1217:7;1213:23;1209:33;1206:120;;;1245:79;;:::i;:::-;1206:120;1365:1;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1336:117;1492:2;1518:53;1563:7;1554:6;1543:9;1539:22;1518:53;:::i;:::-;1508:63;;1463:118;1620:2;1646:53;1691:7;1682:6;1671:9;1667:22;1646:53;:::i;:::-;1636:63;;1591:118;1776:2;1765:9;1761:18;1748:32;1807:18;1799:6;1796:30;1793:117;;;1829:79;;:::i;:::-;1793:117;1934:62;1988:7;1979:6;1968:9;1964:22;1934:62;:::i;:::-;1924:72;;1719:287;1070:943;;;;;;;:::o;2019:329::-;2078:6;2127:2;2115:9;2106:7;2102:23;2098:32;2095:119;;;2133:79;;:::i;:::-;2095:119;2253:1;2278:53;2323:7;2314:6;2303:9;2299:22;2278:53;:::i;:::-;2268:63;;2224:117;2019:329;;;;:::o;2354:118::-;2441:24;2459:5;2441:24;:::i;:::-;2436:3;2429:37;2354:118;;:::o;2478:115::-;2563:23;2580:5;2563:23;:::i;:::-;2558:3;2551:36;2478:115;;:::o;2599:159::-;2700:51;2745:5;2700:51;:::i;:::-;2695:3;2688:64;2599:159;;:::o;2764:161::-;2866:52;2912:5;2866:52;:::i;:::-;2861:3;2854:65;2764:161;;:::o;2931:163::-;3034:53;3081:5;3034:53;:::i;:::-;3029:3;3022:66;2931:163;;:::o;3100:118::-;3187:24;3205:5;3187:24;:::i;:::-;3182:3;3175:37;3100:118;;:::o;3224:222::-;3317:4;3355:2;3344:9;3340:18;3332:26;;3368:71;3436:1;3425:9;3421:17;3412:6;3368:71;:::i;:::-;3224:222;;;;:::o;3452:332::-;3573:4;3611:2;3600:9;3596:18;3588:26;;3624:71;3692:1;3681:9;3677:17;3668:6;3624:71;:::i;:::-;3705:72;3773:2;3762:9;3758:18;3749:6;3705:72;:::i;:::-;3452:332;;;;;:::o;3790:218::-;3881:4;3919:2;3908:9;3904:18;3896:26;;3932:69;3998:1;3987:9;3983:17;3974:6;3932:69;:::i;:::-;3790:218;;;;:::o;4014:250::-;4121:4;4159:2;4148:9;4144:18;4136:26;;4172:85;4254:1;4243:9;4239:17;4230:6;4172:85;:::i;:::-;4014:250;;;;:::o;4270:252::-;4378:4;4416:2;4405:9;4401:18;4393:26;;4429:86;4512:1;4501:9;4497:17;4488:6;4429:86;:::i;:::-;4270:252;;;;:::o;4528:254::-;4637:4;4675:2;4664:9;4660:18;4652:26;;4688:87;4772:1;4761:9;4757:17;4748:6;4688:87;:::i;:::-;4528:254;;;;:::o;4788:129::-;4822:6;4849:20;;:::i;:::-;4839:30;;4878:33;4906:4;4898:6;4878:33;:::i;:::-;4788:129;;;:::o;4923:75::-;4956:6;4989:2;4983:9;4973:19;;4923:75;:::o;5004:307::-;5065:4;5155:18;5147:6;5144:30;5141:56;;;5177:18;;:::i;:::-;5141:56;5215:29;5237:6;5215:29;:::i;:::-;5207:37;;5299:4;5293;5289:15;5281:23;;5004:307;;;:::o;5317:305::-;5357:3;5376:20;5394:1;5376:20;:::i;:::-;5371:25;;5410:20;5428:1;5410:20;:::i;:::-;5405:25;;5564:1;5496:66;5492:74;5489:1;5486:81;5483:107;;;5570:18;;:::i;:::-;5483:107;5614:1;5611;5607:9;5600:16;;5317:305;;;;:::o;5628:96::-;5665:7;5694:24;5712:5;5694:24;:::i;:::-;5683:35;;5628:96;;;:::o;5730:149::-;5766:7;5806:66;5799:5;5795:78;5784:89;;5730:149;;;:::o;5885:126::-;5922:7;5962:42;5955:5;5951:54;5940:65;;5885:126;;;:::o;6017:77::-;6054:7;6083:5;6072:16;;6017:77;;;:::o;6100:140::-;6164:9;6197:37;6228:5;6197:37;:::i;:::-;6184:50;;6100:140;;;:::o;6246:141::-;6311:9;6344:37;6375:5;6344:37;:::i;:::-;6331:50;;6246:141;;;:::o;6393:142::-;6459:9;6492:37;6523:5;6492:37;:::i;:::-;6479:50;;6393:142;;;:::o;6541:126::-;6591:9;6624:37;6655:5;6624:37;:::i;:::-;6611:50;;6541:126;;;:::o;6673:113::-;6723:9;6756:24;6774:5;6756:24;:::i;:::-;6743:37;;6673:113;;;:::o;6792:154::-;6876:6;6871:3;6866;6853:30;6938:1;6929:6;6924:3;6920:16;6913:27;6792:154;;;:::o;6952:281::-;7035:27;7057:4;7035:27;:::i;:::-;7027:6;7023:40;7165:6;7153:10;7150:22;7129:18;7117:10;7114:34;7111:62;7108:88;;;7176:18;;:::i;:::-;7108:88;7216:10;7212:2;7205:22;6995:238;6952:281;;:::o;7239:180::-;7287:77;7284:1;7277:88;7384:4;7381:1;7374:15;7408:4;7405:1;7398:15;7425:180;7473:77;7470:1;7463:88;7570:4;7567:1;7560:15;7594:4;7591:1;7584:15;7611:117;7720:1;7717;7710:12;7734:117;7843:1;7840;7833:12;7857:117;7966:1;7963;7956:12;7980:117;8089:1;8086;8079:12;8103:102;8144:6;8195:2;8191:7;8186:2;8179:5;8175:14;8171:28;8161:38;;8103:102;;;:::o;8211:122::-;8284:24;8302:5;8284:24;:::i;:::-;8277:5;8274:35;8264:63;;8323:1;8320;8313:12;8264:63;8211:122;:::o;8339:::-;8412:24;8430:5;8412:24;:::i;:::-;8405:5;8402:35;8392:63;;8451:1;8448;8441:12;8392:63;8339:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "408000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStakes(uint256)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"parentNFT()": "2666",
								"parentNFTAddress()": "2536",
								"parentNftFunctions()": "2688",
								"parentToken()": "2644"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 1471,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 668,
									"end": 680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 713,
									"end": 727,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 758,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 1471,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f605a8e7f217c85bfda849e18a23129a15619659da000b5cc7b2274922c7edbf64736f6c63430008070033",
									".code": [
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "472343B9"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "66BB863B"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "80A54001"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "B8E33FB2"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "FEAD3D6E"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1471,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1186,
											"end": 1192,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1234,
											"end": 1250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1221,
											"end": 1250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1230,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1250,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1221,
											"end": 1250,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1221,
											"end": 1250,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1366,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1217,
											"end": 1366,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1284,
											"end": 1291,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1271,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1272,
											"end": 1280,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1281,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1262,
											"end": 1291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1348,
											"end": 1354,
											"name": "PUSH",
											"source": 4,
											"value": "69780"
										},
										{
											"begin": 1330,
											"end": 1345,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1330,
											"end": 1354,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1330,
											"end": 1354,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1330,
											"end": 1354,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1330,
											"end": 1354,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 1330,
											"end": 1354,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1317,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1318,
											"end": 1326,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1302,
											"end": 1327,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1302,
											"end": 1354,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1366,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 1217,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1393,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 1393,
											"end": 1423,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1393,
											"end": 1423,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1423,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1386,
											"end": 1423,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1068,
											"end": 1431,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 953,
											"end": 964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 978,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1034,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 5,
											"value": "46"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 5,
											"value": "45"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "50"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "49"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "52"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "66"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "tag",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1242,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "tag",
											"source": 5,
											"value": "70"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "tag",
											"source": 5,
											"value": "76"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1719,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "tag",
											"source": 5,
											"value": "17"
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2129,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2113,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2125,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2321,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2459,
											"end": 2464,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2466,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2580,
											"end": 2585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2745,
											"end": 2750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "tag",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "tag",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3205,
											"end": 3210,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 3187,
											"end": 3211,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3182,
											"end": 3185,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3175,
											"end": 3212,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3218,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "tag",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3317,
											"end": 3321,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3355,
											"end": 3357,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3344,
											"end": 3353,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3340,
											"end": 3358,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3332,
											"end": 3358,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3436,
											"end": 3437,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3425,
											"end": 3434,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3438,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3412,
											"end": 3418,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 3368,
											"end": 3439,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3224,
											"end": 3446,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3452,
											"end": 3784,
											"name": "tag",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3784,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3573,
											"end": 3577,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3611,
											"end": 3613,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3600,
											"end": 3609,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3614,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3588,
											"end": 3614,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3692,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3690,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3677,
											"end": 3694,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3668,
											"end": 3674,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3624,
											"end": 3695,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 3624,
											"end": 3695,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3624,
											"end": 3695,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 3624,
											"end": 3695,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3773,
											"end": 3775,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3762,
											"end": 3771,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3758,
											"end": 3776,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3749,
											"end": 3755,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3705,
											"end": 3777,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "103"
										},
										{
											"begin": 3705,
											"end": 3777,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3705,
											"end": 3777,
											"name": "tag",
											"source": 5,
											"value": "111"
										},
										{
											"begin": 3705,
											"end": 3777,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3784,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3784,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3784,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3452,
											"end": 3784,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3790,
											"end": 4008,
											"name": "tag",
											"source": 5,
											"value": "14"
										},
										{
											"begin": 3790,
											"end": 4008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3881,
											"end": 3885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3919,
											"end": 3921,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3908,
											"end": 3917,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3904,
											"end": 3922,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3896,
											"end": 3922,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3998,
											"end": 3999,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3987,
											"end": 3996,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3983,
											"end": 4000,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3974,
											"end": 3980,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3932,
											"end": 4001,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 3932,
											"end": 4001,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3932,
											"end": 4001,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3932,
											"end": 4001,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 4008,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 4008,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 4008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 4008,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3790,
											"end": 4008,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4014,
											"end": 4264,
											"name": "tag",
											"source": 5,
											"value": "28"
										},
										{
											"begin": 4014,
											"end": 4264,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4125,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4161,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4148,
											"end": 4157,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4144,
											"end": 4162,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4136,
											"end": 4162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4254,
											"end": 4255,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4243,
											"end": 4252,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4239,
											"end": 4256,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4230,
											"end": 4236,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4172,
											"end": 4257,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 4172,
											"end": 4257,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4172,
											"end": 4257,
											"name": "tag",
											"source": 5,
											"value": "115"
										},
										{
											"begin": 4172,
											"end": 4257,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4264,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4264,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4264,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4014,
											"end": 4264,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4270,
											"end": 4522,
											"name": "tag",
											"source": 5,
											"value": "32"
										},
										{
											"begin": 4270,
											"end": 4522,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4378,
											"end": 4382,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4416,
											"end": 4418,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4405,
											"end": 4414,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4401,
											"end": 4419,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4393,
											"end": 4419,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4512,
											"end": 4513,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4501,
											"end": 4510,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4497,
											"end": 4514,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4488,
											"end": 4494,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4429,
											"end": 4515,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "95"
										},
										{
											"begin": 4429,
											"end": 4515,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4429,
											"end": 4515,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 4429,
											"end": 4515,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4522,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4522,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4522,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4270,
											"end": 4522,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4528,
											"end": 4782,
											"name": "tag",
											"source": 5,
											"value": "36"
										},
										{
											"begin": 4528,
											"end": 4782,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4637,
											"end": 4641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4675,
											"end": 4677,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4664,
											"end": 4673,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4660,
											"end": 4678,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4652,
											"end": 4678,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4772,
											"end": 4773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4761,
											"end": 4770,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4757,
											"end": 4774,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4748,
											"end": 4754,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4688,
											"end": 4775,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "99"
										},
										{
											"begin": 4688,
											"end": 4775,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4688,
											"end": 4775,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 4688,
											"end": 4775,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4782,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4782,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4782,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4528,
											"end": 4782,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4788,
											"end": 4917,
											"name": "tag",
											"source": 5,
											"value": "48"
										},
										{
											"begin": 4788,
											"end": 4917,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4822,
											"end": 4828,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "tag",
											"source": 5,
											"value": "121"
										},
										{
											"begin": 4849,
											"end": 4869,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4869,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4839,
											"end": 4869,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4906,
											"end": 4910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4898,
											"end": 4904,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4878,
											"end": 4911,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 4878,
											"end": 4911,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4878,
											"end": 4911,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 4878,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4917,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4917,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4917,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4788,
											"end": 4917,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4923,
											"end": 4998,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 4923,
											"end": 4998,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4956,
											"end": 4962,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4989,
											"end": 4991,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 4983,
											"end": 4992,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4973,
											"end": 4992,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 4998,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4923,
											"end": 4998,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5004,
											"end": 5311,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 5004,
											"end": 5311,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5065,
											"end": 5069,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5155,
											"end": 5173,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5147,
											"end": 5153,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5144,
											"end": 5174,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5197,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5197,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5141,
											"end": 5197,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 5177,
											"end": 5195,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5141,
											"end": 5197,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 5141,
											"end": 5197,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5237,
											"end": 5243,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5215,
											"end": 5244,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 5215,
											"end": 5244,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5215,
											"end": 5244,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 5215,
											"end": 5244,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5207,
											"end": 5244,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5207,
											"end": 5244,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5299,
											"end": 5303,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5293,
											"end": 5297,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5289,
											"end": 5304,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5304,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5281,
											"end": 5304,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5004,
											"end": 5311,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5004,
											"end": 5311,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5004,
											"end": 5311,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5004,
											"end": 5311,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5317,
											"end": 5622,
											"name": "tag",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5317,
											"end": 5622,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5357,
											"end": 5360,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5376,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5394,
											"end": 5395,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5376,
											"end": 5396,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5376,
											"end": 5396,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5376,
											"end": 5396,
											"name": "tag",
											"source": 5,
											"value": "133"
										},
										{
											"begin": 5376,
											"end": 5396,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5371,
											"end": 5396,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5371,
											"end": 5396,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5428,
											"end": 5429,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 5410,
											"end": 5430,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5405,
											"end": 5430,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5564,
											"end": 5565,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5496,
											"end": 5562,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5492,
											"end": 5566,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5489,
											"end": 5490,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5486,
											"end": 5567,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5590,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5590,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5483,
											"end": 5590,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5570,
											"end": 5588,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5483,
											"end": 5590,
											"name": "tag",
											"source": 5,
											"value": "135"
										},
										{
											"begin": 5483,
											"end": 5590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5614,
											"end": 5615,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5611,
											"end": 5612,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5607,
											"end": 5616,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5616,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5600,
											"end": 5616,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5622,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5622,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5622,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5317,
											"end": 5622,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5628,
											"end": 5724,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 5628,
											"end": 5724,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5665,
											"end": 5672,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5694,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5712,
											"end": 5717,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5694,
											"end": 5718,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5694,
											"end": 5718,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5694,
											"end": 5718,
											"name": "tag",
											"source": 5,
											"value": "139"
										},
										{
											"begin": 5694,
											"end": 5718,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5683,
											"end": 5718,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5683,
											"end": 5718,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5724,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5724,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5724,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5628,
											"end": 5724,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5730,
											"end": 5879,
											"name": "tag",
											"source": 5,
											"value": "90"
										},
										{
											"begin": 5730,
											"end": 5879,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5766,
											"end": 5773,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5806,
											"end": 5872,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5799,
											"end": 5804,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5795,
											"end": 5873,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5873,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5784,
											"end": 5873,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5879,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5879,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5879,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5730,
											"end": 5879,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5885,
											"end": 6011,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5885,
											"end": 6011,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5922,
											"end": 5929,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5962,
											"end": 6004,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5955,
											"end": 5960,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5951,
											"end": 6005,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6005,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5940,
											"end": 6005,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 6011,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 6011,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 6011,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5885,
											"end": 6011,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6017,
											"end": 6094,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 6017,
											"end": 6094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6054,
											"end": 6061,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6083,
											"end": 6088,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6072,
											"end": 6088,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6094,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6094,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6017,
											"end": 6094,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6100,
											"end": 6240,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 6100,
											"end": 6240,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6164,
											"end": 6173,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6197,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6228,
											"end": 6233,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6197,
											"end": 6234,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6197,
											"end": 6234,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6197,
											"end": 6234,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6197,
											"end": 6234,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6234,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6184,
											"end": 6234,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6240,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6240,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6240,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6100,
											"end": 6240,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6246,
											"end": 6387,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 6246,
											"end": 6387,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6311,
											"end": 6320,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6344,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6375,
											"end": 6380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6344,
											"end": 6381,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6344,
											"end": 6381,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6344,
											"end": 6381,
											"name": "tag",
											"source": 5,
											"value": "148"
										},
										{
											"begin": 6344,
											"end": 6381,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6381,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6331,
											"end": 6381,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6387,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6387,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6387,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6246,
											"end": 6387,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6393,
											"end": 6535,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 6393,
											"end": 6535,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6459,
											"end": 6468,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6492,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 6523,
											"end": 6528,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6492,
											"end": 6529,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6492,
											"end": 6529,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6492,
											"end": 6529,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 6492,
											"end": 6529,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6529,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6479,
											"end": 6529,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6535,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6535,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6535,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6393,
											"end": 6535,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6541,
											"end": 6667,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6541,
											"end": 6667,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6591,
											"end": 6600,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6624,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6655,
											"end": 6660,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6624,
											"end": 6661,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6624,
											"end": 6661,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6624,
											"end": 6661,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6624,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6611,
											"end": 6661,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6611,
											"end": 6661,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6667,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6667,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6667,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6541,
											"end": 6667,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6673,
											"end": 6786,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6673,
											"end": 6786,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6723,
											"end": 6732,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6774,
											"end": 6779,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "tag",
											"source": 5,
											"value": "155"
										},
										{
											"begin": 6756,
											"end": 6780,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6743,
											"end": 6780,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6743,
											"end": 6780,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6673,
											"end": 6786,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6673,
											"end": 6786,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6673,
											"end": 6786,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6673,
											"end": 6786,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6792,
											"end": 6946,
											"name": "tag",
											"source": 5,
											"value": "53"
										},
										{
											"begin": 6792,
											"end": 6946,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6876,
											"end": 6882,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6871,
											"end": 6874,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6866,
											"end": 6869,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6853,
											"end": 6883,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 6938,
											"end": 6939,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6929,
											"end": 6935,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6924,
											"end": 6927,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6920,
											"end": 6936,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6913,
											"end": 6940,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 6946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 6946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 6946,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6792,
											"end": 6946,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6952,
											"end": 7233,
											"name": "tag",
											"source": 5,
											"value": "124"
										},
										{
											"begin": 6952,
											"end": 7233,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 7057,
											"end": 7061,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7035,
											"end": 7062,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 7035,
											"end": 7062,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7035,
											"end": 7062,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 7035,
											"end": 7062,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7033,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7023,
											"end": 7063,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7165,
											"end": 7171,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7153,
											"end": 7163,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7150,
											"end": 7172,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 7129,
											"end": 7147,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7117,
											"end": 7127,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7114,
											"end": 7148,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 7111,
											"end": 7173,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 7108,
											"end": 7196,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 7108,
											"end": 7196,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 7108,
											"end": 7196,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 7176,
											"end": 7194,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7108,
											"end": 7196,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 7108,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7216,
											"end": 7226,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7212,
											"end": 7214,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 7205,
											"end": 7227,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6995,
											"end": 7233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7233,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6952,
											"end": 7233,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7239,
											"end": 7419,
											"name": "tag",
											"source": 5,
											"value": "137"
										},
										{
											"begin": 7239,
											"end": 7419,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7287,
											"end": 7364,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7284,
											"end": 7285,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7277,
											"end": 7365,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7384,
											"end": 7388,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 7381,
											"end": 7382,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7374,
											"end": 7389,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7408,
											"end": 7412,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7405,
											"end": 7406,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7413,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7425,
											"end": 7605,
											"name": "tag",
											"source": 5,
											"value": "129"
										},
										{
											"begin": 7425,
											"end": 7605,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7473,
											"end": 7550,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7470,
											"end": 7471,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7463,
											"end": 7551,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7570,
											"end": 7574,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 7567,
											"end": 7568,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 7560,
											"end": 7575,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 7594,
											"end": 7598,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 7591,
											"end": 7592,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7584,
											"end": 7599,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7611,
											"end": 7728,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 7611,
											"end": 7728,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7720,
											"end": 7721,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7717,
											"end": 7718,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7710,
											"end": 7722,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7734,
											"end": 7851,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 7734,
											"end": 7851,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7843,
											"end": 7844,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7840,
											"end": 7841,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7833,
											"end": 7845,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7857,
											"end": 7974,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 7857,
											"end": 7974,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7966,
											"end": 7967,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7963,
											"end": 7964,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 7956,
											"end": 7968,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 7980,
											"end": 8097,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 7980,
											"end": 8097,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8089,
											"end": 8090,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8086,
											"end": 8087,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8079,
											"end": 8091,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8103,
											"end": 8205,
											"name": "tag",
											"source": 5,
											"value": "131"
										},
										{
											"begin": 8103,
											"end": 8205,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8144,
											"end": 8150,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8195,
											"end": 8197,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8191,
											"end": 8198,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 8186,
											"end": 8188,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 8179,
											"end": 8184,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8175,
											"end": 8189,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8171,
											"end": 8199,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 8161,
											"end": 8199,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8161,
											"end": 8199,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8103,
											"end": 8205,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8103,
											"end": 8205,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8103,
											"end": 8205,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8103,
											"end": 8205,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8211,
											"end": 8333,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 8211,
											"end": 8333,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8302,
											"end": 8307,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8284,
											"end": 8308,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 8284,
											"end": 8308,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8284,
											"end": 8308,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 8284,
											"end": 8308,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8277,
											"end": 8282,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8274,
											"end": 8309,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8327,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 8264,
											"end": 8327,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8323,
											"end": 8324,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8320,
											"end": 8321,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8313,
											"end": 8325,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8264,
											"end": 8327,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 8264,
											"end": 8327,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8211,
											"end": 8333,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8211,
											"end": 8333,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8339,
											"end": 8461,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 8339,
											"end": 8461,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8412,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 8430,
											"end": 8435,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8412,
											"end": 8436,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 8412,
											"end": 8436,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8412,
											"end": 8436,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 8412,
											"end": 8436,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8405,
											"end": 8410,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8402,
											"end": 8437,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 8392,
											"end": 8455,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8392,
											"end": 8455,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8451,
											"end": 8452,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8448,
											"end": 8449,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8441,
											"end": 8453,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8392,
											"end": 8455,
											"name": "tag",
											"source": 5,
											"value": "173"
										},
										{
											"begin": 8392,
											"end": 8455,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8339,
											"end": 8461,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8339,
											"end": 8461,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getStakes(uint256)": "472343b9",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"parentNFT()": "b8e33fb2",
							"parentNFTAddress()": "66bb863b",
							"parentNftFunctions()": "fead3d6e",
							"parentToken()": "80a54001"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getStakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNftFunctions\",\"outputs\":[{\"internalType\":\"contract INFTGame\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0xe1dacdc4adc9d752fd18cd44b1ea42c951c012ce62adc7f96dbf6fcabb952a43\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1f9fcf7b9510dffa23766ead0180e9116a1e2ed6c3e15cf30c7c6fe6dbb826e0\",\"dweb:/ipfs/QmRwBFJNjDZLDk6aN75tSH1YLixss7w91cUfgG17SrSdwq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Missions.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 266,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)233"
							},
							{
								"astId": 269,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNftFunctions",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(INFTGame)258"
							},
							{
								"astId": 271,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFTAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 305,
								"contract": "contracts/Missions.sol:Staking",
								"label": "s_stakers",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 309,
								"contract": "contracts/Missions.sol:Staking",
								"label": "s_missionTimers",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)233": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(INFTGame)258": {
								"encoding": "inplace",
								"label": "contract INFTGame",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC721": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 246,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 122,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "271:7:2"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 121,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								245
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 132,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 141,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 150,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 233,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 233,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 233,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 233,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 233,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 233,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 233,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 233,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 233,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 234,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 245,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"contracts/Missions.sol": {
				"ast": {
					"absolutePath": "contracts/Missions.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC20": [
							117
						],
						"IERC721": [
							233
						],
						"INFTGame": [
							258
						],
						"ReentrancyGuard": [
							39
						],
						"Staking": [
							366
						]
					},
					"id": 367,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 40,
							"src": "64:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 118,
							"src": "128:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 367,
							"sourceUnit": 234,
							"src": "186:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "INFTGame",
							"nameLocation": "258:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a0c4442d",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrophies",
									"nameLocation": "286:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "298:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:9:4"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "325:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:9:4"
									},
									"scope": 258,
									"src": "277:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 367,
							"src": "248:89:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "361:15:4"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "361:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 366,
							"linearizedBaseContracts": [
								366,
								39
							],
							"name": "Staking",
							"nameLocation": "350:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "80a54001",
									"id": 263,
									"mutability": "mutable",
									"name": "parentToken",
									"nameLocation": "398:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "384:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 262,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 261,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "384:6:4"
										},
										"referencedDeclaration": 117,
										"src": "384:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 266,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "431:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "416:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$233",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 265,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 264,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 233,
											"src": "416:7:4"
										},
										"referencedDeclaration": 233,
										"src": "416:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$233",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fead3d6e",
									"id": 269,
									"mutability": "mutable",
									"name": "parentNftFunctions",
									"nameLocation": "463:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "447:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTGame_$258",
										"typeString": "contract INFTGame"
									},
									"typeName": {
										"id": 268,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 267,
											"name": "INFTGame",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 258,
											"src": "447:8:4"
										},
										"referencedDeclaration": 258,
										"src": "447:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTGame_$258",
											"typeString": "contract INFTGame"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66bb863b",
									"id": 271,
									"mutability": "mutable",
									"name": "parentNFTAddress",
									"nameLocation": "503:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "488:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "583:205:4",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "594:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 280,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "614:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 279,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "606:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$233_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "606:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"src": "594:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$233",
														"typeString": "contract IERC721"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "594:33:4"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "parentNftFunctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 286,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "668:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 285,
															"name": "INFTGame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "659:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INFTGame_$258_$",
																"typeString": "type(contract INFTGame)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "659:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"src": "638:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTGame_$258",
														"typeString": "contract INFTGame"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "638:43:4"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "parentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "692:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 292,
																"name": "_tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "713:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 291,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "706:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "706:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "692:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "692:36:4"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "parentNFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "739:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "758:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "739:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "739:31:4"
											}
										]
									},
									"id": 301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "546:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "538:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "568:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "560:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:46:4"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:4"
									},
									"scope": 366,
									"src": "526:262:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 305,
									"mutability": "mutable",
									"name": "s_stakers",
									"nameLocation": "823:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "796:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 304,
										"keyType": {
											"id": 302,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "805:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "796:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 303,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "814:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "s_missionTimers",
									"nameLocation": "866:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 366,
									"src": "839:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 308,
										"keyType": {
											"id": 306,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "848:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "839:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 307,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "857:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "979:74:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 318,
																"name": "s_stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "998:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 320,
															"indexExpression": {
																"id": 319,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1008:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "998:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 321,
																"name": "s_missionTimers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "1019:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 323,
															"indexExpression": {
																"id": 322,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1035:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1019:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 324,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "997:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 317,
												"id": 325,
												"nodeType": "Return",
												"src": "990:55:4"
											}
										]
									},
									"functionSelector": "472343b9",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakes",
									"nameLocation": "904:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "922:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "914:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:18:4"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "961:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "953:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "974:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "966:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:27:4"
									},
									"scope": 366,
									"src": "895:158:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 364,
										"nodeType": "Block",
										"src": "1194:237:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 342,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 340,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 329,
														"src": "1221:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 341,
														"name": "parentNFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "1234:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1221:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "1217:149:4",
												"trueBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "1251:115:4",
													"statements": [
														{
															"expression": {
																"id": 347,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 343,
																		"name": "s_stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "1262:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 345,
																	"indexExpression": {
																		"id": 344,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "1272:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1262:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 346,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 331,
																	"src": "1284:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1262:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 348,
															"nodeType": "ExpressionStatement",
															"src": "1262:29:4"
														},
														{
															"expression": {
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 349,
																		"name": "s_missionTimers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "1302:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 351,
																	"indexExpression": {
																		"id": 350,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 333,
																		"src": "1318:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1302:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 352,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1330:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1330:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "35",
																		"id": 354,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1348:6:4",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_432000_by_1",
																			"typeString": "int_const 432000"
																		},
																		"value": "5"
																	},
																	"src": "1330:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1302:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 357,
															"nodeType": "ExpressionStatement",
															"src": "1302:52:4"
														}
													]
												}
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 360,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1393:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$366",
																"typeString": "contract Staking"
															}
														},
														"id": 361,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 365,
														"src": "1393:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 362,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1393:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 339,
												"id": 363,
												"nodeType": "Return",
												"src": "1386:37:4"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 365,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1077:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 336,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1102:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1094:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1094:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 331,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "1121:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1113:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 330,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1113:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1138:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1130:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 332,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1130:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 335,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1148:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 334,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1148:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1093:68:4"
									},
									"returnParameters": {
										"id": 339,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 338,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 365,
												"src": "1186:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 337,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1186:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1185:8:4"
									},
									"scope": 366,
									"src": "1068:363:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 367,
							"src": "341:1130:4",
							"usedErrors": []
						}
					],
					"src": "35:1436:4"
				},
				"id": 4
			}
		}
	}
}