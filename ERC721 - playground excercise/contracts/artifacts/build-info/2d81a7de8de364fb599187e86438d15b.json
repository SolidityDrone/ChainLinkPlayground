{
	"id": "2d81a7de8de364fb599187e86438d15b",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/Missions.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.8.6;\r\n\r\n\r\nimport \"@openzeppelin/contracts/security/ReentrancyGuard.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC20/IERC20.sol\";\r\nimport \"@openzeppelin/contracts/token/ERC721/IERC721.sol\";\r\n\r\ninterface INFTGame {\r\n       function getTrophies(uint256) external returns (uint256);\r\n}\r\n\r\ncontract Staking is ReentrancyGuard {\r\n    IERC20 public parentToken;\r\n    IERC721 public parentNFT;\r\n    INFTGame public parentNftFunctions;\r\n    address public parentNFTAddress;\r\n    constructor(address _nftContract, address _tokenContract){\r\n        parentNFT = IERC721(_nftContract);\r\n        parentNftFunctions = INFTGame(_nftContract);\r\n        parentToken = IERC20(_tokenContract);\r\n        parentNFTAddress = _nftContract;\r\n        \r\n    }\r\n\r\n    mapping (uint256=>address) s_stakers;\r\n    mapping (uint256=>uint256) s_missionTimers;\r\n     \r\n    function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r\n        return (s_stakers[_tokenID], s_missionTimers[_tokenID]);\r\n    }\r\n    \r\n    function unstake(uint256 _tokenID) public view returns (uint256 tokenID, address to, uint256 amount){\r\n        require(msg.sender == s_stakers[_tokenID], \"Not allowed to claim ownership\");\r\n        return (_tokenID, msg.sender, s_missionTimers[_tokenID]);\r\n\r\n    }\r\n\r\n\r\n\r\n    \r\n    function onERC721Received(address _operator, address _sender, uint256 _tokenID, bytes memory) public virtual returns (bytes4) {\r\n        \r\n\r\n        if (_operator == parentNFTAddress){\r\n        s_stakers[_tokenID] = _sender;\r\n        s_missionTimers[_tokenID] = block.timestamp + 5 days;\r\n        }\r\n        \r\n        return this.onERC721Received.selector;\r\n    }\r\n    \r\n\r\n    \r\n \r\n\r\n   \r\n \r\n\r\n    \r\n\r\n}"
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721 is IERC165 {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId,\n        bytes calldata data\n    ) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 tokenId\n    ) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool _approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(\n        address from,\n        address to,\n        uint256 amount\n    ) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (security/ReentrancyGuard.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant _NOT_ENTERED = 1;\n    uint256 private constant _ENTERED = 2;\n\n    uint256 private _status;\n\n    constructor() {\n        _status = _NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        // On the first call to nonReentrant, _notEntered will be true\n        require(_status != _ENTERED, \"ReentrancyGuard: reentrant call\");\n\n        // Any calls to nonReentrant after this point will fail\n        _status = _ENTERED;\n\n        _;\n\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = _NOT_ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "@openzeppelin/contracts/security/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"IERC721": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "_approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":\"IERC721\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/Missions.sol": {
				"INFTGame": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "getTrophies",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getTrophies(uint256)": "a0c4442d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getTrophies\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"INFTGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0x36df22e7cf7d272f186bf77aafc4663bfd8b5211f54150aa44ab3d1eccc5449a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b4da0530461bb1cb88e35ed1223e4fcceab9e59c9d2f0e9af32a99b7e3f5420\",\"dweb:/ipfs/Qmd1Qx3eQwVTR1Eh1KpCHvUJcPujSb5cQ1S4sTuNFYpFJm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"Staking": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_nftContract",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_tokenContract",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "getStakes",
							"outputs": [
								{
									"internalType": "address",
									"name": "add",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "time",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_operator",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_sender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "",
									"type": "bytes"
								}
							],
							"name": "onERC721Received",
							"outputs": [
								{
									"internalType": "bytes4",
									"name": "",
									"type": "bytes4"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFT",
							"outputs": [
								{
									"internalType": "contract IERC721",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNFTAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentNftFunctions",
							"outputs": [
								{
									"internalType": "contract INFTGame",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "parentToken",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_tokenID",
									"type": "uint256"
								}
							],
							"name": "unstake",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenID",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/Missions.sol\":341:1750  contract Staking is ReentrancyGuard {\r... */\n  mstore(0x40, 0x80)\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1701:1702  1 */\n  0x01\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1813  _status */\n  0x00\n    /* \"@openzeppelin/contracts/security/ReentrancyGuard.sol\":1806:1828  _status = _NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":614:626  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":594:603  parentNFT */\n  0x02\n  0x00\n    /* \"contracts/Missions.sol\":594:627  parentNFT = IERC721(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":668:680  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":638:656  parentNftFunctions */\n  0x03\n  0x00\n    /* \"contracts/Missions.sol\":638:681  parentNftFunctions = INFTGame(_nftContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":713:727  _tokenContract */\n  dup1\n    /* \"contracts/Missions.sol\":692:703  parentToken */\n  0x01\n  0x00\n    /* \"contracts/Missions.sol\":692:728  parentToken = IERC20(_tokenContract) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":758:770  _nftContract */\n  dup2\n    /* \"contracts/Missions.sol\":739:755  parentNFTAddress */\n  0x04\n  0x00\n    /* \"contracts/Missions.sol\":739:770  parentNFTAddress = _nftContract */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/Missions.sol\":526:788  constructor(address _nftContract, address _tokenContract){\r... */\n  pop\n  pop\n    /* \"contracts/Missions.sol\":341:1750  contract Staking is ReentrancyGuard {\r... */\n  jump(tag_8)\n    /* \"#utility.yul\":7:150   */\ntag_10:\n    /* \"#utility.yul\":64:69   */\n  0x00\n    /* \"#utility.yul\":95:101   */\n  dup2\n    /* \"#utility.yul\":89:102   */\n  mload\n    /* \"#utility.yul\":80:102   */\n  swap1\n  pop\n    /* \"#utility.yul\":111:144   */\n  tag_12\n    /* \"#utility.yul\":138:143   */\n  dup2\n    /* \"#utility.yul\":111:144   */\n  tag_13\n  jump\t// in\ntag_12:\n    /* \"#utility.yul\":7:150   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":156:663   */\ntag_3:\n    /* \"#utility.yul\":235:241   */\n  0x00\n    /* \"#utility.yul\":243:249   */\n  dup1\n    /* \"#utility.yul\":292:294   */\n  0x40\n    /* \"#utility.yul\":280:289   */\n  dup4\n    /* \"#utility.yul\":271:278   */\n  dup6\n    /* \"#utility.yul\":267:290   */\n  sub\n    /* \"#utility.yul\":263:295   */\n  slt\n    /* \"#utility.yul\":260:379   */\n  iszero\n  tag_15\n  jumpi\n    /* \"#utility.yul\":298:377   */\n  tag_16\n  tag_17\n  jump\t// in\ntag_16:\n    /* \"#utility.yul\":260:379   */\ntag_15:\n    /* \"#utility.yul\":418:419   */\n  0x00\n    /* \"#utility.yul\":443:507   */\n  tag_18\n    /* \"#utility.yul\":499:506   */\n  dup6\n    /* \"#utility.yul\":490:496   */\n  dup3\n    /* \"#utility.yul\":479:488   */\n  dup7\n    /* \"#utility.yul\":475:497   */\n  add\n    /* \"#utility.yul\":443:507   */\n  tag_10\n  jump\t// in\ntag_18:\n    /* \"#utility.yul\":433:507   */\n  swap3\n  pop\n    /* \"#utility.yul\":389:517   */\n  pop\n    /* \"#utility.yul\":556:558   */\n  0x20\n    /* \"#utility.yul\":582:646   */\n  tag_19\n    /* \"#utility.yul\":638:645   */\n  dup6\n    /* \"#utility.yul\":629:635   */\n  dup3\n    /* \"#utility.yul\":618:627   */\n  dup7\n    /* \"#utility.yul\":614:636   */\n  add\n    /* \"#utility.yul\":582:646   */\n  tag_10\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":572:646   */\n  swap2\n  pop\n    /* \"#utility.yul\":527:656   */\n  pop\n    /* \"#utility.yul\":156:663   */\n  swap3\n  pop\n  swap3\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":750:846   */\ntag_22:\n    /* \"#utility.yul\":787:794   */\n  0x00\n    /* \"#utility.yul\":816:840   */\n  tag_24\n    /* \"#utility.yul\":834:839   */\n  dup3\n    /* \"#utility.yul\":816:840   */\n  tag_25\n  jump\t// in\ntag_24:\n    /* \"#utility.yul\":805:840   */\n  swap1\n  pop\n    /* \"#utility.yul\":750:846   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":852:978   */\ntag_25:\n    /* \"#utility.yul\":889:896   */\n  0x00\n    /* \"#utility.yul\":929:971   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":922:927   */\n  dup3\n    /* \"#utility.yul\":918:972   */\n  and\n    /* \"#utility.yul\":907:972   */\n  swap1\n  pop\n    /* \"#utility.yul\":852:978   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1107:1224   */\ntag_17:\n    /* \"#utility.yul\":1216:1217   */\n  0x00\n    /* \"#utility.yul\":1213:1214   */\n  dup1\n    /* \"#utility.yul\":1206:1218   */\n  revert\n    /* \"#utility.yul\":1230:1352   */\ntag_13:\n    /* \"#utility.yul\":1303:1327   */\n  tag_31\n    /* \"#utility.yul\":1321:1326   */\n  dup2\n    /* \"#utility.yul\":1303:1327   */\n  tag_22\n  jump\t// in\ntag_31:\n    /* \"#utility.yul\":1296:1301   */\n  dup2\n    /* \"#utility.yul\":1293:1328   */\n  eq\n    /* \"#utility.yul\":1283:1346   */\n  tag_32\n  jumpi\n    /* \"#utility.yul\":1342:1343   */\n  0x00\n    /* \"#utility.yul\":1339:1340   */\n  dup1\n    /* \"#utility.yul\":1332:1344   */\n  revert\n    /* \"#utility.yul\":1283:1346   */\ntag_32:\n    /* \"#utility.yul\":1230:1352   */\n  pop\n  jump\t// out\n    /* \"contracts/Missions.sol\":341:1750  contract Staking is ReentrancyGuard {\r... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/Missions.sol\":341:1750  contract Staking is ReentrancyGuard {\r... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x66bb863b\n      gt\n      tag_10\n      jumpi\n      dup1\n      0x66bb863b\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x80a54001\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xb8e33fb2\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xfead3d6e\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x150b7a02\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x2e17de78\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x472343b9\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/Missions.sol\":1347:1710  function onERC721Received(address _operator, address _sender, uint256 _tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1065:1329  function unstake(uint256 _tokenID) public view returns (uint256 tokenID, address to, uint256 amount){\r... */\n    tag_4:\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_21\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n    tag_5:\n      tag_23\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_24\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_24:\n      tag_25\n      jump\t// in\n    tag_23:\n      mload(0x40)\n      tag_26\n      swap3\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_6:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_7:\n      tag_32\n      tag_33\n      jump\t// in\n    tag_32:\n      mload(0x40)\n      tag_34\n      swap2\n      swap1\n      tag_35\n      jump\t// in\n    tag_34:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_8:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      mload(0x40)\n      tag_38\n      swap2\n      swap1\n      tag_39\n      jump\t// in\n    tag_38:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_9:\n      tag_40\n      tag_41\n      jump\t// in\n    tag_40:\n      mload(0x40)\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/Missions.sol\":1347:1710  function onERC721Received(address _operator, address _sender, uint256 _tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n    tag_14:\n        /* \"contracts/Missions.sol\":1465:1471  bytes4 */\n      0x00\n        /* \"contracts/Missions.sol\":1513:1529  parentNFTAddress */\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1500:1529  _operator == parentNFTAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1500:1509  _operator */\n      dup6\n        /* \"contracts/Missions.sol\":1500:1529  _operator == parentNFTAddress */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Missions.sol\":1496:1645  if (_operator == parentNFTAddress){\r... */\n      iszero\n      tag_45\n      jumpi\n        /* \"contracts/Missions.sol\":1563:1570  _sender */\n      dup4\n        /* \"contracts/Missions.sol\":1541:1550  s_stakers */\n      0x05\n        /* \"contracts/Missions.sol\":1541:1560  s_stakers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1551:1559  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1541:1560  s_stakers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/Missions.sol\":1541:1570  s_stakers[_tokenID] = _sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1627:1633  5 days */\n      0x069780\n        /* \"contracts/Missions.sol\":1609:1624  block.timestamp */\n      timestamp\n        /* \"contracts/Missions.sol\":1609:1633  block.timestamp + 5 days */\n      tag_46\n      swap2\n      swap1\n      tag_47\n      jump\t// in\n    tag_46:\n        /* \"contracts/Missions.sol\":1581:1596  s_missionTimers */\n      0x06\n        /* \"contracts/Missions.sol\":1581:1606  s_missionTimers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1597:1605  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1581:1606  s_missionTimers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/Missions.sol\":1581:1633  s_missionTimers[_tokenID] = block.timestamp + 5 days */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/Missions.sol\":1496:1645  if (_operator == parentNFTAddress){\r... */\n    tag_45:\n        /* \"contracts/Missions.sol\":1672:1702  this.onERC721Received.selector */\n      shl(0xe0, 0x150b7a02)\n        /* \"contracts/Missions.sol\":1665:1702  return this.onERC721Received.selector */\n      swap1\n      pop\n        /* \"contracts/Missions.sol\":1347:1710  function onERC721Received(address _operator, address _sender, uint256 _tokenID, bytes memory) public virtual returns (bytes4) {\r... */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":1065:1329  function unstake(uint256 _tokenID) public view returns (uint256 tokenID, address to, uint256 amount){\r... */\n    tag_20:\n        /* \"contracts/Missions.sol\":1121:1136  uint256 tokenID */\n      0x00\n        /* \"contracts/Missions.sol\":1138:1148  address to */\n      dup1\n        /* \"contracts/Missions.sol\":1150:1164  uint256 amount */\n      0x00\n        /* \"contracts/Missions.sol\":1198:1207  s_stakers */\n      0x05\n        /* \"contracts/Missions.sol\":1198:1217  s_stakers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1208:1216  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1198:1217  s_stakers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1184:1217  msg.sender == s_stakers[_tokenID] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1184:1194  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":1184:1217  msg.sender == s_stakers[_tokenID] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/Missions.sol\":1176:1252  require(msg.sender == s_stakers[_tokenID], \"Not allowed to claim ownership\") */\n      tag_49\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_50\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_49:\n        /* \"contracts/Missions.sol\":1271:1279  _tokenID */\n      dup4\n        /* \"contracts/Missions.sol\":1281:1291  msg.sender */\n      caller\n        /* \"contracts/Missions.sol\":1293:1308  s_missionTimers */\n      0x06\n        /* \"contracts/Missions.sol\":1293:1318  s_missionTimers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1309:1317  _tokenID */\n      dup8\n        /* \"contracts/Missions.sol\":1293:1318  s_missionTimers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Missions.sol\":1263:1319  return (_tokenID, msg.sender, s_missionTimers[_tokenID]) */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      pop\n        /* \"contracts/Missions.sol\":1065:1329  function unstake(uint256 _tokenID) public view returns (uint256 tokenID, address to, uint256 amount){\r... */\n      swap2\n      swap4\n      swap1\n      swap3\n      pop\n      jump\t// out\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n    tag_25:\n        /* \"contracts/Missions.sol\":953:964  address add */\n      0x00\n        /* \"contracts/Missions.sol\":966:978  uint256 time */\n      dup1\n        /* \"contracts/Missions.sol\":998:1007  s_stakers */\n      0x05\n        /* \"contracts/Missions.sol\":998:1017  s_stakers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1008:1016  _tokenID */\n      dup5\n        /* \"contracts/Missions.sol\":998:1017  s_stakers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/Missions.sol\":1019:1034  s_missionTimers */\n      0x06\n        /* \"contracts/Missions.sol\":1019:1044  s_missionTimers[_tokenID] */\n      0x00\n        /* \"contracts/Missions.sol\":1035:1043  _tokenID */\n      dup6\n        /* \"contracts/Missions.sol\":1019:1044  s_missionTimers[_tokenID] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      sload\n        /* \"contracts/Missions.sol\":990:1045  return (s_stakers[_tokenID], s_missionTimers[_tokenID]) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"contracts/Missions.sol\":895:1053  function getStakes(uint256 _tokenID) public view returns (address add, uint256 time){\r... */\n      swap2\n      pop\n      swap2\n      jump\t// out\n        /* \"contracts/Missions.sol\":488:519  address public parentNFTAddress */\n    tag_29:\n      0x04\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":384:409  IERC20 public parentToken */\n    tag_33:\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":416:440  IERC721 public parentNFT */\n    tag_37:\n      0x02\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/Missions.sol\":447:481  INFTGame public parentNftFunctions */\n    tag_41:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"#utility.yul\":7:417   */\n    tag_54:\n        /* \"#utility.yul\":84:89   */\n      0x00\n        /* \"#utility.yul\":109:174   */\n      tag_56\n        /* \"#utility.yul\":125:173   */\n      tag_57\n        /* \"#utility.yul\":166:172   */\n      dup5\n        /* \"#utility.yul\":125:173   */\n      tag_58\n      jump\t// in\n    tag_57:\n        /* \"#utility.yul\":109:174   */\n      tag_59\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":100:174   */\n      swap1\n      pop\n        /* \"#utility.yul\":197:203   */\n      dup3\n        /* \"#utility.yul\":190:195   */\n      dup2\n        /* \"#utility.yul\":183:204   */\n      mstore\n        /* \"#utility.yul\":235:239   */\n      0x20\n        /* \"#utility.yul\":228:233   */\n      dup2\n        /* \"#utility.yul\":224:240   */\n      add\n        /* \"#utility.yul\":273:276   */\n      dup5\n        /* \"#utility.yul\":264:270   */\n      dup5\n        /* \"#utility.yul\":259:262   */\n      dup5\n        /* \"#utility.yul\":255:271   */\n      add\n        /* \"#utility.yul\":252:277   */\n      gt\n        /* \"#utility.yul\":249:361   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":280:359   */\n      tag_61\n      tag_62\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":249:361   */\n    tag_60:\n        /* \"#utility.yul\":370:411   */\n      tag_63\n        /* \"#utility.yul\":404:410   */\n      dup5\n        /* \"#utility.yul\":399:402   */\n      dup3\n        /* \"#utility.yul\":394:397   */\n      dup6\n        /* \"#utility.yul\":370:411   */\n      tag_64\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":90:417   */\n      pop\n        /* \"#utility.yul\":7:417   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":423:562   */\n    tag_65:\n        /* \"#utility.yul\":469:474   */\n      0x00\n        /* \"#utility.yul\":507:513   */\n      dup2\n        /* \"#utility.yul\":494:514   */\n      calldataload\n        /* \"#utility.yul\":485:514   */\n      swap1\n      pop\n        /* \"#utility.yul\":523:556   */\n      tag_67\n        /* \"#utility.yul\":550:555   */\n      dup2\n        /* \"#utility.yul\":523:556   */\n      tag_68\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":423:562   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":581:919   */\n    tag_69:\n        /* \"#utility.yul\":636:641   */\n      0x00\n        /* \"#utility.yul\":685:688   */\n      dup3\n        /* \"#utility.yul\":678:682   */\n      0x1f\n        /* \"#utility.yul\":670:676   */\n      dup4\n        /* \"#utility.yul\":666:683   */\n      add\n        /* \"#utility.yul\":662:689   */\n      slt\n        /* \"#utility.yul\":652:774   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":693:772   */\n      tag_72\n      tag_73\n      jump\t// in\n    tag_72:\n        /* \"#utility.yul\":652:774   */\n    tag_71:\n        /* \"#utility.yul\":810:816   */\n      dup2\n        /* \"#utility.yul\":797:817   */\n      calldataload\n        /* \"#utility.yul\":835:913   */\n      tag_74\n        /* \"#utility.yul\":909:912   */\n      dup5\n        /* \"#utility.yul\":901:907   */\n      dup3\n        /* \"#utility.yul\":894:898   */\n      0x20\n        /* \"#utility.yul\":886:892   */\n      dup7\n        /* \"#utility.yul\":882:899   */\n      add\n        /* \"#utility.yul\":835:913   */\n      tag_54\n      jump\t// in\n    tag_74:\n        /* \"#utility.yul\":826:913   */\n      swap2\n      pop\n        /* \"#utility.yul\":642:919   */\n      pop\n        /* \"#utility.yul\":581:919   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":925:1064   */\n    tag_75:\n        /* \"#utility.yul\":971:976   */\n      0x00\n        /* \"#utility.yul\":1009:1015   */\n      dup2\n        /* \"#utility.yul\":996:1016   */\n      calldataload\n        /* \"#utility.yul\":987:1016   */\n      swap1\n      pop\n        /* \"#utility.yul\":1025:1058   */\n      tag_77\n        /* \"#utility.yul\":1052:1057   */\n      dup2\n        /* \"#utility.yul\":1025:1058   */\n      tag_78\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":925:1064   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1070:2013   */\n    tag_13:\n        /* \"#utility.yul\":1165:1171   */\n      0x00\n        /* \"#utility.yul\":1173:1179   */\n      dup1\n        /* \"#utility.yul\":1181:1187   */\n      0x00\n        /* \"#utility.yul\":1189:1195   */\n      dup1\n        /* \"#utility.yul\":1238:1241   */\n      0x80\n        /* \"#utility.yul\":1226:1235   */\n      dup6\n        /* \"#utility.yul\":1217:1224   */\n      dup8\n        /* \"#utility.yul\":1213:1236   */\n      sub\n        /* \"#utility.yul\":1209:1242   */\n      slt\n        /* \"#utility.yul\":1206:1326   */\n      iszero\n      tag_80\n      jumpi\n        /* \"#utility.yul\":1245:1324   */\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n        /* \"#utility.yul\":1206:1326   */\n    tag_80:\n        /* \"#utility.yul\":1365:1366   */\n      0x00\n        /* \"#utility.yul\":1390:1443   */\n      tag_83\n        /* \"#utility.yul\":1435:1442   */\n      dup8\n        /* \"#utility.yul\":1426:1432   */\n      dup3\n        /* \"#utility.yul\":1415:1424   */\n      dup9\n        /* \"#utility.yul\":1411:1433   */\n      add\n        /* \"#utility.yul\":1390:1443   */\n      tag_65\n      jump\t// in\n    tag_83:\n        /* \"#utility.yul\":1380:1443   */\n      swap5\n      pop\n        /* \"#utility.yul\":1336:1453   */\n      pop\n        /* \"#utility.yul\":1492:1494   */\n      0x20\n        /* \"#utility.yul\":1518:1571   */\n      tag_84\n        /* \"#utility.yul\":1563:1570   */\n      dup8\n        /* \"#utility.yul\":1554:1560   */\n      dup3\n        /* \"#utility.yul\":1543:1552   */\n      dup9\n        /* \"#utility.yul\":1539:1561   */\n      add\n        /* \"#utility.yul\":1518:1571   */\n      tag_65\n      jump\t// in\n    tag_84:\n        /* \"#utility.yul\":1508:1571   */\n      swap4\n      pop\n        /* \"#utility.yul\":1463:1581   */\n      pop\n        /* \"#utility.yul\":1620:1622   */\n      0x40\n        /* \"#utility.yul\":1646:1699   */\n      tag_85\n        /* \"#utility.yul\":1691:1698   */\n      dup8\n        /* \"#utility.yul\":1682:1688   */\n      dup3\n        /* \"#utility.yul\":1671:1680   */\n      dup9\n        /* \"#utility.yul\":1667:1689   */\n      add\n        /* \"#utility.yul\":1646:1699   */\n      tag_75\n      jump\t// in\n    tag_85:\n        /* \"#utility.yul\":1636:1699   */\n      swap3\n      pop\n        /* \"#utility.yul\":1591:1709   */\n      pop\n        /* \"#utility.yul\":1776:1778   */\n      0x60\n        /* \"#utility.yul\":1765:1774   */\n      dup6\n        /* \"#utility.yul\":1761:1779   */\n      add\n        /* \"#utility.yul\":1748:1780   */\n      calldataload\n        /* \"#utility.yul\":1807:1825   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1799:1805   */\n      dup2\n        /* \"#utility.yul\":1796:1826   */\n      gt\n        /* \"#utility.yul\":1793:1910   */\n      iszero\n      tag_86\n      jumpi\n        /* \"#utility.yul\":1829:1908   */\n      tag_87\n      tag_88\n      jump\t// in\n    tag_87:\n        /* \"#utility.yul\":1793:1910   */\n    tag_86:\n        /* \"#utility.yul\":1934:1996   */\n      tag_89\n        /* \"#utility.yul\":1988:1995   */\n      dup8\n        /* \"#utility.yul\":1979:1985   */\n      dup3\n        /* \"#utility.yul\":1968:1977   */\n      dup9\n        /* \"#utility.yul\":1964:1986   */\n      add\n        /* \"#utility.yul\":1934:1996   */\n      tag_69\n      jump\t// in\n    tag_89:\n        /* \"#utility.yul\":1924:1996   */\n      swap2\n      pop\n        /* \"#utility.yul\":1719:2006   */\n      pop\n        /* \"#utility.yul\":1070:2013   */\n      swap3\n      swap6\n      swap2\n      swap5\n      pop\n      swap3\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2019:2348   */\n    tag_19:\n        /* \"#utility.yul\":2078:2084   */\n      0x00\n        /* \"#utility.yul\":2127:2129   */\n      0x20\n        /* \"#utility.yul\":2115:2124   */\n      dup3\n        /* \"#utility.yul\":2106:2113   */\n      dup5\n        /* \"#utility.yul\":2102:2125   */\n      sub\n        /* \"#utility.yul\":2098:2130   */\n      slt\n        /* \"#utility.yul\":2095:2214   */\n      iszero\n      tag_91\n      jumpi\n        /* \"#utility.yul\":2133:2212   */\n      tag_92\n      tag_82\n      jump\t// in\n    tag_92:\n        /* \"#utility.yul\":2095:2214   */\n    tag_91:\n        /* \"#utility.yul\":2253:2254   */\n      0x00\n        /* \"#utility.yul\":2278:2331   */\n      tag_93\n        /* \"#utility.yul\":2323:2330   */\n      dup5\n        /* \"#utility.yul\":2314:2320   */\n      dup3\n        /* \"#utility.yul\":2303:2312   */\n      dup6\n        /* \"#utility.yul\":2299:2321   */\n      add\n        /* \"#utility.yul\":2278:2331   */\n      tag_75\n      jump\t// in\n    tag_93:\n        /* \"#utility.yul\":2268:2331   */\n      swap2\n      pop\n        /* \"#utility.yul\":2224:2341   */\n      pop\n        /* \"#utility.yul\":2019:2348   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2354:2472   */\n    tag_94:\n        /* \"#utility.yul\":2441:2465   */\n      tag_96\n        /* \"#utility.yul\":2459:2464   */\n      dup2\n        /* \"#utility.yul\":2441:2465   */\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"#utility.yul\":2436:2439   */\n      dup3\n        /* \"#utility.yul\":2429:2466   */\n      mstore\n        /* \"#utility.yul\":2354:2472   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2478:2593   */\n    tag_98:\n        /* \"#utility.yul\":2563:2586   */\n      tag_100\n        /* \"#utility.yul\":2580:2585   */\n      dup2\n        /* \"#utility.yul\":2563:2586   */\n      tag_101\n      jump\t// in\n    tag_100:\n        /* \"#utility.yul\":2558:2561   */\n      dup3\n        /* \"#utility.yul\":2551:2587   */\n      mstore\n        /* \"#utility.yul\":2478:2593   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2599:2758   */\n    tag_102:\n        /* \"#utility.yul\":2700:2751   */\n      tag_104\n        /* \"#utility.yul\":2745:2750   */\n      dup2\n        /* \"#utility.yul\":2700:2751   */\n      tag_105\n      jump\t// in\n    tag_104:\n        /* \"#utility.yul\":2695:2698   */\n      dup3\n        /* \"#utility.yul\":2688:2752   */\n      mstore\n        /* \"#utility.yul\":2599:2758   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2764:2925   */\n    tag_106:\n        /* \"#utility.yul\":2866:2918   */\n      tag_108\n        /* \"#utility.yul\":2912:2917   */\n      dup2\n        /* \"#utility.yul\":2866:2918   */\n      tag_109\n      jump\t// in\n    tag_108:\n        /* \"#utility.yul\":2861:2864   */\n      dup3\n        /* \"#utility.yul\":2854:2919   */\n      mstore\n        /* \"#utility.yul\":2764:2925   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2931:3094   */\n    tag_110:\n        /* \"#utility.yul\":3034:3087   */\n      tag_112\n        /* \"#utility.yul\":3081:3086   */\n      dup2\n        /* \"#utility.yul\":3034:3087   */\n      tag_113\n      jump\t// in\n    tag_112:\n        /* \"#utility.yul\":3029:3032   */\n      dup3\n        /* \"#utility.yul\":3022:3088   */\n      mstore\n        /* \"#utility.yul\":2931:3094   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3100:3466   */\n    tag_114:\n        /* \"#utility.yul\":3242:3245   */\n      0x00\n        /* \"#utility.yul\":3263:3330   */\n      tag_116\n        /* \"#utility.yul\":3327:3329   */\n      0x1e\n        /* \"#utility.yul\":3322:3325   */\n      dup4\n        /* \"#utility.yul\":3263:3330   */\n      tag_117\n      jump\t// in\n    tag_116:\n        /* \"#utility.yul\":3256:3330   */\n      swap2\n      pop\n        /* \"#utility.yul\":3339:3432   */\n      tag_118\n        /* \"#utility.yul\":3428:3431   */\n      dup3\n        /* \"#utility.yul\":3339:3432   */\n      tag_119\n      jump\t// in\n    tag_118:\n        /* \"#utility.yul\":3457:3459   */\n      0x20\n        /* \"#utility.yul\":3452:3455   */\n      dup3\n        /* \"#utility.yul\":3448:3460   */\n      add\n        /* \"#utility.yul\":3441:3460   */\n      swap1\n      pop\n        /* \"#utility.yul\":3100:3466   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3472:3590   */\n    tag_120:\n        /* \"#utility.yul\":3559:3583   */\n      tag_122\n        /* \"#utility.yul\":3577:3582   */\n      dup2\n        /* \"#utility.yul\":3559:3583   */\n      tag_123\n      jump\t// in\n    tag_122:\n        /* \"#utility.yul\":3554:3557   */\n      dup3\n        /* \"#utility.yul\":3547:3584   */\n      mstore\n        /* \"#utility.yul\":3472:3590   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3596:3818   */\n    tag_31:\n        /* \"#utility.yul\":3689:3693   */\n      0x00\n        /* \"#utility.yul\":3727:3729   */\n      0x20\n        /* \"#utility.yul\":3716:3725   */\n      dup3\n        /* \"#utility.yul\":3712:3730   */\n      add\n        /* \"#utility.yul\":3704:3730   */\n      swap1\n      pop\n        /* \"#utility.yul\":3740:3811   */\n      tag_125\n        /* \"#utility.yul\":3808:3809   */\n      0x00\n        /* \"#utility.yul\":3797:3806   */\n      dup4\n        /* \"#utility.yul\":3793:3810   */\n      add\n        /* \"#utility.yul\":3784:3790   */\n      dup5\n        /* \"#utility.yul\":3740:3811   */\n      tag_94\n      jump\t// in\n    tag_125:\n        /* \"#utility.yul\":3596:3818   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3824:4156   */\n    tag_27:\n        /* \"#utility.yul\":3945:3949   */\n      0x00\n        /* \"#utility.yul\":3983:3985   */\n      0x40\n        /* \"#utility.yul\":3972:3981   */\n      dup3\n        /* \"#utility.yul\":3968:3986   */\n      add\n        /* \"#utility.yul\":3960:3986   */\n      swap1\n      pop\n        /* \"#utility.yul\":3996:4067   */\n      tag_127\n        /* \"#utility.yul\":4064:4065   */\n      0x00\n        /* \"#utility.yul\":4053:4062   */\n      dup4\n        /* \"#utility.yul\":4049:4066   */\n      add\n        /* \"#utility.yul\":4040:4046   */\n      dup6\n        /* \"#utility.yul\":3996:4067   */\n      tag_94\n      jump\t// in\n    tag_127:\n        /* \"#utility.yul\":4077:4149   */\n      tag_128\n        /* \"#utility.yul\":4145:4147   */\n      0x20\n        /* \"#utility.yul\":4134:4143   */\n      dup4\n        /* \"#utility.yul\":4130:4148   */\n      add\n        /* \"#utility.yul\":4121:4127   */\n      dup5\n        /* \"#utility.yul\":4077:4149   */\n      tag_120\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":3824:4156   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4162:4380   */\n    tag_16:\n        /* \"#utility.yul\":4253:4257   */\n      0x00\n        /* \"#utility.yul\":4291:4293   */\n      0x20\n        /* \"#utility.yul\":4280:4289   */\n      dup3\n        /* \"#utility.yul\":4276:4294   */\n      add\n        /* \"#utility.yul\":4268:4294   */\n      swap1\n      pop\n        /* \"#utility.yul\":4304:4373   */\n      tag_130\n        /* \"#utility.yul\":4370:4371   */\n      0x00\n        /* \"#utility.yul\":4359:4368   */\n      dup4\n        /* \"#utility.yul\":4355:4372   */\n      add\n        /* \"#utility.yul\":4346:4352   */\n      dup5\n        /* \"#utility.yul\":4304:4373   */\n      tag_98\n      jump\t// in\n    tag_130:\n        /* \"#utility.yul\":4162:4380   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4386:4636   */\n    tag_35:\n        /* \"#utility.yul\":4493:4497   */\n      0x00\n        /* \"#utility.yul\":4531:4533   */\n      0x20\n        /* \"#utility.yul\":4520:4529   */\n      dup3\n        /* \"#utility.yul\":4516:4534   */\n      add\n        /* \"#utility.yul\":4508:4534   */\n      swap1\n      pop\n        /* \"#utility.yul\":4544:4629   */\n      tag_132\n        /* \"#utility.yul\":4626:4627   */\n      0x00\n        /* \"#utility.yul\":4615:4624   */\n      dup4\n        /* \"#utility.yul\":4611:4628   */\n      add\n        /* \"#utility.yul\":4602:4608   */\n      dup5\n        /* \"#utility.yul\":4544:4629   */\n      tag_102\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":4386:4636   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4642:4894   */\n    tag_39:\n        /* \"#utility.yul\":4750:4754   */\n      0x00\n        /* \"#utility.yul\":4788:4790   */\n      0x20\n        /* \"#utility.yul\":4777:4786   */\n      dup3\n        /* \"#utility.yul\":4773:4791   */\n      add\n        /* \"#utility.yul\":4765:4791   */\n      swap1\n      pop\n        /* \"#utility.yul\":4801:4887   */\n      tag_134\n        /* \"#utility.yul\":4884:4885   */\n      0x00\n        /* \"#utility.yul\":4873:4882   */\n      dup4\n        /* \"#utility.yul\":4869:4886   */\n      add\n        /* \"#utility.yul\":4860:4866   */\n      dup5\n        /* \"#utility.yul\":4801:4887   */\n      tag_106\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":4642:4894   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4900:5154   */\n    tag_43:\n        /* \"#utility.yul\":5009:5013   */\n      0x00\n        /* \"#utility.yul\":5047:5049   */\n      0x20\n        /* \"#utility.yul\":5036:5045   */\n      dup3\n        /* \"#utility.yul\":5032:5050   */\n      add\n        /* \"#utility.yul\":5024:5050   */\n      swap1\n      pop\n        /* \"#utility.yul\":5060:5147   */\n      tag_136\n        /* \"#utility.yul\":5144:5145   */\n      0x00\n        /* \"#utility.yul\":5133:5142   */\n      dup4\n        /* \"#utility.yul\":5129:5146   */\n      add\n        /* \"#utility.yul\":5120:5126   */\n      dup5\n        /* \"#utility.yul\":5060:5147   */\n      tag_110\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":4900:5154   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5160:5579   */\n    tag_51:\n        /* \"#utility.yul\":5326:5330   */\n      0x00\n        /* \"#utility.yul\":5364:5366   */\n      0x20\n        /* \"#utility.yul\":5353:5362   */\n      dup3\n        /* \"#utility.yul\":5349:5367   */\n      add\n        /* \"#utility.yul\":5341:5367   */\n      swap1\n      pop\n        /* \"#utility.yul\":5413:5422   */\n      dup2\n        /* \"#utility.yul\":5407:5411   */\n      dup2\n        /* \"#utility.yul\":5403:5423   */\n      sub\n        /* \"#utility.yul\":5399:5400   */\n      0x00\n        /* \"#utility.yul\":5388:5397   */\n      dup4\n        /* \"#utility.yul\":5384:5401   */\n      add\n        /* \"#utility.yul\":5377:5424   */\n      mstore\n        /* \"#utility.yul\":5441:5572   */\n      tag_138\n        /* \"#utility.yul\":5567:5571   */\n      dup2\n        /* \"#utility.yul\":5441:5572   */\n      tag_114\n      jump\t// in\n    tag_138:\n        /* \"#utility.yul\":5433:5572   */\n      swap1\n      pop\n        /* \"#utility.yul\":5160:5579   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5585:6027   */\n    tag_22:\n        /* \"#utility.yul\":5734:5738   */\n      0x00\n        /* \"#utility.yul\":5772:5774   */\n      0x60\n        /* \"#utility.yul\":5761:5770   */\n      dup3\n        /* \"#utility.yul\":5757:5775   */\n      add\n        /* \"#utility.yul\":5749:5775   */\n      swap1\n      pop\n        /* \"#utility.yul\":5785:5856   */\n      tag_140\n        /* \"#utility.yul\":5853:5854   */\n      0x00\n        /* \"#utility.yul\":5842:5851   */\n      dup4\n        /* \"#utility.yul\":5838:5855   */\n      add\n        /* \"#utility.yul\":5829:5835   */\n      dup7\n        /* \"#utility.yul\":5785:5856   */\n      tag_120\n      jump\t// in\n    tag_140:\n        /* \"#utility.yul\":5866:5938   */\n      tag_141\n        /* \"#utility.yul\":5934:5936   */\n      0x20\n        /* \"#utility.yul\":5923:5932   */\n      dup4\n        /* \"#utility.yul\":5919:5937   */\n      add\n        /* \"#utility.yul\":5910:5916   */\n      dup6\n        /* \"#utility.yul\":5866:5938   */\n      tag_94\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":5948:6020   */\n      tag_142\n        /* \"#utility.yul\":6016:6018   */\n      0x40\n        /* \"#utility.yul\":6005:6014   */\n      dup4\n        /* \"#utility.yul\":6001:6019   */\n      add\n        /* \"#utility.yul\":5992:5998   */\n      dup5\n        /* \"#utility.yul\":5948:6020   */\n      tag_120\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":5585:6027   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6033:6162   */\n    tag_59:\n        /* \"#utility.yul\":6067:6073   */\n      0x00\n        /* \"#utility.yul\":6094:6114   */\n      tag_144\n      tag_145\n      jump\t// in\n    tag_144:\n        /* \"#utility.yul\":6084:6114   */\n      swap1\n      pop\n        /* \"#utility.yul\":6123:6156   */\n      tag_146\n        /* \"#utility.yul\":6151:6155   */\n      dup3\n        /* \"#utility.yul\":6143:6149   */\n      dup3\n        /* \"#utility.yul\":6123:6156   */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":6033:6162   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6168:6243   */\n    tag_145:\n        /* \"#utility.yul\":6201:6207   */\n      0x00\n        /* \"#utility.yul\":6234:6236   */\n      0x40\n        /* \"#utility.yul\":6228:6237   */\n      mload\n        /* \"#utility.yul\":6218:6237   */\n      swap1\n      pop\n        /* \"#utility.yul\":6168:6243   */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":6249:6556   */\n    tag_58:\n        /* \"#utility.yul\":6310:6314   */\n      0x00\n        /* \"#utility.yul\":6400:6418   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6392:6398   */\n      dup3\n        /* \"#utility.yul\":6389:6419   */\n      gt\n        /* \"#utility.yul\":6386:6442   */\n      iszero\n      tag_150\n      jumpi\n        /* \"#utility.yul\":6422:6440   */\n      tag_151\n      tag_152\n      jump\t// in\n    tag_151:\n        /* \"#utility.yul\":6386:6442   */\n    tag_150:\n        /* \"#utility.yul\":6460:6489   */\n      tag_153\n        /* \"#utility.yul\":6482:6488   */\n      dup3\n        /* \"#utility.yul\":6460:6489   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":6452:6489   */\n      swap1\n      pop\n        /* \"#utility.yul\":6544:6548   */\n      0x20\n        /* \"#utility.yul\":6538:6542   */\n      dup2\n        /* \"#utility.yul\":6534:6549   */\n      add\n        /* \"#utility.yul\":6526:6549   */\n      swap1\n      pop\n        /* \"#utility.yul\":6249:6556   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6562:6731   */\n    tag_117:\n        /* \"#utility.yul\":6646:6657   */\n      0x00\n        /* \"#utility.yul\":6680:6686   */\n      dup3\n        /* \"#utility.yul\":6675:6678   */\n      dup3\n        /* \"#utility.yul\":6668:6687   */\n      mstore\n        /* \"#utility.yul\":6720:6724   */\n      0x20\n        /* \"#utility.yul\":6715:6718   */\n      dup3\n        /* \"#utility.yul\":6711:6725   */\n      add\n        /* \"#utility.yul\":6696:6725   */\n      swap1\n      pop\n        /* \"#utility.yul\":6562:6731   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6737:7042   */\n    tag_47:\n        /* \"#utility.yul\":6777:6780   */\n      0x00\n        /* \"#utility.yul\":6796:6816   */\n      tag_157\n        /* \"#utility.yul\":6814:6815   */\n      dup3\n        /* \"#utility.yul\":6796:6816   */\n      tag_123\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":6791:6816   */\n      swap2\n      pop\n        /* \"#utility.yul\":6830:6850   */\n      tag_158\n        /* \"#utility.yul\":6848:6849   */\n      dup4\n        /* \"#utility.yul\":6830:6850   */\n      tag_123\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":6825:6850   */\n      swap3\n      pop\n        /* \"#utility.yul\":6984:6985   */\n      dup3\n        /* \"#utility.yul\":6916:6982   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6912:6986   */\n      sub\n        /* \"#utility.yul\":6909:6910   */\n      dup3\n        /* \"#utility.yul\":6906:6987   */\n      gt\n        /* \"#utility.yul\":6903:7010   */\n      iszero\n      tag_159\n      jumpi\n        /* \"#utility.yul\":6990:7008   */\n      tag_160\n      tag_161\n      jump\t// in\n    tag_160:\n        /* \"#utility.yul\":6903:7010   */\n    tag_159:\n        /* \"#utility.yul\":7034:7035   */\n      dup3\n        /* \"#utility.yul\":7031:7032   */\n      dup3\n        /* \"#utility.yul\":7027:7036   */\n      add\n        /* \"#utility.yul\":7020:7036   */\n      swap1\n      pop\n        /* \"#utility.yul\":6737:7042   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7048:7144   */\n    tag_97:\n        /* \"#utility.yul\":7085:7092   */\n      0x00\n        /* \"#utility.yul\":7114:7138   */\n      tag_163\n        /* \"#utility.yul\":7132:7137   */\n      dup3\n        /* \"#utility.yul\":7114:7138   */\n      tag_164\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":7103:7138   */\n      swap1\n      pop\n        /* \"#utility.yul\":7048:7144   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7150:7299   */\n    tag_101:\n        /* \"#utility.yul\":7186:7193   */\n      0x00\n        /* \"#utility.yul\":7226:7292   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7219:7224   */\n      dup3\n        /* \"#utility.yul\":7215:7293   */\n      and\n        /* \"#utility.yul\":7204:7293   */\n      swap1\n      pop\n        /* \"#utility.yul\":7150:7299   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7305:7431   */\n    tag_164:\n        /* \"#utility.yul\":7342:7349   */\n      0x00\n        /* \"#utility.yul\":7382:7424   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7375:7380   */\n      dup3\n        /* \"#utility.yul\":7371:7425   */\n      and\n        /* \"#utility.yul\":7360:7425   */\n      swap1\n      pop\n        /* \"#utility.yul\":7305:7431   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7437:7514   */\n    tag_123:\n        /* \"#utility.yul\":7474:7481   */\n      0x00\n        /* \"#utility.yul\":7503:7508   */\n      dup2\n        /* \"#utility.yul\":7492:7508   */\n      swap1\n      pop\n        /* \"#utility.yul\":7437:7514   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7520:7660   */\n    tag_105:\n        /* \"#utility.yul\":7584:7593   */\n      0x00\n        /* \"#utility.yul\":7617:7654   */\n      tag_169\n        /* \"#utility.yul\":7648:7653   */\n      dup3\n        /* \"#utility.yul\":7617:7654   */\n      tag_170\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":7604:7654   */\n      swap1\n      pop\n        /* \"#utility.yul\":7520:7660   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7666:7807   */\n    tag_109:\n        /* \"#utility.yul\":7731:7740   */\n      0x00\n        /* \"#utility.yul\":7764:7801   */\n      tag_172\n        /* \"#utility.yul\":7795:7800   */\n      dup3\n        /* \"#utility.yul\":7764:7801   */\n      tag_170\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":7751:7801   */\n      swap1\n      pop\n        /* \"#utility.yul\":7666:7807   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7813:7955   */\n    tag_113:\n        /* \"#utility.yul\":7879:7888   */\n      0x00\n        /* \"#utility.yul\":7912:7949   */\n      tag_174\n        /* \"#utility.yul\":7943:7948   */\n      dup3\n        /* \"#utility.yul\":7912:7949   */\n      tag_170\n      jump\t// in\n    tag_174:\n        /* \"#utility.yul\":7899:7949   */\n      swap1\n      pop\n        /* \"#utility.yul\":7813:7955   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7961:8087   */\n    tag_170:\n        /* \"#utility.yul\":8011:8020   */\n      0x00\n        /* \"#utility.yul\":8044:8081   */\n      tag_176\n        /* \"#utility.yul\":8075:8080   */\n      dup3\n        /* \"#utility.yul\":8044:8081   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":8031:8081   */\n      swap1\n      pop\n        /* \"#utility.yul\":7961:8087   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8093:8206   */\n    tag_177:\n        /* \"#utility.yul\":8143:8152   */\n      0x00\n        /* \"#utility.yul\":8176:8200   */\n      tag_179\n        /* \"#utility.yul\":8194:8199   */\n      dup3\n        /* \"#utility.yul\":8176:8200   */\n      tag_164\n      jump\t// in\n    tag_179:\n        /* \"#utility.yul\":8163:8200   */\n      swap1\n      pop\n        /* \"#utility.yul\":8093:8206   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8212:8366   */\n    tag_64:\n        /* \"#utility.yul\":8296:8302   */\n      dup3\n        /* \"#utility.yul\":8291:8294   */\n      dup2\n        /* \"#utility.yul\":8286:8289   */\n      dup4\n        /* \"#utility.yul\":8273:8303   */\n      calldatacopy\n        /* \"#utility.yul\":8358:8359   */\n      0x00\n        /* \"#utility.yul\":8349:8355   */\n      dup4\n        /* \"#utility.yul\":8344:8347   */\n      dup4\n        /* \"#utility.yul\":8340:8356   */\n      add\n        /* \"#utility.yul\":8333:8360   */\n      mstore\n        /* \"#utility.yul\":8212:8366   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8372:8653   */\n    tag_147:\n        /* \"#utility.yul\":8455:8482   */\n      tag_182\n        /* \"#utility.yul\":8477:8481   */\n      dup3\n        /* \"#utility.yul\":8455:8482   */\n      tag_154\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":8447:8453   */\n      dup2\n        /* \"#utility.yul\":8443:8483   */\n      add\n        /* \"#utility.yul\":8585:8591   */\n      dup2\n        /* \"#utility.yul\":8573:8583   */\n      dup2\n        /* \"#utility.yul\":8570:8592   */\n      lt\n        /* \"#utility.yul\":8549:8567   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":8537:8547   */\n      dup3\n        /* \"#utility.yul\":8534:8568   */\n      gt\n        /* \"#utility.yul\":8531:8593   */\n      or\n        /* \"#utility.yul\":8528:8616   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":8596:8614   */\n      tag_184\n      tag_152\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":8528:8616   */\n    tag_183:\n        /* \"#utility.yul\":8636:8646   */\n      dup1\n        /* \"#utility.yul\":8632:8634   */\n      0x40\n        /* \"#utility.yul\":8625:8647   */\n      mstore\n        /* \"#utility.yul\":8415:8653   */\n      pop\n        /* \"#utility.yul\":8372:8653   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8659:8839   */\n    tag_161:\n        /* \"#utility.yul\":8707:8784   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8704:8705   */\n      0x00\n        /* \"#utility.yul\":8697:8785   */\n      mstore\n        /* \"#utility.yul\":8804:8808   */\n      0x11\n        /* \"#utility.yul\":8801:8802   */\n      0x04\n        /* \"#utility.yul\":8794:8809   */\n      mstore\n        /* \"#utility.yul\":8828:8832   */\n      0x24\n        /* \"#utility.yul\":8825:8826   */\n      0x00\n        /* \"#utility.yul\":8818:8833   */\n      revert\n        /* \"#utility.yul\":8845:9025   */\n    tag_152:\n        /* \"#utility.yul\":8893:8970   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8890:8891   */\n      0x00\n        /* \"#utility.yul\":8883:8971   */\n      mstore\n        /* \"#utility.yul\":8990:8994   */\n      0x41\n        /* \"#utility.yul\":8987:8988   */\n      0x04\n        /* \"#utility.yul\":8980:8995   */\n      mstore\n        /* \"#utility.yul\":9014:9018   */\n      0x24\n        /* \"#utility.yul\":9011:9012   */\n      0x00\n        /* \"#utility.yul\":9004:9019   */\n      revert\n        /* \"#utility.yul\":9031:9148   */\n    tag_73:\n        /* \"#utility.yul\":9140:9141   */\n      0x00\n        /* \"#utility.yul\":9137:9138   */\n      dup1\n        /* \"#utility.yul\":9130:9142   */\n      revert\n        /* \"#utility.yul\":9154:9271   */\n    tag_62:\n        /* \"#utility.yul\":9263:9264   */\n      0x00\n        /* \"#utility.yul\":9260:9261   */\n      dup1\n        /* \"#utility.yul\":9253:9265   */\n      revert\n        /* \"#utility.yul\":9277:9394   */\n    tag_88:\n        /* \"#utility.yul\":9386:9387   */\n      0x00\n        /* \"#utility.yul\":9383:9384   */\n      dup1\n        /* \"#utility.yul\":9376:9388   */\n      revert\n        /* \"#utility.yul\":9400:9517   */\n    tag_82:\n        /* \"#utility.yul\":9509:9510   */\n      0x00\n        /* \"#utility.yul\":9506:9507   */\n      dup1\n        /* \"#utility.yul\":9499:9511   */\n      revert\n        /* \"#utility.yul\":9523:9625   */\n    tag_154:\n        /* \"#utility.yul\":9564:9570   */\n      0x00\n        /* \"#utility.yul\":9615:9617   */\n      0x1f\n        /* \"#utility.yul\":9611:9618   */\n      not\n        /* \"#utility.yul\":9606:9608   */\n      0x1f\n        /* \"#utility.yul\":9599:9604   */\n      dup4\n        /* \"#utility.yul\":9595:9609   */\n      add\n        /* \"#utility.yul\":9591:9619   */\n      and\n        /* \"#utility.yul\":9581:9619   */\n      swap1\n      pop\n        /* \"#utility.yul\":9523:9625   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9631:9811   */\n    tag_119:\n        /* \"#utility.yul\":9771:9803   */\n      0x4e6f7420616c6c6f77656420746f20636c61696d206f776e6572736869700000\n        /* \"#utility.yul\":9767:9768   */\n      0x00\n        /* \"#utility.yul\":9759:9765   */\n      dup3\n        /* \"#utility.yul\":9755:9769   */\n      add\n        /* \"#utility.yul\":9748:9804   */\n      mstore\n        /* \"#utility.yul\":9631:9811   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9817:9939   */\n    tag_68:\n        /* \"#utility.yul\":9890:9914   */\n      tag_194\n        /* \"#utility.yul\":9908:9913   */\n      dup2\n        /* \"#utility.yul\":9890:9914   */\n      tag_97\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":9883:9888   */\n      dup2\n        /* \"#utility.yul\":9880:9915   */\n      eq\n        /* \"#utility.yul\":9870:9933   */\n      tag_195\n      jumpi\n        /* \"#utility.yul\":9929:9930   */\n      0x00\n        /* \"#utility.yul\":9926:9927   */\n      dup1\n        /* \"#utility.yul\":9919:9931   */\n      revert\n        /* \"#utility.yul\":9870:9933   */\n    tag_195:\n        /* \"#utility.yul\":9817:9939   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9945:10067   */\n    tag_78:\n        /* \"#utility.yul\":10018:10042   */\n      tag_197\n        /* \"#utility.yul\":10036:10041   */\n      dup2\n        /* \"#utility.yul\":10018:10042   */\n      tag_123\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":10011:10016   */\n      dup2\n        /* \"#utility.yul\":10008:10043   */\n      eq\n        /* \"#utility.yul\":9998:10061   */\n      tag_198\n      jumpi\n        /* \"#utility.yul\":10057:10058   */\n      0x00\n        /* \"#utility.yul\":10054:10055   */\n      dup1\n        /* \"#utility.yul\":10047:10059   */\n      revert\n        /* \"#utility.yul\":9998:10061   */\n    tag_198:\n        /* \"#utility.yul\":9945:10067   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202d18a8fd5272aeaf57788d8fd0042a311925504fd900c1002eb3f369252141cc64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_18": {
									"entryPoint": null,
									"id": 18,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_301": {
									"entryPoint": null,
									"id": 301,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_address_fromMemory": {
									"entryPoint": 346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 428,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 460,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 465,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:1355:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "70:80:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "80:22:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "95:6:5"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "89:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "89:13:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "80:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "138:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "111:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "111:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "111:33:5"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "48:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "56:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "64:5:5",
														"type": ""
													}
												],
												"src": "7:143:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "250:413:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "296:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "298:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "298:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "298:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "271:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "280:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "267:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "267:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "292:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "263:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "263:32:5"
															},
															"nodeType": "YulIf",
															"src": "260:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "389:128:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "404:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "418:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "408:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "433:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "479:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "490:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "475:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "475:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "499:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "443:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "443:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "433:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "527:129:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "542:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "556:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "546:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "572:74:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "618:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "629:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "614:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "638:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nodeType": "YulIdentifier",
																			"src": "582:31:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:64:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "572:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_address_fromMemory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "212:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "223:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "235:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "243:6:5",
														"type": ""
													}
												],
												"src": "156:507:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "709:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "719:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "735:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "729:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "729:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "719:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "702:6:5",
														"type": ""
													}
												],
												"src": "669:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "795:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "805:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "834:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "816:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "816:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "805:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "777:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "787:7:5",
														"type": ""
													}
												],
												"src": "750:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "897:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "907:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "922:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "918:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "918:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "907:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "879:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "889:7:5",
														"type": ""
													}
												],
												"src": "852:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1073:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1090:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1093:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1083:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1083:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1083:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "984:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1213:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1216:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1206:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1206:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1206:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "1107:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1273:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1330:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1339:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1342:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "1332:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1332:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1332:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1296:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "1321:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "1303:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1303:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "1293:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1293:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1286:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1286:43:5"
															},
															"nodeType": "YulIf",
															"src": "1283:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1266:5:5",
														"type": ""
													}
												],
												"src": "1230:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50604051610bb9380380610bb98339818101604052810190610032919061015a565b600160008190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506101e8565b600081519050610154816101d1565b92915050565b60008060408385031215610171576101706101cc565b5b600061017f85828601610145565b925050602061019085828601610145565b9150509250929050565b60006101a5826101ac565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b600080fd5b6101da8161019a565b81146101e557600080fd5b50565b6109c2806101f76000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806366bb863b1161005b57806366bb863b1461011557806380a5400114610133578063b8e33fb214610151578063fead3d6e1461016f5761007d565b8063150b7a02146100825780632e17de78146100b2578063472343b9146100e4575b600080fd5b61009c600480360381019061009791906104bf565b61018d565b6040516100a99190610630565b60405180910390f35b6100cc60048036038101906100c79190610542565b610270565b6040516100db939291906106bc565b60405180910390f35b6100fe60048036038101906100f99190610542565b610339565b60405161010c929190610607565b60405180910390f35b61011d61038d565b60405161012a91906105ec565b60405180910390f35b61013b6103b3565b604051610148919061064b565b60405180910390f35b6101596103d9565b6040516101669190610666565b60405180910390f35b6101776103ff565b6040516101849190610681565b60405180910390f35b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561025e57836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506206978042610246919061075a565b60066000858152602001908152602001600020819055505b63150b7a0260e01b9050949350505050565b60008060006005600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d9061069c565b60405180910390fd5b833360066000878152602001908152602001600020549250925092509193909250565b6000806005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660008581526020019081526020016000205491509150915091565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061043861043384610718565b6106f3565b90508281526020810184848401111561045457610453610915565b5b61045f848285610872565b509392505050565b6000813590506104768161095e565b92915050565b600082601f83011261049157610490610910565b5b81356104a1848260208601610425565b91505092915050565b6000813590506104b981610975565b92915050565b600080600080608085870312156104d9576104d861091f565b5b60006104e787828801610467565b94505060206104f887828801610467565b9350506040610509878288016104aa565b925050606085013567ffffffffffffffff81111561052a5761052961091a565b5b6105368782880161047c565b91505092959194509250565b6000602082840312156105585761055761091f565b5b6000610566848285016104aa565b91505092915050565b610578816107b0565b82525050565b610587816107c2565b82525050565b61059681610818565b82525050565b6105a58161082a565b82525050565b6105b48161083c565b82525050565b60006105c7601e83610749565b91506105d282610935565b602082019050919050565b6105e68161080e565b82525050565b6000602082019050610601600083018461056f565b92915050565b600060408201905061061c600083018561056f565b61062960208301846105dd565b9392505050565b6000602082019050610645600083018461057e565b92915050565b6000602082019050610660600083018461058d565b92915050565b600060208201905061067b600083018461059c565b92915050565b600060208201905061069660008301846105ab565b92915050565b600060208201905081810360008301526106b5816105ba565b9050919050565b60006060820190506106d160008301866105dd565b6106de602083018561056f565b6106eb60408301846105dd565b949350505050565b60006106fd61070e565b90506107098282610881565b919050565b6000604051905090565b600067ffffffffffffffff821115610733576107326108e1565b5b61073c82610924565b9050602081019050919050565b600082825260208201905092915050565b60006107658261080e565b91506107708361080e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107a5576107a46108b2565b5b828201905092915050565b60006107bb826107ee565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108238261084e565b9050919050565b60006108358261084e565b9050919050565b60006108478261084e565b9050919050565b600061085982610860565b9050919050565b600061086b826107ee565b9050919050565b82818337600083830152505050565b61088a82610924565b810181811067ffffffffffffffff821117156108a9576108a86108e1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7420616c6c6f77656420746f20636c61696d206f776e6572736869700000600082015250565b610967816107b0565b811461097257600080fd5b50565b61097e8161080e565b811461098957600080fd5b5056fea26469706673582212202d18a8fd5272aeaf57788d8fd0042a311925504fd900c1002eb3f369252141cc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xBB9 CODESIZE SUB DUP1 PUSH2 0xBB9 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x15A JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP2 SWAP1 SSTORE POP DUP2 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x3 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP PUSH2 0x1E8 JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x154 DUP2 PUSH2 0x1D1 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x171 JUMPI PUSH2 0x170 PUSH2 0x1CC JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x17F DUP6 DUP3 DUP7 ADD PUSH2 0x145 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x190 DUP6 DUP3 DUP7 ADD PUSH2 0x145 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1A5 DUP3 PUSH2 0x1AC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1DA DUP2 PUSH2 0x19A JUMP JUMPDEST DUP2 EQ PUSH2 0x1E5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x9C2 DUP1 PUSH2 0x1F7 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66BB863B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x16F JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x472343B9 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP3 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x25E JUMPI DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x69780 TIMESTAMP PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438 PUSH2 0x433 DUP5 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x915 JUMP JUMPDEST JUMPDEST PUSH2 0x45F DUP5 DUP3 DUP6 PUSH2 0x872 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x476 DUP2 PUSH2 0x95E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x910 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x425 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4B9 DUP2 PUSH2 0x975 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4D9 JUMPI PUSH2 0x4D8 PUSH2 0x91F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E7 DUP8 DUP3 DUP9 ADD PUSH2 0x467 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4F8 DUP8 DUP3 DUP9 ADD PUSH2 0x467 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x509 DUP8 DUP3 DUP9 ADD PUSH2 0x4AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0x91A JUMP JUMPDEST JUMPDEST PUSH2 0x536 DUP8 DUP3 DUP9 ADD PUSH2 0x47C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x91F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x566 DUP5 DUP3 DUP6 ADD PUSH2 0x4AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x578 DUP2 PUSH2 0x7B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x587 DUP2 PUSH2 0x7C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x596 DUP2 PUSH2 0x818 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5A5 DUP2 PUSH2 0x82A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5B4 DUP2 PUSH2 0x83C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C7 PUSH1 0x1E DUP4 PUSH2 0x749 JUMP JUMPDEST SWAP2 POP PUSH2 0x5D2 DUP3 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E6 DUP2 PUSH2 0x80E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x601 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x61C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x629 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x645 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x660 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x58D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x67B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x59C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x696 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6B5 DUP2 PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x6D1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x6DE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x6EB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5DD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x709 DUP3 DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST PUSH2 0x73C DUP3 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x765 DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0x770 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x7A5 JUMPI PUSH2 0x7A4 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BB DUP3 PUSH2 0x7EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x823 DUP3 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP3 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x847 DUP3 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x859 DUP3 PUSH2 0x860 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86B DUP3 PUSH2 0x7EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x88A DUP3 PUSH2 0x924 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F77656420746F20636C61696D206F776E6572736869700000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x967 DUP2 PUSH2 0x7B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x97E DUP2 PUSH2 0x80E JUMP JUMPDEST DUP2 EQ PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D XOR 0xA8 REVERT MSTORE PUSH19 0xAEAF57788D8FD0042A311925504FD900C1002E 0xB3 RETURN PUSH10 0x252141CC64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:1409:4:-:0;;;526:262;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:0;1806:7;:22;;;;614:12:4;594:9;;:33;;;;;;;;;;;;;;;;;;668:12;638:18;;:43;;;;;;;;;;;;;;;;;;713:14;692:11;;:36;;;;;;;;;;;;;;;;;;758:12;739:16;;:31;;;;;;;;;;;;;;;;;;526:262;;341:1409;;7:143:5;64:5;95:6;89:13;80:22;;111:33;138:5;111:33;:::i;:::-;7:143;;;;:::o;156:507::-;235:6;243;292:2;280:9;271:7;267:23;263:32;260:119;;;298:79;;:::i;:::-;260:119;418:1;443:64;499:7;490:6;479:9;475:22;443:64;:::i;:::-;433:74;;389:128;556:2;582:64;638:7;629:6;618:9;614:22;582:64;:::i;:::-;572:74;;527:129;156:507;;;;;:::o;750:96::-;787:7;816:24;834:5;816:24;:::i;:::-;805:35;;750:96;;;:::o;852:126::-;889:7;929:42;922:5;918:54;907:65;;852:126;;;:::o;1107:117::-;1216:1;1213;1206:12;1230:122;1303:24;1321:5;1303:24;:::i;:::-;1296:5;1293:35;1283:63;;1342:1;1339;1332:12;1283:63;1230:122;:::o;341:1409:4:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getStakes_327": {
									"entryPoint": 825,
									"id": 327,
									"parameterSlots": 1,
									"returnSlots": 2
								},
								"@onERC721Received_395": {
									"entryPoint": 397,
									"id": 395,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"@parentNFTAddress_271": {
									"entryPoint": 909,
									"id": 271,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNFT_266": {
									"entryPoint": 985,
									"id": 266,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentNftFunctions_269": {
									"entryPoint": 1023,
									"id": 269,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@parentToken_263": {
									"entryPoint": 947,
									"id": 263,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstake_357": {
									"entryPoint": 624,
									"id": 357,
									"parameterSlots": 1,
									"returnSlots": 3
								},
								"abi_decode_available_length_t_bytes_memory_ptr": {
									"entryPoint": 1061,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 1127,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes_memory_ptr": {
									"entryPoint": 1148,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1194,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 1215,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1346,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1391,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes4_to_t_bytes4_fromStack": {
									"entryPoint": 1406,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack": {
									"entryPoint": 1421,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack": {
									"entryPoint": 1451,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1466,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 1501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1516,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1543,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed": {
									"entryPoint": 1584,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed": {
									"entryPoint": 1611,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed": {
									"entryPoint": 1638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed": {
									"entryPoint": 1665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1692,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 1724,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 1779,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_allocation_size_t_bytes_memory_ptr": {
									"entryPoint": 1816,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 1865,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1968,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 1986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2030,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2062,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$117_to_t_address": {
									"entryPoint": 2072,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC721_$233_to_t_address": {
									"entryPoint": 2090,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_INFTGame_$258_to_t_address": {
									"entryPoint": 2108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 2126,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 2144,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_calldata_to_memory": {
									"entryPoint": 2162,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"finalize_allocation": {
									"entryPoint": 2177,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"panic_error_0x11": {
									"entryPoint": 2226,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 2273,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d": {
									"entryPoint": 2320,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae": {
									"entryPoint": 2325,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": 2330,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2335,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"round_up_to_mul_of_32": {
									"entryPoint": 2340,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"store_literal_in_memory_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05": {
									"entryPoint": 2357,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2398,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2421,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:10070:5",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "90:327:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "100:74:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "166:6:5"
																			}
																		],
																		"functionName": {
																			"name": "array_allocation_size_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "125:40:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "125:48:5"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nodeType": "YulIdentifier",
																	"src": "109:15:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "109:65:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "100:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "190:5:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "197:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "183:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "183:21:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "183:21:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "213:27:5",
															"value": {
																"arguments": [
																	{
																		"name": "array",
																		"nodeType": "YulIdentifier",
																		"src": "228:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "235:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "224:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "224:16:5"
															},
															"variables": [
																{
																	"name": "dst",
																	"nodeType": "YulTypedName",
																	"src": "217:3:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "278:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
																				"nodeType": "YulIdentifier",
																				"src": "280:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "280:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "280:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nodeType": "YulIdentifier",
																				"src": "259:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "264:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "255:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "255:16:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "273:3:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "252:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:25:5"
															},
															"nodeType": "YulIf",
															"src": "249:112:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "394:3:5"
																	},
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "399:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "404:6:5"
																	}
																],
																"functionName": {
																	"name": "copy_calldata_to_memory",
																	"nodeType": "YulIdentifier",
																	"src": "370:23:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "370:41:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "370:41:5"
														}
													]
												},
												"name": "abi_decode_available_length_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "63:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "68:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "76:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "84:5:5",
														"type": ""
													}
												],
												"src": "7:410:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "475:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "485:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "507:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "494:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "494:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "485:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "523:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "523:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "523:33:5"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "453:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "461:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "469:5:5",
														"type": ""
													}
												],
												"src": "423:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "642:277:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "691:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
																				"nodeType": "YulIdentifier",
																				"src": "693:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "693:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "693:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "670:6:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "678:4:5",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "666:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "666:17:5"
																			},
																			{
																				"name": "end",
																				"nodeType": "YulIdentifier",
																				"src": "685:3:5"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nodeType": "YulIdentifier",
																			"src": "662:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "662:27:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "655:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "655:35:5"
															},
															"nodeType": "YulIf",
															"src": "652:122:5"
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "783:34:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "810:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "797:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "797:20:5"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "787:6:5",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "826:87:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "886:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "894:4:5",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "882:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "882:17:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "901:6:5"
																	},
																	{
																		"name": "end",
																		"nodeType": "YulIdentifier",
																		"src": "909:3:5"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_t_bytes_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "835:46:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "835:78:5"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nodeType": "YulIdentifier",
																	"src": "826:5:5"
																}
															]
														}
													]
												},
												"name": "abi_decode_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "620:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "628:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nodeType": "YulTypedName",
														"src": "636:5:5",
														"type": ""
													}
												],
												"src": "581:338:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "977:87:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "987:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1009:6:5"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "996:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "996:20:5"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "987:5:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1052:5:5"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1025:26:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1025:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1025:33:5"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "955:6:5",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "963:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "971:5:5",
														"type": ""
													}
												],
												"src": "925:139:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1196:817:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1243:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1245:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1245:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1245:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1217:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1226:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1213:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1213:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1238:3:5",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1209:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "1209:33:5"
															},
															"nodeType": "YulIf",
															"src": "1206:120:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "1336:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1351:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1365:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1355:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1380:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1415:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1426:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1411:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1411:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1435:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1390:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1390:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1380:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1463:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1478:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1492:2:5",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1482:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1508:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1543:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1554:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1539:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1539:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1563:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1518:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1518:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1508:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1591:118:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1606:16:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1620:2:5",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1610:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1636:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1671:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1682:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1667:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1667:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1691:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1646:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1646:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1636:6:5"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1719:287:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1734:46:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1765:9:5"
																					},
																					{
																						"kind": "number",
																						"nodeType": "YulLiteral",
																						"src": "1776:2:5",
																						"type": "",
																						"value": "96"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1761:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1761:18:5"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nodeType": "YulIdentifier",
																			"src": "1748:12:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1748:32:5"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1738:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"body": {
																		"nodeType": "YulBlock",
																		"src": "1827:83:5",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [],
																					"functionName": {
																						"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
																						"nodeType": "YulIdentifier",
																						"src": "1829:77:5"
																					},
																					"nodeType": "YulFunctionCall",
																					"src": "1829:79:5"
																				},
																				"nodeType": "YulExpressionStatement",
																				"src": "1829:79:5"
																			}
																		]
																	},
																	"condition": {
																		"arguments": [
																			{
																				"name": "offset",
																				"nodeType": "YulIdentifier",
																				"src": "1799:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1807:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "1796:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1796:30:5"
																	},
																	"nodeType": "YulIf",
																	"src": "1793:117:5"
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1924:72:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1968:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1979:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1964:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1964:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1988:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes_memory_ptr",
																			"nodeType": "YulIdentifier",
																			"src": "1934:29:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1934:62:5"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nodeType": "YulIdentifier",
																			"src": "1924:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1142:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1153:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1165:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1173:6:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "1181:6:5",
														"type": ""
													},
													{
														"name": "value3",
														"nodeType": "YulTypedName",
														"src": "1189:6:5",
														"type": ""
													}
												],
												"src": "1070:943:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2085:263:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2131:83:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "2133:77:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2133:79:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2133:79:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2106:7:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "2115:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "2102:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2102:23:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2127:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "2098:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2098:32:5"
															},
															"nodeType": "YulIf",
															"src": "2095:119:5"
														},
														{
															"nodeType": "YulBlock",
															"src": "2224:117:5",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "2239:15:5",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2253:1:5",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "2243:6:5",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "2268:63:5",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "2303:9:5"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "2314:6:5"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "2299:3:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2299:22:5"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "2323:7:5"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "2278:20:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2278:53:5"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "2268:6:5"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "2055:9:5",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "2066:7:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "2078:6:5",
														"type": ""
													}
												],
												"src": "2019:329:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2419:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2436:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2459:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2441:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2441:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2429:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2429:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2429:37:5"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2407:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2414:3:5",
														"type": ""
													}
												],
												"src": "2354:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2541:52:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2558:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2580:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes4",
																			"nodeType": "YulIdentifier",
																			"src": "2563:16:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2563:23:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2551:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2551:36:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2551:36:5"
														}
													]
												},
												"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2529:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2536:3:5",
														"type": ""
													}
												],
												"src": "2478:115:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2678:80:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2695:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2745:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$117_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2700:44:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2700:51:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2688:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2688:64:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2688:64:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2666:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2673:3:5",
														"type": ""
													}
												],
												"src": "2599:159:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2844:81:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2861:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2912:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC721_$233_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "2866:45:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2866:52:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "2854:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "2854:65:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2854:65:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2832:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2839:3:5",
														"type": ""
													}
												],
												"src": "2764:161:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3012:82:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3029:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3081:5:5"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_INFTGame_$258_to_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "3034:46:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3034:53:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3022:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3022:66:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3022:66:5"
														}
													]
												},
												"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3000:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3007:3:5",
														"type": ""
													}
												],
												"src": "2931:163:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3246:220:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3256:74:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3322:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3327:2:5",
																		"type": "",
																		"value": "30"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3263:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3263:67:5"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3256:3:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3428:3:5"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05",
																	"nodeType": "YulIdentifier",
																	"src": "3339:88:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3339:93:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3339:93:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3441:19:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3452:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3457:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3448:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3448:12:5"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3441:3:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3234:3:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3242:3:5",
														"type": ""
													}
												],
												"src": "3100:366:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3537:53:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3554:3:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3577:5:5"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3559:17:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3559:24:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3547:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3547:37:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3547:37:5"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3525:5:5",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3532:3:5",
														"type": ""
													}
												],
												"src": "3472:118:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3694:124:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3704:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3716:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3727:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3712:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3712:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3704:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3784:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3797:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3808:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3793:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3793:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3740:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3740:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3740:71:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3666:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3678:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3689:4:5",
														"type": ""
													}
												],
												"src": "3596:222:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3950:206:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3960:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3972:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3983:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3968:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3968:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3960:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4040:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4053:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4064:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4049:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4049:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3996:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "3996:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3996:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "4121:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4145:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4130:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4130:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4077:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4077:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4077:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3914:9:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "3926:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3934:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3945:4:5",
														"type": ""
													}
												],
												"src": "3824:332:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4258:122:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4268:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4280:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4291:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4276:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4276:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4268:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4346:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4359:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4370:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4355:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4355:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes4_to_t_bytes4_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4304:41:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4304:69:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4304:69:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4230:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4242:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4253:4:5",
														"type": ""
													}
												],
												"src": "4162:218:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4498:138:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4508:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4520:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4531:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4516:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4516:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4508:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4602:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4615:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4626:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4611:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4611:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4544:57:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4544:85:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4544:85:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4470:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4482:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4493:4:5",
														"type": ""
													}
												],
												"src": "4386:250:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4755:139:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4765:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4777:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4788:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4773:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4773:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4765:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4860:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4873:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4884:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4869:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4869:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4801:58:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "4801:86:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4801:86:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4727:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4739:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4750:4:5",
														"type": ""
													}
												],
												"src": "4642:252:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5014:140:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5024:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5036:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5047:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5032:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5032:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5024:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5120:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5133:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5144:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5129:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5129:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5060:59:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5060:87:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5060:87:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4986:9:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4998:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5009:4:5",
														"type": ""
													}
												],
												"src": "4900:254:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5331:248:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5341:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5353:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5364:2:5",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5349:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5349:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5341:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5388:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5399:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5384:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5384:17:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5407:4:5"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5413:9:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5403:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5403:20:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5377:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5377:47:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5377:47:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5433:139:5",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5567:4:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5441:124:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5441:131:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5433:4:5"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5311:9:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5326:4:5",
														"type": ""
													}
												],
												"src": "5160:419:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5739:288:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5749:26:5",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5761:9:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5772:2:5",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5757:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5757:18:5"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5749:4:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "5829:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5842:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5853:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5838:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5838:17:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5785:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5785:71:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5785:71:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nodeType": "YulIdentifier",
																		"src": "5910:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5923:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5934:2:5",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5919:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5919:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5866:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5866:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5866:72:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nodeType": "YulIdentifier",
																		"src": "5992:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6005:9:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6016:2:5",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6001:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6001:18:5"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5948:43:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "5948:72:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5948:72:5"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5695:9:5",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "5707:6:5",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "5715:6:5",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "5723:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5734:4:5",
														"type": ""
													}
												],
												"src": "5585:442:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6074:88:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6084:30:5",
															"value": {
																"arguments": [],
																"functionName": {
																	"name": "allocate_unbounded",
																	"nodeType": "YulIdentifier",
																	"src": "6094:18:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6094:20:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6084:6:5"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "6143:6:5"
																	},
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6151:4:5"
																	}
																],
																"functionName": {
																	"name": "finalize_allocation",
																	"nodeType": "YulIdentifier",
																	"src": "6123:19:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6123:33:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6123:33:5"
														}
													]
												},
												"name": "allocate_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6058:4:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6067:6:5",
														"type": ""
													}
												],
												"src": "6033:129:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6208:35:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6218:19:5",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6234:2:5",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "6228:5:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6228:9:5"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "6218:6:5"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "6201:6:5",
														"type": ""
													}
												],
												"src": "6168:75:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6315:241:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6420:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "6422:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6422:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6422:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6392:6:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6400:18:5",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6389:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6389:30:5"
															},
															"nodeType": "YulIf",
															"src": "6386:56:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6452:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6482:6:5"
																	}
																],
																"functionName": {
																	"name": "round_up_to_mul_of_32",
																	"nodeType": "YulIdentifier",
																	"src": "6460:21:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6460:29:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6452:4:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6526:23:5",
															"value": {
																"arguments": [
																	{
																		"name": "size",
																		"nodeType": "YulIdentifier",
																		"src": "6538:4:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6544:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6534:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6534:15:5"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nodeType": "YulIdentifier",
																	"src": "6526:4:5"
																}
															]
														}
													]
												},
												"name": "array_allocation_size_t_bytes_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6299:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "6310:4:5",
														"type": ""
													}
												],
												"src": "6249:307:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6658:73:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6675:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "6680:6:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6668:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6668:19:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6668:19:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6696:29:5",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "6715:3:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6720:4:5",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6711:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6711:14:5"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "6696:11:5"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "6630:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "6635:6:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "6646:11:5",
														"type": ""
													}
												],
												"src": "6562:169:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6781:261:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6791:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6814:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6796:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6796:20:5"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6791:1:5"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6825:25:5",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6848:1:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6830:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6830:20:5"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6825:1:5"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6988:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6990:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6990:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6990:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6909:1:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6916:66:5",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "6984:1:5"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6912:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6912:74:5"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "6906:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "6906:81:5"
															},
															"nodeType": "YulIf",
															"src": "6903:107:5"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7020:16:5",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "7031:1:5"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "7034:1:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7027:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7027:9:5"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "7020:3:5"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6768:1:5",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6771:1:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "6777:3:5",
														"type": ""
													}
												],
												"src": "6737:305:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7093:51:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7103:35:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7132:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7114:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7114:24:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7103:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7075:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7085:7:5",
														"type": ""
													}
												],
												"src": "7048:96:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7194:105:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7204:89:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7219:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7226:66:5",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7215:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7215:78:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7204:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7176:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7186:7:5",
														"type": ""
													}
												],
												"src": "7150:149:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7350:81:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7360:65:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7375:5:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7382:42:5",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7371:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7371:54:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7360:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7332:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7342:7:5",
														"type": ""
													}
												],
												"src": "7305:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7482:32:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7492:16:5",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7503:5:5"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7492:7:5"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7464:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7474:7:5",
														"type": ""
													}
												],
												"src": "7437:77:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7594:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7604:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7648:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7617:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7617:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7604:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$117_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7574:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7584:9:5",
														"type": ""
													}
												],
												"src": "7520:140:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7741:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7751:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7795:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7764:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7764:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7751:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC721_$233_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7721:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7731:9:5",
														"type": ""
													}
												],
												"src": "7666:141:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7889:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7899:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7943:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "7912:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "7912:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "7899:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_INFTGame_$258_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7869:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "7879:9:5",
														"type": ""
													}
												],
												"src": "7813:142:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8021:66:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8031:50:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8075:5:5"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8044:30:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8044:37:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8031:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8001:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8011:9:5",
														"type": ""
													}
												],
												"src": "7961:126:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8153:53:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "8163:37:5",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "8194:5:5"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "8176:17:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8176:24:5"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nodeType": "YulIdentifier",
																	"src": "8163:9:5"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8133:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nodeType": "YulTypedName",
														"src": "8143:9:5",
														"type": ""
													}
												],
												"src": "8093:113:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8263:103:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nodeType": "YulIdentifier",
																		"src": "8286:3:5"
																	},
																	{
																		"name": "src",
																		"nodeType": "YulIdentifier",
																		"src": "8291:3:5"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "8296:6:5"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nodeType": "YulIdentifier",
																	"src": "8273:12:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8273:30:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8273:30:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nodeType": "YulIdentifier",
																				"src": "8344:3:5"
																			},
																			{
																				"name": "length",
																				"nodeType": "YulIdentifier",
																				"src": "8349:6:5"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8340:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8340:16:5"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8358:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8333:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8333:27:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8333:27:5"
														}
													]
												},
												"name": "copy_calldata_to_memory",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nodeType": "YulTypedName",
														"src": "8245:3:5",
														"type": ""
													},
													{
														"name": "dst",
														"nodeType": "YulTypedName",
														"src": "8250:3:5",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "8255:6:5",
														"type": ""
													}
												],
												"src": "8212:154:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8415:238:5",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "8425:58:5",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nodeType": "YulIdentifier",
																		"src": "8447:6:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "size",
																				"nodeType": "YulIdentifier",
																				"src": "8477:4:5"
																			}
																		],
																		"functionName": {
																			"name": "round_up_to_mul_of_32",
																			"nodeType": "YulIdentifier",
																			"src": "8455:21:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8455:27:5"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "8443:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8443:40:5"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nodeType": "YulTypedName",
																	"src": "8429:10:5",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8594:22:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nodeType": "YulIdentifier",
																				"src": "8596:16:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8596:18:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8596:18:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8537:10:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8549:18:5",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nodeType": "YulIdentifier",
																			"src": "8534:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8534:34:5"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nodeType": "YulIdentifier",
																				"src": "8573:10:5"
																			},
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8585:6:5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nodeType": "YulIdentifier",
																			"src": "8570:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8570:22:5"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nodeType": "YulIdentifier",
																	"src": "8531:2:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8531:62:5"
															},
															"nodeType": "YulIf",
															"src": "8528:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8632:2:5",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nodeType": "YulIdentifier",
																		"src": "8636:10:5"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8625:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8625:22:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8625:22:5"
														}
													]
												},
												"name": "finalize_allocation",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8401:6:5",
														"type": ""
													},
													{
														"name": "size",
														"nodeType": "YulTypedName",
														"src": "8409:4:5",
														"type": ""
													}
												],
												"src": "8372:281:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8687:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8704:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8707:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8697:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8697:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8697:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8801:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8804:4:5",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8794:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8794:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8794:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8825:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8828:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8818:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8818:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8818:15:5"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "8659:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8873:152:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8890:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8893:77:5",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8883:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8883:88:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8883:88:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8987:1:5",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8990:4:5",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8980:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "8980:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8980:15:5"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9011:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9014:4:5",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9004:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9004:15:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9004:15:5"
														}
													]
												},
												"name": "panic_error_0x41",
												"nodeType": "YulFunctionDefinition",
												"src": "8845:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9120:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9137:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9140:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9130:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9130:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9130:12:5"
														}
													]
												},
												"name": "revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d",
												"nodeType": "YulFunctionDefinition",
												"src": "9031:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9243:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9260:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9263:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9253:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9253:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9253:12:5"
														}
													]
												},
												"name": "revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae",
												"nodeType": "YulFunctionDefinition",
												"src": "9154:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9366:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9383:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9386:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9376:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9376:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9376:12:5"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "9277:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9489:28:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9506:1:5",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9509:1:5",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "9499:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9499:12:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9499:12:5"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "9400:117:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9571:54:5",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "9581:38:5",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9599:5:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9606:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9595:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9595:14:5"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9615:2:5",
																				"type": "",
																				"value": "31"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nodeType": "YulIdentifier",
																			"src": "9611:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9611:7:5"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "9591:3:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9591:28:5"
															},
															"variableNames": [
																{
																	"name": "result",
																	"nodeType": "YulIdentifier",
																	"src": "9581:6:5"
																}
															]
														}
													]
												},
												"name": "round_up_to_mul_of_32",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9554:5:5",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "result",
														"nodeType": "YulTypedName",
														"src": "9564:6:5",
														"type": ""
													}
												],
												"src": "9523:102:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9737:74:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9759:6:5"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9767:1:5",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9755:3:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9755:14:5"
																	},
																	{
																		"hexValue": "4e6f7420616c6c6f77656420746f20636c61696d206f776e657273686970",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9771:32:5",
																		"type": "",
																		"value": "Not allowed to claim ownership"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9748:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9748:56:5"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9748:56:5"
														}
													]
												},
												"name": "store_literal_in_memory_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9729:6:5",
														"type": ""
													}
												],
												"src": "9631:180:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9860:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9917:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9926:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9929:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9919:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9919:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9919:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9883:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9908:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9890:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9890:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9880:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9880:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9873:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "9873:43:5"
															},
															"nodeType": "YulIf",
															"src": "9870:63:5"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9853:5:5",
														"type": ""
													}
												],
												"src": "9817:122:5"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9988:79:5",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "10045:16:5",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10054:1:5",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "10057:1:5",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "10047:6:5"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "10047:12:5"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "10047:12:5"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "10011:5:5"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "10036:5:5"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "10018:17:5"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "10018:24:5"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "10008:2:5"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "10008:35:5"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "10001:6:5"
																},
																"nodeType": "YulFunctionCall",
																"src": "10001:43:5"
															},
															"nodeType": "YulIf",
															"src": "9998:63:5"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9981:5:5",
														"type": ""
													}
												],
												"src": "9945:122:5"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_available_length_t_bytes_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_bytes_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory(src, dst, length)\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    // bytes\n    function abi_decode_t_bytes_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_bytes_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 96))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value3 := abi_decode_t_bytes_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bytes4_to_t_bytes4_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes4(value))\n    }\n\n    function abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$117_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC721_$233_to_t_address(value))\n    }\n\n    function abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_INFTGame_$258_to_t_address(value))\n    }\n\n    function abi_encode_t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 30)\n        store_literal_in_memory_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes4_to_t_bytes4_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$117__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$117_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_IERC721_$233__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC721_$233_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_contract$_INFTGame_$258__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_INFTGame_$258_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_address_t_uint256__to_t_uint256_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_allocation_size_t_bytes_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_contract$_IERC20_$117_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_IERC721_$233_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_contract$_INFTGame_$258_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(value)\n    }\n\n    function copy_calldata_to_memory(src, dst, length) {\n        calldatacopy(dst, src, length)\n        // clear end\n        mstore(add(dst, length), 0)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function store_literal_in_memory_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not allowed to claim ownership\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 5,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c806366bb863b1161005b57806366bb863b1461011557806380a5400114610133578063b8e33fb214610151578063fead3d6e1461016f5761007d565b8063150b7a02146100825780632e17de78146100b2578063472343b9146100e4575b600080fd5b61009c600480360381019061009791906104bf565b61018d565b6040516100a99190610630565b60405180910390f35b6100cc60048036038101906100c79190610542565b610270565b6040516100db939291906106bc565b60405180910390f35b6100fe60048036038101906100f99190610542565b610339565b60405161010c929190610607565b60405180910390f35b61011d61038d565b60405161012a91906105ec565b60405180910390f35b61013b6103b3565b604051610148919061064b565b60405180910390f35b6101596103d9565b6040516101669190610666565b60405180910390f35b6101776103ff565b6040516101849190610681565b60405180910390f35b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16141561025e57836005600085815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506206978042610246919061075a565b60066000858152602001908152602001600020819055505b63150b7a0260e01b9050949350505050565b60008060006005600085815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610316576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161030d9061069c565b60405180910390fd5b833360066000878152602001908152602001600020549250925092509193909250565b6000806005600084815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600660008581526020019081526020016000205491509150915091565b600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600061043861043384610718565b6106f3565b90508281526020810184848401111561045457610453610915565b5b61045f848285610872565b509392505050565b6000813590506104768161095e565b92915050565b600082601f83011261049157610490610910565b5b81356104a1848260208601610425565b91505092915050565b6000813590506104b981610975565b92915050565b600080600080608085870312156104d9576104d861091f565b5b60006104e787828801610467565b94505060206104f887828801610467565b9350506040610509878288016104aa565b925050606085013567ffffffffffffffff81111561052a5761052961091a565b5b6105368782880161047c565b91505092959194509250565b6000602082840312156105585761055761091f565b5b6000610566848285016104aa565b91505092915050565b610578816107b0565b82525050565b610587816107c2565b82525050565b61059681610818565b82525050565b6105a58161082a565b82525050565b6105b48161083c565b82525050565b60006105c7601e83610749565b91506105d282610935565b602082019050919050565b6105e68161080e565b82525050565b6000602082019050610601600083018461056f565b92915050565b600060408201905061061c600083018561056f565b61062960208301846105dd565b9392505050565b6000602082019050610645600083018461057e565b92915050565b6000602082019050610660600083018461058d565b92915050565b600060208201905061067b600083018461059c565b92915050565b600060208201905061069660008301846105ab565b92915050565b600060208201905081810360008301526106b5816105ba565b9050919050565b60006060820190506106d160008301866105dd565b6106de602083018561056f565b6106eb60408301846105dd565b949350505050565b60006106fd61070e565b90506107098282610881565b919050565b6000604051905090565b600067ffffffffffffffff821115610733576107326108e1565b5b61073c82610924565b9050602081019050919050565b600082825260208201905092915050565b60006107658261080e565b91506107708361080e565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156107a5576107a46108b2565b5b828201905092915050565b60006107bb826107ee565b9050919050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006108238261084e565b9050919050565b60006108358261084e565b9050919050565b60006108478261084e565b9050919050565b600061085982610860565b9050919050565b600061086b826107ee565b9050919050565b82818337600083830152505050565b61088a82610924565b810181811067ffffffffffffffff821117156108a9576108a86108e1565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600080fd5b600080fd5b600080fd5b600080fd5b6000601f19601f8301169050919050565b7f4e6f7420616c6c6f77656420746f20636c61696d206f776e6572736869700000600082015250565b610967816107b0565b811461097257600080fd5b50565b61097e8161080e565b811461098957600080fd5b5056fea26469706673582212202d18a8fd5272aeaf57788d8fd0042a311925504fd900c1002eb3f369252141cc64736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x66BB863B GT PUSH2 0x5B JUMPI DUP1 PUSH4 0x66BB863B EQ PUSH2 0x115 JUMPI DUP1 PUSH4 0x80A54001 EQ PUSH2 0x133 JUMPI DUP1 PUSH4 0xB8E33FB2 EQ PUSH2 0x151 JUMPI DUP1 PUSH4 0xFEAD3D6E EQ PUSH2 0x16F JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x150B7A02 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x2E17DE78 EQ PUSH2 0xB2 JUMPI DUP1 PUSH4 0x472343B9 EQ PUSH2 0xE4 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x4BF JUMP JUMPDEST PUSH2 0x18D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xA9 SWAP2 SWAP1 PUSH2 0x630 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xCC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xC7 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x270 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xDB SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x6BC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xFE PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF9 SWAP2 SWAP1 PUSH2 0x542 JUMP JUMPDEST PUSH2 0x339 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x10C SWAP3 SWAP2 SWAP1 PUSH2 0x607 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x11D PUSH2 0x38D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x12A SWAP2 SWAP1 PUSH2 0x5EC JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x13B PUSH2 0x3B3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x148 SWAP2 SWAP1 PUSH2 0x64B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x159 PUSH2 0x3D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x166 SWAP2 SWAP1 PUSH2 0x666 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x177 PUSH2 0x3FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x184 SWAP2 SWAP1 PUSH2 0x681 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x25E JUMPI DUP4 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH3 0x69780 TIMESTAMP PUSH2 0x246 SWAP2 SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP JUMPDEST PUSH4 0x150B7A02 PUSH1 0xE0 SHL SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x316 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x30D SWAP1 PUSH2 0x69C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 CALLER PUSH1 0x6 PUSH1 0x0 DUP8 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP3 POP SWAP3 POP SWAP3 POP SWAP2 SWAP4 SWAP1 SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x5 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x6 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD SWAP2 POP SWAP2 POP SWAP2 POP SWAP2 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x438 PUSH2 0x433 DUP5 PUSH2 0x718 JUMP JUMPDEST PUSH2 0x6F3 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x454 JUMPI PUSH2 0x453 PUSH2 0x915 JUMP JUMPDEST JUMPDEST PUSH2 0x45F DUP5 DUP3 DUP6 PUSH2 0x872 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x476 DUP2 PUSH2 0x95E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x491 JUMPI PUSH2 0x490 PUSH2 0x910 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x4A1 DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x425 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x4B9 DUP2 PUSH2 0x975 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x4D9 JUMPI PUSH2 0x4D8 PUSH2 0x91F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x4E7 DUP8 DUP3 DUP9 ADD PUSH2 0x467 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x4F8 DUP8 DUP3 DUP9 ADD PUSH2 0x467 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x509 DUP8 DUP3 DUP9 ADD PUSH2 0x4AA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 DUP6 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x52A JUMPI PUSH2 0x529 PUSH2 0x91A JUMP JUMPDEST JUMPDEST PUSH2 0x536 DUP8 DUP3 DUP9 ADD PUSH2 0x47C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x558 JUMPI PUSH2 0x557 PUSH2 0x91F JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x566 DUP5 DUP3 DUP6 ADD PUSH2 0x4AA JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x578 DUP2 PUSH2 0x7B0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x587 DUP2 PUSH2 0x7C2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x596 DUP2 PUSH2 0x818 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5A5 DUP2 PUSH2 0x82A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x5B4 DUP2 PUSH2 0x83C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5C7 PUSH1 0x1E DUP4 PUSH2 0x749 JUMP JUMPDEST SWAP2 POP PUSH2 0x5D2 DUP3 PUSH2 0x935 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x5E6 DUP2 PUSH2 0x80E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x601 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x56F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x61C PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x629 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x5DD JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x645 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x57E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x660 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x58D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x67B PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x59C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x696 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x5AB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x6B5 DUP2 PUSH2 0x5BA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x6D1 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x5DD JUMP JUMPDEST PUSH2 0x6DE PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x56F JUMP JUMPDEST PUSH2 0x6EB PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x5DD JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6FD PUSH2 0x70E JUMP JUMPDEST SWAP1 POP PUSH2 0x709 DUP3 DUP3 PUSH2 0x881 JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x733 JUMPI PUSH2 0x732 PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST PUSH2 0x73C DUP3 PUSH2 0x924 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x765 DUP3 PUSH2 0x80E JUMP JUMPDEST SWAP2 POP PUSH2 0x770 DUP4 PUSH2 0x80E JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x7A5 JUMPI PUSH2 0x7A4 PUSH2 0x8B2 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x7BB DUP3 PUSH2 0x7EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x823 DUP3 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x835 DUP3 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x847 DUP3 PUSH2 0x84E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x859 DUP3 PUSH2 0x860 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x86B DUP3 PUSH2 0x7EE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH2 0x88A DUP3 PUSH2 0x924 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x8A9 JUMPI PUSH2 0x8A8 PUSH2 0x8E1 JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420616C6C6F77656420746F20636C61696D206F776E6572736869700000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x967 DUP2 PUSH2 0x7B0 JUMP JUMPDEST DUP2 EQ PUSH2 0x972 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x97E DUP2 PUSH2 0x80E JUMP JUMPDEST DUP2 EQ PUSH2 0x989 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2D XOR 0xA8 REVERT MSTORE PUSH19 0xAEAF57788D8FD0042A311925504FD900C1002E 0xB3 RETURN PUSH10 0x252141CC64736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "341:1409:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1347:363;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1065:264;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;895:158;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;:::-;;;;;;;;488:31;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;384:25;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;416:24;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;447:34;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1347:363;1465:6;1513:16;;;;;;;;;;;1500:29;;:9;:29;;;1496:149;;;1563:7;1541:9;:19;1551:8;1541:19;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;1627:6;1609:15;:24;;;;:::i;:::-;1581:15;:25;1597:8;1581:25;;;;;;;;;;;:52;;;;1496:149;1672:30;;;1665:37;;1347:363;;;;;;:::o;1065:264::-;1121:15;1138:10;1150:14;1198:9;:19;1208:8;1198:19;;;;;;;;;;;;;;;;;;;;;1184:33;;:10;:33;;;1176:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;1271:8;1281:10;1293:15;:25;1309:8;1293:25;;;;;;;;;;;;1263:56;;;;;;1065:264;;;;;:::o;895:158::-;953:11;966:12;998:9;:19;1008:8;998:19;;;;;;;;;;;;;;;;;;;;;1019:15;:25;1035:8;1019:25;;;;;;;;;;;;990:55;;;;895:158;;;:::o;488:31::-;;;;;;;;;;;;;:::o;384:25::-;;;;;;;;;;;;;:::o;416:24::-;;;;;;;;;;;;;:::o;447:34::-;;;;;;;;;;;;;:::o;7:410:5:-;84:5;109:65;125:48;166:6;125:48;:::i;:::-;109:65;:::i;:::-;100:74;;197:6;190:5;183:21;235:4;228:5;224:16;273:3;264:6;259:3;255:16;252:25;249:112;;;280:79;;:::i;:::-;249:112;370:41;404:6;399:3;394;370:41;:::i;:::-;90:327;7:410;;;;;:::o;423:139::-;469:5;507:6;494:20;485:29;;523:33;550:5;523:33;:::i;:::-;423:139;;;;:::o;581:338::-;636:5;685:3;678:4;670:6;666:17;662:27;652:122;;693:79;;:::i;:::-;652:122;810:6;797:20;835:78;909:3;901:6;894:4;886:6;882:17;835:78;:::i;:::-;826:87;;642:277;581:338;;;;:::o;925:139::-;971:5;1009:6;996:20;987:29;;1025:33;1052:5;1025:33;:::i;:::-;925:139;;;;:::o;1070:943::-;1165:6;1173;1181;1189;1238:3;1226:9;1217:7;1213:23;1209:33;1206:120;;;1245:79;;:::i;:::-;1206:120;1365:1;1390:53;1435:7;1426:6;1415:9;1411:22;1390:53;:::i;:::-;1380:63;;1336:117;1492:2;1518:53;1563:7;1554:6;1543:9;1539:22;1518:53;:::i;:::-;1508:63;;1463:118;1620:2;1646:53;1691:7;1682:6;1671:9;1667:22;1646:53;:::i;:::-;1636:63;;1591:118;1776:2;1765:9;1761:18;1748:32;1807:18;1799:6;1796:30;1793:117;;;1829:79;;:::i;:::-;1793:117;1934:62;1988:7;1979:6;1968:9;1964:22;1934:62;:::i;:::-;1924:72;;1719:287;1070:943;;;;;;;:::o;2019:329::-;2078:6;2127:2;2115:9;2106:7;2102:23;2098:32;2095:119;;;2133:79;;:::i;:::-;2095:119;2253:1;2278:53;2323:7;2314:6;2303:9;2299:22;2278:53;:::i;:::-;2268:63;;2224:117;2019:329;;;;:::o;2354:118::-;2441:24;2459:5;2441:24;:::i;:::-;2436:3;2429:37;2354:118;;:::o;2478:115::-;2563:23;2580:5;2563:23;:::i;:::-;2558:3;2551:36;2478:115;;:::o;2599:159::-;2700:51;2745:5;2700:51;:::i;:::-;2695:3;2688:64;2599:159;;:::o;2764:161::-;2866:52;2912:5;2866:52;:::i;:::-;2861:3;2854:65;2764:161;;:::o;2931:163::-;3034:53;3081:5;3034:53;:::i;:::-;3029:3;3022:66;2931:163;;:::o;3100:366::-;3242:3;3263:67;3327:2;3322:3;3263:67;:::i;:::-;3256:74;;3339:93;3428:3;3339:93;:::i;:::-;3457:2;3452:3;3448:12;3441:19;;3100:366;;;:::o;3472:118::-;3559:24;3577:5;3559:24;:::i;:::-;3554:3;3547:37;3472:118;;:::o;3596:222::-;3689:4;3727:2;3716:9;3712:18;3704:26;;3740:71;3808:1;3797:9;3793:17;3784:6;3740:71;:::i;:::-;3596:222;;;;:::o;3824:332::-;3945:4;3983:2;3972:9;3968:18;3960:26;;3996:71;4064:1;4053:9;4049:17;4040:6;3996:71;:::i;:::-;4077:72;4145:2;4134:9;4130:18;4121:6;4077:72;:::i;:::-;3824:332;;;;;:::o;4162:218::-;4253:4;4291:2;4280:9;4276:18;4268:26;;4304:69;4370:1;4359:9;4355:17;4346:6;4304:69;:::i;:::-;4162:218;;;;:::o;4386:250::-;4493:4;4531:2;4520:9;4516:18;4508:26;;4544:85;4626:1;4615:9;4611:17;4602:6;4544:85;:::i;:::-;4386:250;;;;:::o;4642:252::-;4750:4;4788:2;4777:9;4773:18;4765:26;;4801:86;4884:1;4873:9;4869:17;4860:6;4801:86;:::i;:::-;4642:252;;;;:::o;4900:254::-;5009:4;5047:2;5036:9;5032:18;5024:26;;5060:87;5144:1;5133:9;5129:17;5120:6;5060:87;:::i;:::-;4900:254;;;;:::o;5160:419::-;5326:4;5364:2;5353:9;5349:18;5341:26;;5413:9;5407:4;5403:20;5399:1;5388:9;5384:17;5377:47;5441:131;5567:4;5441:131;:::i;:::-;5433:139;;5160:419;;;:::o;5585:442::-;5734:4;5772:2;5761:9;5757:18;5749:26;;5785:71;5853:1;5842:9;5838:17;5829:6;5785:71;:::i;:::-;5866:72;5934:2;5923:9;5919:18;5910:6;5866:72;:::i;:::-;5948;6016:2;6005:9;6001:18;5992:6;5948:72;:::i;:::-;5585:442;;;;;;:::o;6033:129::-;6067:6;6094:20;;:::i;:::-;6084:30;;6123:33;6151:4;6143:6;6123:33;:::i;:::-;6033:129;;;:::o;6168:75::-;6201:6;6234:2;6228:9;6218:19;;6168:75;:::o;6249:307::-;6310:4;6400:18;6392:6;6389:30;6386:56;;;6422:18;;:::i;:::-;6386:56;6460:29;6482:6;6460:29;:::i;:::-;6452:37;;6544:4;6538;6534:15;6526:23;;6249:307;;;:::o;6562:169::-;6646:11;6680:6;6675:3;6668:19;6720:4;6715:3;6711:14;6696:29;;6562:169;;;;:::o;6737:305::-;6777:3;6796:20;6814:1;6796:20;:::i;:::-;6791:25;;6830:20;6848:1;6830:20;:::i;:::-;6825:25;;6984:1;6916:66;6912:74;6909:1;6906:81;6903:107;;;6990:18;;:::i;:::-;6903:107;7034:1;7031;7027:9;7020:16;;6737:305;;;;:::o;7048:96::-;7085:7;7114:24;7132:5;7114:24;:::i;:::-;7103:35;;7048:96;;;:::o;7150:149::-;7186:7;7226:66;7219:5;7215:78;7204:89;;7150:149;;;:::o;7305:126::-;7342:7;7382:42;7375:5;7371:54;7360:65;;7305:126;;;:::o;7437:77::-;7474:7;7503:5;7492:16;;7437:77;;;:::o;7520:140::-;7584:9;7617:37;7648:5;7617:37;:::i;:::-;7604:50;;7520:140;;;:::o;7666:141::-;7731:9;7764:37;7795:5;7764:37;:::i;:::-;7751:50;;7666:141;;;:::o;7813:142::-;7879:9;7912:37;7943:5;7912:37;:::i;:::-;7899:50;;7813:142;;;:::o;7961:126::-;8011:9;8044:37;8075:5;8044:37;:::i;:::-;8031:50;;7961:126;;;:::o;8093:113::-;8143:9;8176:24;8194:5;8176:24;:::i;:::-;8163:37;;8093:113;;;:::o;8212:154::-;8296:6;8291:3;8286;8273:30;8358:1;8349:6;8344:3;8340:16;8333:27;8212:154;;;:::o;8372:281::-;8455:27;8477:4;8455:27;:::i;:::-;8447:6;8443:40;8585:6;8573:10;8570:22;8549:18;8537:10;8534:34;8531:62;8528:88;;;8596:18;;:::i;:::-;8528:88;8636:10;8632:2;8625:22;8415:238;8372:281;;:::o;8659:180::-;8707:77;8704:1;8697:88;8804:4;8801:1;8794:15;8828:4;8825:1;8818:15;8845:180;8893:77;8890:1;8883:88;8990:4;8987:1;8980:15;9014:4;9011:1;9004:15;9031:117;9140:1;9137;9130:12;9154:117;9263:1;9260;9253:12;9277:117;9386:1;9383;9376:12;9400:117;9509:1;9506;9499:12;9523:102;9564:6;9615:2;9611:7;9606:2;9599:5;9595:14;9591:28;9581:38;;9523:102;;;:::o;9631:180::-;9771:32;9767:1;9759:6;9755:14;9748:56;9631:180;:::o;9817:122::-;9890:24;9908:5;9890:24;:::i;:::-;9883:5;9880:35;9870:63;;9929:1;9926;9919:12;9870:63;9817:122;:::o;9945:::-;10018:24;10036:5;10018:24;:::i;:::-;10011:5;10008:35;9998:63;;10057:1;10054;10047:12;9998:63;9945:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "499600",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"getStakes(uint256)": "infinite",
								"onERC721Received(address,address,uint256,bytes)": "infinite",
								"parentNFT()": "2644",
								"parentNFTAddress()": "2514",
								"parentNftFunctions()": "2666",
								"parentToken()": "2622",
								"unstake(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 341,
									"end": 1750,
									"name": "PUSH",
									"source": 4,
									"value": "80"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CALLVALUE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ISZERO",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODESIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SUB",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSHSIZE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH",
									"source": 4,
									"value": "40"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "ADD",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP2",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMP",
									"source": 4,
									"value": "[in]"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "tag",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 526,
									"end": 788,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 1701,
									"end": 1702,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 1806,
									"end": 1813,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 1806,
									"end": 1828,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 614,
									"end": 626,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "2"
								},
								{
									"begin": 594,
									"end": 603,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 594,
									"end": 627,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 594,
									"end": 627,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 668,
									"end": 680,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "3"
								},
								{
									"begin": 638,
									"end": 656,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 638,
									"end": 681,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 638,
									"end": 681,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 713,
									"end": 727,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 692,
									"end": 703,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 692,
									"end": 728,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 692,
									"end": 728,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 758,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 739,
									"end": 755,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "100"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "EXP",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SLOAD",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "NOT",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "DUP4",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "PUSH",
									"source": 4,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 739,
									"end": 770,
									"name": "AND",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "MUL",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "OR",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SWAP1",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "SSTORE",
									"source": 4
								},
								{
									"begin": 739,
									"end": 770,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 526,
									"end": 788,
									"name": "POP",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "JUMP",
									"source": 4
								},
								{
									"begin": 7,
									"end": 150,
									"name": "tag",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 64,
									"end": 69,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 95,
									"end": 101,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 89,
									"end": 102,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 80,
									"end": 102,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 138,
									"end": 143,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 111,
									"end": 144,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "tag",
									"source": 5,
									"value": "12"
								},
								{
									"begin": 111,
									"end": 144,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 7,
									"end": 150,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "tag",
									"source": 5,
									"value": "3"
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 235,
									"end": 241,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 243,
									"end": 249,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 292,
									"end": 294,
									"name": "PUSH",
									"source": 5,
									"value": "40"
								},
								{
									"begin": 280,
									"end": 289,
									"name": "DUP4",
									"source": 5
								},
								{
									"begin": 271,
									"end": 278,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 267,
									"end": 290,
									"name": "SUB",
									"source": 5
								},
								{
									"begin": 263,
									"end": 295,
									"name": "SLT",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "ISZERO",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "tag",
									"source": 5,
									"value": "16"
								},
								{
									"begin": 298,
									"end": 377,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 260,
									"end": 379,
									"name": "tag",
									"source": 5,
									"value": "15"
								},
								{
									"begin": 260,
									"end": 379,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 418,
									"end": 419,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 499,
									"end": 506,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 490,
									"end": 496,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 479,
									"end": 488,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 475,
									"end": 497,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 443,
									"end": 507,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "tag",
									"source": 5,
									"value": "18"
								},
								{
									"begin": 443,
									"end": 507,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 433,
									"end": 507,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 389,
									"end": 517,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 556,
									"end": 558,
									"name": "PUSH",
									"source": 5,
									"value": "20"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 638,
									"end": 645,
									"name": "DUP6",
									"source": 5
								},
								{
									"begin": 629,
									"end": 635,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 618,
									"end": 627,
									"name": "DUP7",
									"source": 5
								},
								{
									"begin": 614,
									"end": 636,
									"name": "ADD",
									"source": 5
								},
								{
									"begin": 582,
									"end": 646,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "10"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "tag",
									"source": 5,
									"value": "19"
								},
								{
									"begin": 582,
									"end": 646,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 572,
									"end": 646,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 527,
									"end": 656,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP3",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 156,
									"end": 663,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "tag",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 787,
									"end": 794,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 834,
									"end": 839,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 816,
									"end": 840,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "tag",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 816,
									"end": 840,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 805,
									"end": 840,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 750,
									"end": 846,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "tag",
									"source": 5,
									"value": "25"
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 889,
									"end": 896,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 929,
									"end": 971,
									"name": "PUSH",
									"source": 5,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 922,
									"end": 927,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 918,
									"end": 972,
									"name": "AND",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 907,
									"end": 972,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP2",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "SWAP1",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 852,
									"end": 978,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "tag",
									"source": 5,
									"value": "17"
								},
								{
									"begin": 1107,
									"end": 1224,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1216,
									"end": 1217,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1213,
									"end": 1214,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1206,
									"end": 1218,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "tag",
									"source": 5,
									"value": "13"
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1321,
									"end": 1326,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "22"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMP",
									"source": 5,
									"value": "[in]"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "tag",
									"source": 5,
									"value": "31"
								},
								{
									"begin": 1303,
									"end": 1327,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1296,
									"end": 1301,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 1293,
									"end": 1328,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 1342,
									"end": 1343,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 1339,
									"end": 1340,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 1332,
									"end": 1344,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "tag",
									"source": 5,
									"value": "32"
								},
								{
									"begin": 1283,
									"end": 1346,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "POP",
									"source": 5
								},
								{
									"begin": 1230,
									"end": 1352,
									"name": "JUMP",
									"source": 5,
									"value": "[out]"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "tag",
									"source": 4,
									"value": "8"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 341,
									"end": 1750,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202d18a8fd5272aeaf57788d8fd0042a311925504fd900c1002eb3f369252141cc64736f6c63430008070033",
									".code": [
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "tag",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "SHR",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "66BB863B"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "GT",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "66BB863B"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "80A54001"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "B8E33FB2"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "FEAD3D6E"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "tag",
											"source": 4,
											"value": "10"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "2E17DE78"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "472343B9"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "tag",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 341,
											"end": 1750,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "tag",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "tag",
											"source": 4,
											"value": "12"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "tag",
											"source": 4,
											"value": "15"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "tag",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "tag",
											"source": 4,
											"value": "18"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "CALLDATASIZE",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "27"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "7"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "38"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "RETURN",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1465,
											"end": 1471,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1513,
											"end": 1529,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1529,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1500,
											"end": 1529,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1509,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1529,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1500,
											"end": 1529,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1500,
											"end": 1529,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1645,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1645,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1496,
											"end": 1645,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1550,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1551,
											"end": 1559,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1560,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "NOT",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "MUL",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1570,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1633,
											"name": "PUSH",
											"source": 4,
											"value": "69780"
										},
										{
											"begin": 1609,
											"end": 1624,
											"name": "TIMESTAMP",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "47"
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1609,
											"end": 1633,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1596,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1597,
											"end": 1605,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1581,
											"end": 1606,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1633,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1633,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1633,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1581,
											"end": 1633,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1496,
											"end": 1645,
											"name": "tag",
											"source": 4,
											"value": "45"
										},
										{
											"begin": 1496,
											"end": 1645,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1672,
											"end": 1702,
											"name": "PUSH",
											"source": 4,
											"value": "150B7A02"
										},
										{
											"begin": 1672,
											"end": 1702,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1672,
											"end": 1702,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1665,
											"end": 1702,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP5",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1347,
											"end": 1710,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1136,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1138,
											"end": 1148,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1150,
											"end": 1164,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1207,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1208,
											"end": 1216,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1198,
											"end": 1217,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1194,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1184,
											"end": 1217,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "PUSH",
											"source": 4,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1176,
											"end": 1252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1271,
											"end": 1279,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1281,
											"end": 1291,
											"name": "CALLER",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1308,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1309,
											"end": 1317,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1293,
											"end": 1318,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1319,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1319,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1319,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1263,
											"end": 1319,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1065,
											"end": 1329,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 953,
											"end": 964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 966,
											"end": 978,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1007,
											"name": "PUSH",
											"source": 4,
											"value": "5"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1016,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 998,
											"end": 1017,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1034,
											"name": "PUSH",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1035,
											"end": 1043,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "KECCAK256",
											"source": 4
										},
										{
											"begin": 1019,
											"end": 1044,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 990,
											"end": 1045,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 895,
											"end": 1053,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 488,
											"end": 519,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 488,
											"end": 519,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 384,
											"end": 409,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 384,
											"end": 409,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "2"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 416,
											"end": 440,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 416,
											"end": 440,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "3"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "100"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "EXP",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DIV",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 447,
											"end": 481,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 447,
											"end": 481,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "tag",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 84,
											"end": 89,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 166,
											"end": 172,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 125,
											"end": 173,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "tag",
											"source": 5,
											"value": "57"
										},
										{
											"begin": 125,
											"end": 173,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 109,
											"end": 174,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "tag",
											"source": 5,
											"value": "56"
										},
										{
											"begin": 109,
											"end": 174,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 100,
											"end": 174,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 197,
											"end": 203,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 190,
											"end": 195,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 183,
											"end": 204,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 235,
											"end": 239,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 228,
											"end": 233,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 224,
											"end": 240,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 273,
											"end": 276,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 264,
											"end": 270,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 259,
											"end": 262,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 255,
											"end": 271,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 252,
											"end": 277,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "tag",
											"source": 5,
											"value": "61"
										},
										{
											"begin": 280,
											"end": 359,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 249,
											"end": 361,
											"name": "tag",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 249,
											"end": 361,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 404,
											"end": 410,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 399,
											"end": 402,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 394,
											"end": 397,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 370,
											"end": 411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "tag",
											"source": 5,
											"value": "63"
										},
										{
											"begin": 370,
											"end": 411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 90,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7,
											"end": 417,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "tag",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 469,
											"end": 474,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 507,
											"end": 513,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 494,
											"end": 514,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 485,
											"end": 514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 523,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "tag",
											"source": 5,
											"value": "67"
										},
										{
											"begin": 523,
											"end": 556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 423,
											"end": 562,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "tag",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 636,
											"end": 641,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 685,
											"end": 688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 678,
											"end": 682,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 670,
											"end": 676,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 666,
											"end": 683,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 662,
											"end": 689,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "tag",
											"source": 5,
											"value": "72"
										},
										{
											"begin": 693,
											"end": 772,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 652,
											"end": 774,
											"name": "tag",
											"source": 5,
											"value": "71"
										},
										{
											"begin": 652,
											"end": 774,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 810,
											"end": 816,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 797,
											"end": 817,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 909,
											"end": 912,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 901,
											"end": 907,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 894,
											"end": 898,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 886,
											"end": 892,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 882,
											"end": 899,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 835,
											"end": 913,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "54"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "tag",
											"source": 5,
											"value": "74"
										},
										{
											"begin": 835,
											"end": 913,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 826,
											"end": 913,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 642,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 581,
											"end": 919,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "tag",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 971,
											"end": 976,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1009,
											"end": 1015,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 996,
											"end": 1016,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 987,
											"end": 1016,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1052,
											"end": 1057,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "tag",
											"source": 5,
											"value": "77"
										},
										{
											"begin": 1025,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 925,
											"end": 1064,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "tag",
											"source": 5,
											"value": "13"
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1165,
											"end": 1171,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1173,
											"end": 1179,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1181,
											"end": 1187,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1189,
											"end": 1195,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 1238,
											"end": 1241,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1226,
											"end": 1235,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1217,
											"end": 1224,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1213,
											"end": 1236,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 1209,
											"end": 1242,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "tag",
											"source": 5,
											"value": "81"
										},
										{
											"begin": 1245,
											"end": 1324,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "tag",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 1206,
											"end": 1326,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1365,
											"end": 1366,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1435,
											"end": 1442,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1426,
											"end": 1432,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1415,
											"end": 1424,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1411,
											"end": 1433,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "tag",
											"source": 5,
											"value": "83"
										},
										{
											"begin": 1390,
											"end": 1443,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1380,
											"end": 1443,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1336,
											"end": 1453,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1492,
											"end": 1494,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1563,
											"end": 1570,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1554,
											"end": 1560,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1543,
											"end": 1552,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1539,
											"end": 1561,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "65"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "tag",
											"source": 5,
											"value": "84"
										},
										{
											"begin": 1518,
											"end": 1571,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 1508,
											"end": 1571,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1463,
											"end": 1581,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1620,
											"end": 1622,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1691,
											"end": 1698,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1682,
											"end": 1688,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1671,
											"end": 1680,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1667,
											"end": 1689,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "tag",
											"source": 5,
											"value": "85"
										},
										{
											"begin": 1646,
											"end": 1699,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1636,
											"end": 1699,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1591,
											"end": 1709,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1776,
											"end": 1778,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 1765,
											"end": 1774,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 1761,
											"end": 1779,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1748,
											"end": 1780,
											"name": "CALLDATALOAD",
											"source": 5
										},
										{
											"begin": 1807,
											"end": 1825,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1799,
											"end": 1805,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 1796,
											"end": 1826,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "tag",
											"source": 5,
											"value": "87"
										},
										{
											"begin": 1829,
											"end": 1908,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "tag",
											"source": 5,
											"value": "86"
										},
										{
											"begin": 1793,
											"end": 1910,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1988,
											"end": 1995,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 1979,
											"end": 1985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 1968,
											"end": 1977,
											"name": "DUP9",
											"source": 5
										},
										{
											"begin": 1964,
											"end": 1986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "69"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "tag",
											"source": 5,
											"value": "89"
										},
										{
											"begin": 1934,
											"end": 1996,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1924,
											"end": 1996,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1719,
											"end": 2006,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP6",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 1070,
											"end": 2013,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "tag",
											"source": 5,
											"value": "19"
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2078,
											"end": 2084,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2127,
											"end": 2129,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 2115,
											"end": 2124,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2106,
											"end": 2113,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2102,
											"end": 2125,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 2098,
											"end": 2130,
											"name": "SLT",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "tag",
											"source": 5,
											"value": "92"
										},
										{
											"begin": 2133,
											"end": 2212,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "tag",
											"source": 5,
											"value": "91"
										},
										{
											"begin": 2095,
											"end": 2214,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2253,
											"end": 2254,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2323,
											"end": 2330,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 2314,
											"end": 2320,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2303,
											"end": 2312,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 2299,
											"end": 2321,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "75"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "tag",
											"source": 5,
											"value": "93"
										},
										{
											"begin": 2278,
											"end": 2331,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2331,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2268,
											"end": 2331,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2224,
											"end": 2341,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2019,
											"end": 2348,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "tag",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2459,
											"end": 2464,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "tag",
											"source": 5,
											"value": "96"
										},
										{
											"begin": 2441,
											"end": 2465,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2436,
											"end": 2439,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2429,
											"end": 2466,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2354,
											"end": 2472,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "tag",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2580,
											"end": 2585,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "tag",
											"source": 5,
											"value": "100"
										},
										{
											"begin": 2563,
											"end": 2586,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2558,
											"end": 2561,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2551,
											"end": 2587,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2478,
											"end": 2593,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "tag",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2745,
											"end": 2750,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "tag",
											"source": 5,
											"value": "104"
										},
										{
											"begin": 2700,
											"end": 2751,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2695,
											"end": 2698,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2688,
											"end": 2752,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2599,
											"end": 2758,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "tag",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2912,
											"end": 2917,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "tag",
											"source": 5,
											"value": "108"
										},
										{
											"begin": 2866,
											"end": 2918,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2861,
											"end": 2864,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 2854,
											"end": 2919,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2764,
											"end": 2925,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "tag",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3081,
											"end": 3086,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "tag",
											"source": 5,
											"value": "112"
										},
										{
											"begin": 3034,
											"end": 3087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3029,
											"end": 3032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3022,
											"end": 3088,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2931,
											"end": 3094,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3100,
											"end": 3466,
											"name": "tag",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 3100,
											"end": 3466,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3242,
											"end": 3245,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3263,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3327,
											"end": 3329,
											"name": "PUSH",
											"source": 5,
											"value": "1E"
										},
										{
											"begin": 3322,
											"end": 3325,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3263,
											"end": 3330,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 3263,
											"end": 3330,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3263,
											"end": 3330,
											"name": "tag",
											"source": 5,
											"value": "116"
										},
										{
											"begin": 3263,
											"end": 3330,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3330,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3256,
											"end": 3330,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3428,
											"end": 3431,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "tag",
											"source": 5,
											"value": "118"
										},
										{
											"begin": 3339,
											"end": 3432,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3457,
											"end": 3459,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3452,
											"end": 3455,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3448,
											"end": 3460,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3441,
											"end": 3460,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3466,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3466,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3466,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3100,
											"end": 3466,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3472,
											"end": 3590,
											"name": "tag",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 3472,
											"end": 3590,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3577,
											"end": 3582,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "tag",
											"source": 5,
											"value": "122"
										},
										{
											"begin": 3559,
											"end": 3583,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3557,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3547,
											"end": 3584,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3590,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3472,
											"end": 3590,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3596,
											"end": 3818,
											"name": "tag",
											"source": 5,
											"value": "31"
										},
										{
											"begin": 3596,
											"end": 3818,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3689,
											"end": 3693,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3727,
											"end": 3729,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3716,
											"end": 3725,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3712,
											"end": 3730,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3704,
											"end": 3730,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3808,
											"end": 3809,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3797,
											"end": 3806,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3793,
											"end": 3810,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3784,
											"end": 3790,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3740,
											"end": 3811,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3740,
											"end": 3811,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3740,
											"end": 3811,
											"name": "tag",
											"source": 5,
											"value": "125"
										},
										{
											"begin": 3740,
											"end": 3811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3818,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3818,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3818,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3596,
											"end": 3818,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 3824,
											"end": 4156,
											"name": "tag",
											"source": 5,
											"value": "27"
										},
										{
											"begin": 3824,
											"end": 4156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3945,
											"end": 3949,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3983,
											"end": 3985,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3972,
											"end": 3981,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3968,
											"end": 3986,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3960,
											"end": 3986,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3960,
											"end": 3986,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3996,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 4064,
											"end": 4065,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4053,
											"end": 4062,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4049,
											"end": 4066,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4040,
											"end": 4046,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3996,
											"end": 4067,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 3996,
											"end": 4067,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 3996,
											"end": 4067,
											"name": "tag",
											"source": 5,
											"value": "127"
										},
										{
											"begin": 3996,
											"end": 4067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4077,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4145,
											"end": 4147,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4130,
											"end": 4148,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4121,
											"end": 4127,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4077,
											"end": 4149,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 4077,
											"end": 4149,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4077,
											"end": 4149,
											"name": "tag",
											"source": 5,
											"value": "128"
										},
										{
											"begin": 4077,
											"end": 4149,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 4156,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 4156,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 4156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 4156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 4156,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3824,
											"end": 4156,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4162,
											"end": 4380,
											"name": "tag",
											"source": 5,
											"value": "16"
										},
										{
											"begin": 4162,
											"end": 4380,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4253,
											"end": 4257,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4291,
											"end": 4293,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4280,
											"end": 4289,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4276,
											"end": 4294,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4294,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4268,
											"end": 4294,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4370,
											"end": 4371,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4359,
											"end": 4368,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4355,
											"end": 4372,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4346,
											"end": 4352,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4304,
											"end": 4373,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "98"
										},
										{
											"begin": 4304,
											"end": 4373,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4304,
											"end": 4373,
											"name": "tag",
											"source": 5,
											"value": "130"
										},
										{
											"begin": 4304,
											"end": 4373,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4380,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4380,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4380,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4162,
											"end": 4380,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "tag",
											"source": 5,
											"value": "35"
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4493,
											"end": 4497,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4531,
											"end": 4533,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4520,
											"end": 4529,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4516,
											"end": 4534,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4508,
											"end": 4534,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4626,
											"end": 4627,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4615,
											"end": 4624,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4611,
											"end": 4628,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4602,
											"end": 4608,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "102"
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "tag",
											"source": 5,
											"value": "132"
										},
										{
											"begin": 4544,
											"end": 4629,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4386,
											"end": 4636,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4642,
											"end": 4894,
											"name": "tag",
											"source": 5,
											"value": "39"
										},
										{
											"begin": 4642,
											"end": 4894,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4750,
											"end": 4754,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4788,
											"end": 4790,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 4777,
											"end": 4786,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4773,
											"end": 4791,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4791,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 4765,
											"end": 4791,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4884,
											"end": 4885,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 4873,
											"end": 4882,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 4869,
											"end": 4886,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 4860,
											"end": 4866,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 4801,
											"end": 4887,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "106"
										},
										{
											"begin": 4801,
											"end": 4887,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 4801,
											"end": 4887,
											"name": "tag",
											"source": 5,
											"value": "134"
										},
										{
											"begin": 4801,
											"end": 4887,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4894,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4894,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4894,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4642,
											"end": 4894,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 4900,
											"end": 5154,
											"name": "tag",
											"source": 5,
											"value": "43"
										},
										{
											"begin": 4900,
											"end": 5154,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5009,
											"end": 5013,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5047,
											"end": 5049,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5036,
											"end": 5045,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5032,
											"end": 5050,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5024,
											"end": 5050,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5144,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5133,
											"end": 5142,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5129,
											"end": 5146,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5120,
											"end": 5126,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5060,
											"end": 5147,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "110"
										},
										{
											"begin": 5060,
											"end": 5147,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5060,
											"end": 5147,
											"name": "tag",
											"source": 5,
											"value": "136"
										},
										{
											"begin": 5060,
											"end": 5147,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 5154,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 5154,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 5154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 5154,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4900,
											"end": 5154,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5160,
											"end": 5579,
											"name": "tag",
											"source": 5,
											"value": "51"
										},
										{
											"begin": 5160,
											"end": 5579,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5326,
											"end": 5330,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5364,
											"end": 5366,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5353,
											"end": 5362,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5349,
											"end": 5367,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5367,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5341,
											"end": 5367,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5413,
											"end": 5422,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5407,
											"end": 5411,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5403,
											"end": 5423,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5399,
											"end": 5400,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5388,
											"end": 5397,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5384,
											"end": 5401,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5377,
											"end": 5424,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5567,
											"end": 5571,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5441,
											"end": 5572,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "114"
										},
										{
											"begin": 5441,
											"end": 5572,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5441,
											"end": 5572,
											"name": "tag",
											"source": 5,
											"value": "138"
										},
										{
											"begin": 5441,
											"end": 5572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5572,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5433,
											"end": 5572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5579,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5579,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5579,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5160,
											"end": 5579,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "tag",
											"source": 5,
											"value": "22"
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5734,
											"end": 5738,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5772,
											"end": 5774,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 5761,
											"end": 5770,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5757,
											"end": 5775,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5775,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5749,
											"end": 5775,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5785,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5853,
											"end": 5854,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5842,
											"end": 5851,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5838,
											"end": 5855,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5829,
											"end": 5835,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 5785,
											"end": 5856,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5785,
											"end": 5856,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5785,
											"end": 5856,
											"name": "tag",
											"source": 5,
											"value": "140"
										},
										{
											"begin": 5785,
											"end": 5856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5934,
											"end": 5936,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 5923,
											"end": 5932,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5919,
											"end": 5937,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5910,
											"end": 5916,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 5866,
											"end": 5938,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "94"
										},
										{
											"begin": 5866,
											"end": 5938,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5866,
											"end": 5938,
											"name": "tag",
											"source": 5,
											"value": "141"
										},
										{
											"begin": 5866,
											"end": 5938,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 6016,
											"end": 6018,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6005,
											"end": 6014,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6001,
											"end": 6019,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5992,
											"end": 5998,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5948,
											"end": 6020,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "120"
										},
										{
											"begin": 5948,
											"end": 6020,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 5948,
											"end": 6020,
											"name": "tag",
											"source": 5,
											"value": "142"
										},
										{
											"begin": 5948,
											"end": 6020,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "SWAP5",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5585,
											"end": 6027,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6033,
											"end": 6162,
											"name": "tag",
											"source": 5,
											"value": "59"
										},
										{
											"begin": 6033,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6067,
											"end": 6073,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "tag",
											"source": 5,
											"value": "144"
										},
										{
											"begin": 6094,
											"end": 6114,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6114,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6084,
											"end": 6114,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6123,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6151,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6143,
											"end": 6149,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6123,
											"end": 6156,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 6123,
											"end": 6156,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6123,
											"end": 6156,
											"name": "tag",
											"source": 5,
											"value": "146"
										},
										{
											"begin": 6123,
											"end": 6156,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6162,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6162,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6162,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6033,
											"end": 6162,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6168,
											"end": 6243,
											"name": "tag",
											"source": 5,
											"value": "145"
										},
										{
											"begin": 6168,
											"end": 6243,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6201,
											"end": 6207,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6234,
											"end": 6236,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6228,
											"end": 6237,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6218,
											"end": 6237,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6218,
											"end": 6237,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6168,
											"end": 6243,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6168,
											"end": 6243,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6249,
											"end": 6556,
											"name": "tag",
											"source": 5,
											"value": "58"
										},
										{
											"begin": 6249,
											"end": 6556,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6310,
											"end": 6314,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6400,
											"end": 6418,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6392,
											"end": 6398,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6389,
											"end": 6419,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6442,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6442,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 6386,
											"end": 6442,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6422,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6422,
											"end": 6440,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 6422,
											"end": 6440,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6422,
											"end": 6440,
											"name": "tag",
											"source": 5,
											"value": "151"
										},
										{
											"begin": 6422,
											"end": 6440,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6386,
											"end": 6442,
											"name": "tag",
											"source": 5,
											"value": "150"
										},
										{
											"begin": 6386,
											"end": 6442,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6460,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6482,
											"end": 6488,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6460,
											"end": 6489,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 6460,
											"end": 6489,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6460,
											"end": 6489,
											"name": "tag",
											"source": 5,
											"value": "153"
										},
										{
											"begin": 6460,
											"end": 6489,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6452,
											"end": 6489,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6452,
											"end": 6489,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6544,
											"end": 6548,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6538,
											"end": 6542,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6534,
											"end": 6549,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6526,
											"end": 6549,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6526,
											"end": 6549,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6556,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6556,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6556,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6249,
											"end": 6556,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "tag",
											"source": 5,
											"value": "117"
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6646,
											"end": 6657,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6680,
											"end": 6686,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6675,
											"end": 6678,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6668,
											"end": 6687,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6720,
											"end": 6724,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6715,
											"end": 6718,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6711,
											"end": 6725,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6725,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6696,
											"end": 6725,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6562,
											"end": 6731,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 6737,
											"end": 7042,
											"name": "tag",
											"source": 5,
											"value": "47"
										},
										{
											"begin": 6737,
											"end": 7042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6777,
											"end": 6780,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6814,
											"end": 6815,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "tag",
											"source": 5,
											"value": "157"
										},
										{
											"begin": 6796,
											"end": 6816,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6816,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6791,
											"end": 6816,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6848,
											"end": 6849,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 6830,
											"end": 6850,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 6830,
											"end": 6850,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6830,
											"end": 6850,
											"name": "tag",
											"source": 5,
											"value": "158"
										},
										{
											"begin": 6830,
											"end": 6850,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6850,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6825,
											"end": 6850,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6984,
											"end": 6985,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6916,
											"end": 6982,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6912,
											"end": 6986,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6909,
											"end": 6910,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6906,
											"end": 6987,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7010,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7010,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6903,
											"end": 7010,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "tag",
											"source": 5,
											"value": "160"
										},
										{
											"begin": 6990,
											"end": 7008,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6903,
											"end": 7010,
											"name": "tag",
											"source": 5,
											"value": "159"
										},
										{
											"begin": 6903,
											"end": 7010,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7034,
											"end": 7035,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7031,
											"end": 7032,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7027,
											"end": 7036,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 7020,
											"end": 7036,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7020,
											"end": 7036,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6737,
											"end": 7042,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 6737,
											"end": 7042,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6737,
											"end": 7042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6737,
											"end": 7042,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 6737,
											"end": 7042,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7048,
											"end": 7144,
											"name": "tag",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 7048,
											"end": 7144,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7085,
											"end": 7092,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7132,
											"end": 7137,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "tag",
											"source": 5,
											"value": "163"
										},
										{
											"begin": 7114,
											"end": 7138,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7103,
											"end": 7138,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7103,
											"end": 7138,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7144,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7144,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7144,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7048,
											"end": 7144,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7150,
											"end": 7299,
											"name": "tag",
											"source": 5,
											"value": "101"
										},
										{
											"begin": 7150,
											"end": 7299,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7186,
											"end": 7193,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7226,
											"end": 7292,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7219,
											"end": 7224,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7215,
											"end": 7293,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7204,
											"end": 7293,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7204,
											"end": 7293,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7150,
											"end": 7299,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7150,
											"end": 7299,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7150,
											"end": 7299,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7150,
											"end": 7299,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7305,
											"end": 7431,
											"name": "tag",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 7305,
											"end": 7431,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7342,
											"end": 7349,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7382,
											"end": 7424,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7375,
											"end": 7380,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7371,
											"end": 7425,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7425,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7360,
											"end": 7425,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7431,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7431,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7431,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7305,
											"end": 7431,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7437,
											"end": 7514,
											"name": "tag",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 7437,
											"end": 7514,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7474,
											"end": 7481,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7503,
											"end": 7508,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7508,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7492,
											"end": 7508,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7437,
											"end": 7514,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7437,
											"end": 7514,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7437,
											"end": 7514,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7437,
											"end": 7514,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7520,
											"end": 7660,
											"name": "tag",
											"source": 5,
											"value": "105"
										},
										{
											"begin": 7520,
											"end": 7660,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7584,
											"end": 7593,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7617,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7648,
											"end": 7653,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7617,
											"end": 7654,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7617,
											"end": 7654,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7617,
											"end": 7654,
											"name": "tag",
											"source": 5,
											"value": "169"
										},
										{
											"begin": 7617,
											"end": 7654,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7604,
											"end": 7654,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7604,
											"end": 7654,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7520,
											"end": 7660,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7520,
											"end": 7660,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7520,
											"end": 7660,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7520,
											"end": 7660,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7666,
											"end": 7807,
											"name": "tag",
											"source": 5,
											"value": "109"
										},
										{
											"begin": 7666,
											"end": 7807,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7731,
											"end": 7740,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7764,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7795,
											"end": 7800,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7764,
											"end": 7801,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7764,
											"end": 7801,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7764,
											"end": 7801,
											"name": "tag",
											"source": 5,
											"value": "172"
										},
										{
											"begin": 7764,
											"end": 7801,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7751,
											"end": 7801,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7751,
											"end": 7801,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7666,
											"end": 7807,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7666,
											"end": 7807,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7666,
											"end": 7807,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7666,
											"end": 7807,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7813,
											"end": 7955,
											"name": "tag",
											"source": 5,
											"value": "113"
										},
										{
											"begin": 7813,
											"end": 7955,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7879,
											"end": 7888,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7943,
											"end": 7948,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "tag",
											"source": 5,
											"value": "174"
										},
										{
											"begin": 7912,
											"end": 7949,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 7899,
											"end": 7949,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7899,
											"end": 7949,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7955,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7955,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7955,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7813,
											"end": 7955,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 7961,
											"end": 8087,
											"name": "tag",
											"source": 5,
											"value": "170"
										},
										{
											"begin": 7961,
											"end": 8087,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8011,
											"end": 8020,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8044,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8075,
											"end": 8080,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8044,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 8044,
											"end": 8081,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8044,
											"end": 8081,
											"name": "tag",
											"source": 5,
											"value": "176"
										},
										{
											"begin": 8044,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8081,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8031,
											"end": 8081,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 8087,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 8087,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 8087,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 7961,
											"end": 8087,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8093,
											"end": 8206,
											"name": "tag",
											"source": 5,
											"value": "177"
										},
										{
											"begin": 8093,
											"end": 8206,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8143,
											"end": 8152,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8176,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8194,
											"end": 8199,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8176,
											"end": 8200,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "164"
										},
										{
											"begin": 8176,
											"end": 8200,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8176,
											"end": 8200,
											"name": "tag",
											"source": 5,
											"value": "179"
										},
										{
											"begin": 8176,
											"end": 8200,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8200,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8163,
											"end": 8200,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8093,
											"end": 8206,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 8093,
											"end": 8206,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 8093,
											"end": 8206,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8093,
											"end": 8206,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8212,
											"end": 8366,
											"name": "tag",
											"source": 5,
											"value": "64"
										},
										{
											"begin": 8212,
											"end": 8366,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8296,
											"end": 8302,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8291,
											"end": 8294,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8286,
											"end": 8289,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8273,
											"end": 8303,
											"name": "CALLDATACOPY",
											"source": 5
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8349,
											"end": 8355,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8344,
											"end": 8347,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 8340,
											"end": 8356,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8333,
											"end": 8360,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8366,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8212,
											"end": 8366,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8372,
											"end": 8653,
											"name": "tag",
											"source": 5,
											"value": "147"
										},
										{
											"begin": 8372,
											"end": 8653,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8455,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8477,
											"end": 8481,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8455,
											"end": 8482,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 8455,
											"end": 8482,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8455,
											"end": 8482,
											"name": "tag",
											"source": 5,
											"value": "182"
										},
										{
											"begin": 8455,
											"end": 8482,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8447,
											"end": 8453,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8443,
											"end": 8483,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 8585,
											"end": 8591,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8573,
											"end": 8583,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 8570,
											"end": 8592,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 8549,
											"end": 8567,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 8537,
											"end": 8547,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 8534,
											"end": 8568,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 8531,
											"end": 8593,
											"name": "OR",
											"source": 5
										},
										{
											"begin": 8528,
											"end": 8616,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 8528,
											"end": 8616,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8528,
											"end": 8616,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "tag",
											"source": 5,
											"value": "184"
										},
										{
											"begin": 8596,
											"end": 8614,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8528,
											"end": 8616,
											"name": "tag",
											"source": 5,
											"value": "183"
										},
										{
											"begin": 8528,
											"end": 8616,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8636,
											"end": 8646,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 8632,
											"end": 8634,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 8625,
											"end": 8647,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8415,
											"end": 8653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8653,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 8372,
											"end": 8653,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 8659,
											"end": 8839,
											"name": "tag",
											"source": 5,
											"value": "161"
										},
										{
											"begin": 8659,
											"end": 8839,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8707,
											"end": 8784,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8704,
											"end": 8705,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8697,
											"end": 8785,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8804,
											"end": 8808,
											"name": "PUSH",
											"source": 5,
											"value": "11"
										},
										{
											"begin": 8801,
											"end": 8802,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8794,
											"end": 8809,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8828,
											"end": 8832,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 8825,
											"end": 8826,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8818,
											"end": 8833,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 8845,
											"end": 9025,
											"name": "tag",
											"source": 5,
											"value": "152"
										},
										{
											"begin": 8845,
											"end": 9025,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 8893,
											"end": 8970,
											"name": "PUSH",
											"source": 5,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8890,
											"end": 8891,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 8883,
											"end": 8971,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 8990,
											"end": 8994,
											"name": "PUSH",
											"source": 5,
											"value": "41"
										},
										{
											"begin": 8987,
											"end": 8988,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 8980,
											"end": 8995,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9014,
											"end": 9018,
											"name": "PUSH",
											"source": 5,
											"value": "24"
										},
										{
											"begin": 9011,
											"end": 9012,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9004,
											"end": 9019,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9031,
											"end": 9148,
											"name": "tag",
											"source": 5,
											"value": "73"
										},
										{
											"begin": 9031,
											"end": 9148,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9140,
											"end": 9141,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9137,
											"end": 9138,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9130,
											"end": 9142,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9154,
											"end": 9271,
											"name": "tag",
											"source": 5,
											"value": "62"
										},
										{
											"begin": 9154,
											"end": 9271,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9263,
											"end": 9264,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9260,
											"end": 9261,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9253,
											"end": 9265,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9277,
											"end": 9394,
											"name": "tag",
											"source": 5,
											"value": "88"
										},
										{
											"begin": 9277,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9386,
											"end": 9387,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9383,
											"end": 9384,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9376,
											"end": 9388,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9400,
											"end": 9517,
											"name": "tag",
											"source": 5,
											"value": "82"
										},
										{
											"begin": 9400,
											"end": 9517,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9509,
											"end": 9510,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9506,
											"end": 9507,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9499,
											"end": 9511,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9625,
											"name": "tag",
											"source": 5,
											"value": "154"
										},
										{
											"begin": 9523,
											"end": 9625,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9564,
											"end": 9570,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9615,
											"end": 9617,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 9611,
											"end": 9618,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 9606,
											"end": 9608,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 9599,
											"end": 9604,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 9595,
											"end": 9609,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9591,
											"end": 9619,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9619,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9581,
											"end": 9619,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9625,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9625,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9625,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9523,
											"end": 9625,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9631,
											"end": 9811,
											"name": "tag",
											"source": 5,
											"value": "119"
										},
										{
											"begin": 9631,
											"end": 9811,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9771,
											"end": 9803,
											"name": "PUSH",
											"source": 5,
											"value": "4E6F7420616C6C6F77656420746F20636C61696D206F776E6572736869700000"
										},
										{
											"begin": 9767,
											"end": 9768,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9759,
											"end": 9765,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 9755,
											"end": 9769,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 9748,
											"end": 9804,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 9631,
											"end": 9811,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9631,
											"end": 9811,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9817,
											"end": 9939,
											"name": "tag",
											"source": 5,
											"value": "68"
										},
										{
											"begin": 9817,
											"end": 9939,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9908,
											"end": 9913,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9890,
											"end": 9914,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "97"
										},
										{
											"begin": 9890,
											"end": 9914,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 9890,
											"end": 9914,
											"name": "tag",
											"source": 5,
											"value": "194"
										},
										{
											"begin": 9890,
											"end": 9914,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9883,
											"end": 9888,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 9880,
											"end": 9915,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9933,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 9870,
											"end": 9933,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 9929,
											"end": 9930,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 9926,
											"end": 9927,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 9919,
											"end": 9931,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9870,
											"end": 9933,
											"name": "tag",
											"source": 5,
											"value": "195"
										},
										{
											"begin": 9870,
											"end": 9933,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9817,
											"end": 9939,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9817,
											"end": 9939,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										},
										{
											"begin": 9945,
											"end": 10067,
											"name": "tag",
											"source": 5,
											"value": "78"
										},
										{
											"begin": 9945,
											"end": 10067,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 10036,
											"end": 10041,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10018,
											"end": 10042,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "123"
										},
										{
											"begin": 10018,
											"end": 10042,
											"name": "JUMP",
											"source": 5,
											"value": "[in]"
										},
										{
											"begin": 10018,
											"end": 10042,
											"name": "tag",
											"source": 5,
											"value": "197"
										},
										{
											"begin": 10018,
											"end": 10042,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 10011,
											"end": 10016,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 10008,
											"end": 10043,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10061,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9998,
											"end": 10061,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 10057,
											"end": 10058,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 10054,
											"end": 10055,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 10047,
											"end": 10059,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 9998,
											"end": 10061,
											"name": "tag",
											"source": 5,
											"value": "198"
										},
										{
											"begin": 9998,
											"end": 10061,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 9945,
											"end": 10067,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 9945,
											"end": 10067,
											"name": "JUMP",
											"source": 5,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"getStakes(uint256)": "472343b9",
							"onERC721Received(address,address,uint256,bytes)": "150b7a02",
							"parentNFT()": "b8e33fb2",
							"parentNFTAddress()": "66bb863b",
							"parentNftFunctions()": "fead3d6e",
							"parentToken()": "80a54001",
							"unstake(uint256)": "2e17de78"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nftContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenContract\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"getStakes\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"add\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"time\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFT\",\"outputs\":[{\"internalType\":\"contract IERC721\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNFTAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentNftFunctions\",\"outputs\":[{\"internalType\":\"contract INFTGame\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"parentToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_tokenID\",\"type\":\"uint256\"}],\"name\":\"unstake\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenID\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Missions.sol\":\"Staking\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xed6a749c5373af398105ce6ee3ac4763aa450ea7285d268c85d9eeca809cdb1f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://20a97f891d06f0fe91560ea1a142aaa26fdd22bed1b51606b7d48f670deeb50f\",\"dweb:/ipfs/QmTbCtZKChpaX5H2iRiTDMcSz29GSLCpTCDgJpcMR4wg8x\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"contracts/Missions.sol\":{\"keccak256\":\"0x36df22e7cf7d272f186bf77aafc4663bfd8b5211f54150aa44ab3d1eccc5449a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7b4da0530461bb1cb88e35ed1223e4fcceab9e59c9d2f0e9af32a99b7e3f5420\",\"dweb:/ipfs/Qmd1Qx3eQwVTR1Eh1KpCHvUJcPujSb5cQ1S4sTuNFYpFJm\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 10,
								"contract": "contracts/Missions.sol:Staking",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 263,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentToken",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC20)117"
							},
							{
								"astId": 266,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFT",
								"offset": 0,
								"slot": "2",
								"type": "t_contract(IERC721)233"
							},
							{
								"astId": 269,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNftFunctions",
								"offset": 0,
								"slot": "3",
								"type": "t_contract(INFTGame)258"
							},
							{
								"astId": 271,
								"contract": "contracts/Missions.sol:Staking",
								"label": "parentNFTAddress",
								"offset": 0,
								"slot": "4",
								"type": "t_address"
							},
							{
								"astId": 305,
								"contract": "contracts/Missions.sol:Staking",
								"label": "s_stakers",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_uint256,t_address)"
							},
							{
								"astId": 309,
								"contract": "contracts/Missions.sol:Staking",
								"label": "s_missionTimers",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_uint256,t_uint256)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20)117": {
								"encoding": "inplace",
								"label": "contract IERC20",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721)233": {
								"encoding": "inplace",
								"label": "contract IERC721",
								"numberOfBytes": "20"
							},
							"t_contract(INFTGame)258": {
								"encoding": "inplace",
								"label": "contract INFTGame",
								"numberOfBytes": "20"
							},
							"t_mapping(t_uint256,t_address)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_uint256)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/security/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							39
						]
					},
					"id": 40,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "97:23:0"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "122:750:0",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 39,
							"linearizedBaseContracts": [
								39
							],
							"name": "ReentrancyGuard",
							"nameLocation": "891:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 5,
									"mutability": "constant",
									"name": "_NOT_ENTERED",
									"nameLocation": "1686:12:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1661:41:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1661:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 4,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1701:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 8,
									"mutability": "constant",
									"name": "_ENTERED",
									"nameLocation": "1733:8:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1708:37:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 6,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1708:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 7,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1744:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 10,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1768:7:0",
									"nodeType": "VariableDeclaration",
									"scope": 39,
									"src": "1752:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 9,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1752:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 17,
										"nodeType": "Block",
										"src": "1796:39:0",
										"statements": [
											{
												"expression": {
													"id": 15,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 13,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "1806:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 14,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "1816:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1806:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 16,
												"nodeType": "ExpressionStatement",
												"src": "1806:22:0"
											}
										]
									},
									"id": 18,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1793:2:0"
									},
									"returnParameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1796:0:0"
									},
									"scope": 39,
									"src": "1782:53:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "2236:421:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 22,
																"name": "_status",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "2325:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 23,
																"name": "_ENTERED",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 8,
																"src": "2336:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2325:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5265656e7472616e637947756172643a207265656e7472616e742063616c6c",
															"id": 25,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2346:33:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															},
															"value": "ReentrancyGuard: reentrant call"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ebf73bba305590e4764d5cb53b69bffd6d4d092d1a67551cb346f8cfcdab8619",
																"typeString": "literal_string \"ReentrancyGuard: reentrant call\""
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2317:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 26,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2317:63:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 27,
												"nodeType": "ExpressionStatement",
												"src": "2317:63:0"
											},
											{
												"expression": {
													"id": 30,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 28,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2455:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 29,
														"name": "_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "2465:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2455:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 31,
												"nodeType": "ExpressionStatement",
												"src": "2455:18:0"
											},
											{
												"id": 32,
												"nodeType": "PlaceholderStatement",
												"src": "2484:1:0"
											},
											{
												"expression": {
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 33,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "2628:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 34,
														"name": "_NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "2638:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2628:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 36,
												"nodeType": "ExpressionStatement",
												"src": "2628:22:0"
											}
										]
									},
									"documentation": {
										"id": 19,
										"nodeType": "StructuredDocumentation",
										"src": "1841:366:0",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 38,
									"name": "nonReentrant",
									"nameLocation": "2221:12:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 20,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2233:2:0"
									},
									"src": "2212:445:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 40,
							"src": "873:1786:0",
							"usedErrors": []
						}
					],
					"src": "97:2563:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							117
						]
					},
					"id": 118,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 41,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 42,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 117,
							"linearizedBaseContracts": [
								117
							],
							"name": "IERC20",
							"nameLocation": "212:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 43,
										"nodeType": "StructuredDocumentation",
										"src": "225:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"id": 51,
									"name": "Transfer",
									"nameLocation": "394:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 45,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "419:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "403:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 44,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "403:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 47,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "441:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "425:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 46,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "425:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 49,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "453:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 51,
												"src": "445:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 48,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "445:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "402:57:1"
									},
									"src": "388:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 52,
										"nodeType": "StructuredDocumentation",
										"src": "466:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"id": 60,
									"name": "Approval",
									"nameLocation": "625:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 54,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "650:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "634:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 53,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 56,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "673:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "657:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 55,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "657:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 58,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "690:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 60,
												"src": "682:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 57,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "682:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "633:63:1"
									},
									"src": "619:78:1"
								},
								{
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "703:66:1",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 66,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 66,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 117,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 67,
										"nodeType": "StructuredDocumentation",
										"src": "835:72:1",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 74,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "921:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "939:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "931:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 68,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "931:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "930:17:1"
									},
									"returnParameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 74,
												"src": "971:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 71,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "971:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "970:9:1"
									},
									"scope": 117,
									"src": "912:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 75,
										"nodeType": "StructuredDocumentation",
										"src": "986:202:1",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 84,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1202:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 80,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 77,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1219:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1211:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 76,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1211:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 79,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1231:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1223:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 78,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1210:28:1"
									},
									"returnParameters": {
										"id": 83,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 82,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "1257:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 81,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1257:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1256:6:1"
									},
									"scope": 117,
									"src": "1193:70:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1269:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 94,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1547:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 90,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 87,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1565:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1557:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 86,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1557:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 89,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1580:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1572:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 88,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1556:32:1"
									},
									"returnParameters": {
										"id": 93,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 92,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 94,
												"src": "1612:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 91,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1612:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1611:9:1"
									},
									"scope": 117,
									"src": "1538:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 95,
										"nodeType": "StructuredDocumentation",
										"src": "1627:642:1",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 104,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2283:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 97,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2299:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2291:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 96,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2291:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2316:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2308:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 98,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2308:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2290:33:1"
									},
									"returnParameters": {
										"id": 103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 102,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 104,
												"src": "2342:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 101,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2342:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2341:6:1"
									},
									"scope": 117,
									"src": "2274:74:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 105,
										"nodeType": "StructuredDocumentation",
										"src": "2354:287:1",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 116,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2655:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 107,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2685:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2677:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 106,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2677:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 109,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2707:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2699:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 108,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 111,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2727:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2719:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 110,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2719:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2667:72:1"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 114,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "2758:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 113,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2758:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2757:6:1"
									},
									"scope": 117,
									"src": "2646:118:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 118,
							"src": "202:2564:1",
							"usedErrors": []
						}
					],
					"src": "106:2661:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts/token/ERC721/IERC721.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC721": [
							233
						]
					},
					"id": 234,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 119,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "../../utils/introspection/IERC165.sol",
							"id": 120,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 234,
							"sourceUnit": 246,
							"src": "133:47:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 122,
										"name": "IERC165",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 245,
										"src": "271:7:2"
									},
									"id": 123,
									"nodeType": "InheritanceSpecifier",
									"src": "271:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 121,
								"nodeType": "StructuredDocumentation",
								"src": "182:67:2",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 233,
							"linearizedBaseContracts": [
								233,
								245
							],
							"name": "IERC721",
							"nameLocation": "260:7:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "285:88:2",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"id": 132,
									"name": "Transfer",
									"nameLocation": "384:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "409:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "393:20:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "393:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "431:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "415:18:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 127,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "415:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 130,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "451:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 132,
												"src": "435:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "435:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "392:67:2"
									},
									"src": "378:82:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "466:94:2",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"id": 141,
									"name": "Approval",
									"nameLocation": "571:8:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 135,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "596:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "580:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "580:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 137,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "619:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "603:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "603:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "645:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 141,
												"src": "629:23:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "629:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "579:74:2"
									},
									"src": "565:89:2"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 142,
										"nodeType": "StructuredDocumentation",
										"src": "660:117:2",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"id": 150,
									"name": "ApprovalForAll",
									"nameLocation": "788:14:2",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "819:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "803:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "803:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 146,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "842:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "826:24:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "826:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 148,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "857:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "852:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 147,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "852:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "802:64:2"
									},
									"src": "782:85:2"
								},
								{
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "873:76:2",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 158,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "963:9:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "981:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "973:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "973:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "972:15:2"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1019:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 158,
												"src": "1011:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 155,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1011:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1010:17:2"
									},
									"scope": 233,
									"src": "954:74:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 159,
										"nodeType": "StructuredDocumentation",
										"src": "1034:131:2",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 166,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1179:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 161,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1195:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1187:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 160,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1186:17:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1235:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 166,
												"src": "1227:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1226:15:2"
									},
									"scope": 233,
									"src": "1170:72:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 167,
										"nodeType": "StructuredDocumentation",
										"src": "1248:556:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 178,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1818:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 169,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1852:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1844:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 168,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1844:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 171,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1874:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1866:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 170,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1866:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 173,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1894:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1886:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 172,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1886:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 178,
												"src": "1911:19:2",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 174,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1834:102:2"
									},
									"returnParameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1945:0:2"
									},
									"scope": 233,
									"src": "1809:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 179,
										"nodeType": "StructuredDocumentation",
										"src": "1952:687:2",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 188,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2653:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 181,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2679:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 180,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 183,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2709:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2701:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 182,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2701:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2729:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 188,
												"src": "2721:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 184,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2721:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2669:73:2"
									},
									"returnParameters": {
										"id": 187,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2751:0:2"
									},
									"scope": 233,
									"src": "2644:108:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 189,
										"nodeType": "StructuredDocumentation",
										"src": "2758:504:2",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Usage of this method is discouraged, use {safeTransferFrom} whenever possible.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 198,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3276:12:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 191,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3306:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3298:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3298:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3328:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3320:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 192,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3320:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3348:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 198,
												"src": "3340:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3340:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3288:73:2"
									},
									"returnParameters": {
										"id": 197,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:2"
									},
									"scope": 233,
									"src": "3267:104:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 199,
										"nodeType": "StructuredDocumentation",
										"src": "3377:452:2",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 206,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "3843:7:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 201,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3859:2:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3851:10:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 200,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3851:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3871:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 206,
												"src": "3863:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 202,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3863:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3850:29:2"
									},
									"returnParameters": {
										"id": 205,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3888:0:2"
									},
									"scope": 233,
									"src": "3834:55:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 207,
										"nodeType": "StructuredDocumentation",
										"src": "3895:309:2",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 214,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4218:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 212,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 209,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4244:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4236:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 208,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4236:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 211,
												"mutability": "mutable",
												"name": "_approved",
												"nameLocation": "4259:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 214,
												"src": "4254:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 210,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4254:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4235:34:2"
									},
									"returnParameters": {
										"id": 213,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4278:0:2"
									},
									"scope": 233,
									"src": "4209:70:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 215,
										"nodeType": "StructuredDocumentation",
										"src": "4285:139:2",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 222,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4438:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4458:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4450:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 216,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4450:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4449:17:2"
									},
									"returnParameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4498:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 222,
												"src": "4490:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 219,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4490:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4489:18:2"
									},
									"scope": 233,
									"src": "4429:79:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 223,
										"nodeType": "StructuredDocumentation",
										"src": "4514:138:2",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 232,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4666:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 228,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 225,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4691:5:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4683:13:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 224,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4683:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 227,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4706:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4698:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 226,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4698:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4682:33:2"
									},
									"returnParameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "4739:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 229,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4739:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4738:6:2"
									},
									"scope": 233,
									"src": "4657:88:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 234,
							"src": "250:4497:2",
							"usedErrors": []
						}
					],
					"src": "108:4640:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						]
					},
					"id": 246,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 235,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 236,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:3",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 245,
							"linearizedBaseContracts": [
								245
							],
							"name": "IERC165",
							"nameLocation": "415:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 237,
										"nodeType": "StructuredDocumentation",
										"src": "429:340:3",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "783:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 239,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "808:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "801:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 238,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "801:6:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "800:20:3"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "844:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 241,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "844:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "843:6:3"
									},
									"scope": 245,
									"src": "774:76:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 246,
							"src": "405:447:3",
							"usedErrors": []
						}
					],
					"src": "100:753:3"
				},
				"id": 3
			},
			"contracts/Missions.sol": {
				"ast": {
					"absolutePath": "contracts/Missions.sol",
					"exportedSymbols": {
						"IERC165": [
							245
						],
						"IERC20": [
							117
						],
						"IERC721": [
							233
						],
						"INFTGame": [
							258
						],
						"ReentrancyGuard": [
							39
						],
						"Staking": [
							396
						]
					},
					"id": 397,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 247,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".6"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
							"id": 248,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 40,
							"src": "64:62:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
							"id": 249,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 118,
							"src": "128:56:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"file": "@openzeppelin/contracts/token/ERC721/IERC721.sol",
							"id": 250,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 397,
							"sourceUnit": 234,
							"src": "186:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "INFTGame",
							"nameLocation": "258:8:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "a0c4442d",
									"id": 257,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getTrophies",
									"nameLocation": "286:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "298:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 251,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:9:4"
									},
									"returnParameters": {
										"id": 256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 255,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "325:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 254,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "325:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "324:9:4"
									},
									"scope": 258,
									"src": "277:57:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 397,
							"src": "248:89:4",
							"usedErrors": []
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 259,
										"name": "ReentrancyGuard",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 39,
										"src": "361:15:4"
									},
									"id": 260,
									"nodeType": "InheritanceSpecifier",
									"src": "361:15:4"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 396,
							"linearizedBaseContracts": [
								396,
								39
							],
							"name": "Staking",
							"nameLocation": "350:7:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "80a54001",
									"id": 263,
									"mutability": "mutable",
									"name": "parentToken",
									"nameLocation": "398:11:4",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "384:25:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$117",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 262,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 261,
											"name": "IERC20",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 117,
											"src": "384:6:4"
										},
										"referencedDeclaration": 117,
										"src": "384:6:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$117",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "b8e33fb2",
									"id": 266,
									"mutability": "mutable",
									"name": "parentNFT",
									"nameLocation": "431:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "416:24:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721_$233",
										"typeString": "contract IERC721"
									},
									"typeName": {
										"id": 265,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 264,
											"name": "IERC721",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 233,
											"src": "416:7:4"
										},
										"referencedDeclaration": 233,
										"src": "416:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721_$233",
											"typeString": "contract IERC721"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "fead3d6e",
									"id": 269,
									"mutability": "mutable",
									"name": "parentNftFunctions",
									"nameLocation": "463:18:4",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "447:34:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_INFTGame_$258",
										"typeString": "contract INFTGame"
									},
									"typeName": {
										"id": 268,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 267,
											"name": "INFTGame",
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 258,
											"src": "447:8:4"
										},
										"referencedDeclaration": 258,
										"src": "447:8:4",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_INFTGame_$258",
											"typeString": "contract INFTGame"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "66bb863b",
									"id": 271,
									"mutability": "mutable",
									"name": "parentNFTAddress",
									"nameLocation": "503:16:4",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "488:31:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 270,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "488:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 300,
										"nodeType": "Block",
										"src": "583:205:4",
										"statements": [
											{
												"expression": {
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 278,
														"name": "parentNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 266,
														"src": "594:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 280,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "614:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 279,
															"name": "IERC721",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 233,
															"src": "606:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721_$233_$",
																"typeString": "type(contract IERC721)"
															}
														},
														"id": 281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "606:21:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721_$233",
															"typeString": "contract IERC721"
														}
													},
													"src": "594:33:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721_$233",
														"typeString": "contract IERC721"
													}
												},
												"id": 283,
												"nodeType": "ExpressionStatement",
												"src": "594:33:4"
											},
											{
												"expression": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 284,
														"name": "parentNftFunctions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 269,
														"src": "638:18:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 286,
																"name": "_nftContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "668:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 285,
															"name": "INFTGame",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "659:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_INFTGame_$258_$",
																"typeString": "type(contract INFTGame)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "659:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_INFTGame_$258",
															"typeString": "contract INFTGame"
														}
													},
													"src": "638:43:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_INFTGame_$258",
														"typeString": "contract INFTGame"
													}
												},
												"id": 289,
												"nodeType": "ExpressionStatement",
												"src": "638:43:4"
											},
											{
												"expression": {
													"id": 294,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 290,
														"name": "parentToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 263,
														"src": "692:11:4",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 292,
																"name": "_tokenContract",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 275,
																"src": "713:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 291,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "706:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$117_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 293,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "706:22:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$117",
															"typeString": "contract IERC20"
														}
													},
													"src": "692:36:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$117",
														"typeString": "contract IERC20"
													}
												},
												"id": 295,
												"nodeType": "ExpressionStatement",
												"src": "692:36:4"
											},
											{
												"expression": {
													"id": 298,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 296,
														"name": "parentNFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "739:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 297,
														"name": "_nftContract",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 273,
														"src": "758:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "739:31:4",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 299,
												"nodeType": "ExpressionStatement",
												"src": "739:31:4"
											}
										]
									},
									"id": 301,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "_nftContract",
												"nameLocation": "546:12:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "538:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "538:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "_tokenContract",
												"nameLocation": "568:14:4",
												"nodeType": "VariableDeclaration",
												"scope": 301,
												"src": "560:22:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "560:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "537:46:4"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "583:0:4"
									},
									"scope": 396,
									"src": "526:262:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 305,
									"mutability": "mutable",
									"name": "s_stakers",
									"nameLocation": "823:9:4",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "796:36:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
										"typeString": "mapping(uint256 => address)"
									},
									"typeName": {
										"id": 304,
										"keyType": {
											"id": 302,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "805:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "796:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
											"typeString": "mapping(uint256 => address)"
										},
										"valueType": {
											"id": 303,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "814:7:4",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 309,
									"mutability": "mutable",
									"name": "s_missionTimers",
									"nameLocation": "866:15:4",
									"nodeType": "VariableDeclaration",
									"scope": 396,
									"src": "839:42:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
										"typeString": "mapping(uint256 => uint256)"
									},
									"typeName": {
										"id": 308,
										"keyType": {
											"id": 306,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "848:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "839:26:4",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
											"typeString": "mapping(uint256 => uint256)"
										},
										"valueType": {
											"id": 307,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "857:7:4",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 326,
										"nodeType": "Block",
										"src": "979:74:4",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 318,
																"name": "s_stakers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 305,
																"src": "998:9:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																	"typeString": "mapping(uint256 => address)"
																}
															},
															"id": 320,
															"indexExpression": {
																"id": 319,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1008:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "998:19:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 321,
																"name": "s_missionTimers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "1019:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 323,
															"indexExpression": {
																"id": 322,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 311,
																"src": "1035:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1019:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 324,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "997:48:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
														"typeString": "tuple(address,uint256)"
													}
												},
												"functionReturnParameters": 317,
												"id": 325,
												"nodeType": "Return",
												"src": "990:55:4"
											}
										]
									},
									"functionSelector": "472343b9",
									"id": 327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStakes",
									"nameLocation": "904:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "922:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "914:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "914:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "913:18:4"
									},
									"returnParameters": {
										"id": 317,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 314,
												"mutability": "mutable",
												"name": "add",
												"nameLocation": "961:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "953:11:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 313,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "953:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 316,
												"mutability": "mutable",
												"name": "time",
												"nameLocation": "974:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 327,
												"src": "966:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 315,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "966:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "952:27:4"
									},
									"scope": 396,
									"src": "895:158:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 356,
										"nodeType": "Block",
										"src": "1165:164:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 344,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 339,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "1184:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 340,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "1184:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"baseExpression": {
																	"id": 341,
																	"name": "s_stakers",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 305,
																	"src": "1198:9:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																		"typeString": "mapping(uint256 => address)"
																	}
																},
																"id": 343,
																"indexExpression": {
																	"id": 342,
																	"name": "_tokenID",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 329,
																	"src": "1208:8:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "1198:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1184:33:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616c6c6f77656420746f20636c61696d206f776e657273686970",
															"id": 345,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1219:32:4",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05",
																"typeString": "literal_string \"Not allowed to claim ownership\""
															},
															"value": "Not allowed to claim ownership"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_b305337862c2c9199cb6af26bb621f8847ad6d647510a3ab79cfe0d2d095eb05",
																"typeString": "literal_string \"Not allowed to claim ownership\""
															}
														],
														"id": 338,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1176:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 346,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:76:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 347,
												"nodeType": "ExpressionStatement",
												"src": "1176:76:4"
											},
											{
												"expression": {
													"components": [
														{
															"id": 348,
															"name": "_tokenID",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 329,
															"src": "1271:8:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 349,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1281:3:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 350,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1281:10:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"baseExpression": {
																"id": 351,
																"name": "s_missionTimers",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 309,
																"src": "1293:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																	"typeString": "mapping(uint256 => uint256)"
																}
															},
															"id": 353,
															"indexExpression": {
																"id": 352,
																"name": "_tokenID",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 329,
																"src": "1309:8:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1293:25:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"id": 354,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1270:49:4",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_uint256_$_t_address_$_t_uint256_$",
														"typeString": "tuple(uint256,address,uint256)"
													}
												},
												"functionReturnParameters": 337,
												"id": 355,
												"nodeType": "Return",
												"src": "1263:56:4"
											}
										]
									},
									"functionSelector": "2e17de78",
									"id": 357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unstake",
									"nameLocation": "1074:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 329,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1090:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1082:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 328,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1082:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1081:18:4"
									},
									"returnParameters": {
										"id": 337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 332,
												"mutability": "mutable",
												"name": "tokenID",
												"nameLocation": "1129:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1121:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 331,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1121:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 334,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1146:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1138:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 333,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1138:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 336,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1158:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1150:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 335,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1150:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1120:45:4"
									},
									"scope": 396,
									"src": "1065:264:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "1473:237:4",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 372,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 370,
														"name": "_operator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 359,
														"src": "1500:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 371,
														"name": "parentNFTAddress",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 271,
														"src": "1513:16:4",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1500:29:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 389,
												"nodeType": "IfStatement",
												"src": "1496:149:4",
												"trueBody": {
													"id": 388,
													"nodeType": "Block",
													"src": "1530:115:4",
													"statements": [
														{
															"expression": {
																"id": 377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 373,
																		"name": "s_stakers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 305,
																		"src": "1541:9:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_address_$",
																			"typeString": "mapping(uint256 => address)"
																		}
																	},
																	"id": 375,
																	"indexExpression": {
																		"id": 374,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1551:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1541:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 376,
																	"name": "_sender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 361,
																	"src": "1563:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"src": "1541:29:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 378,
															"nodeType": "ExpressionStatement",
															"src": "1541:29:4"
														},
														{
															"expression": {
																"id": 386,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"id": 379,
																		"name": "s_missionTimers",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 309,
																		"src": "1581:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
																			"typeString": "mapping(uint256 => uint256)"
																		}
																	},
																	"id": 381,
																	"indexExpression": {
																		"id": 380,
																		"name": "_tokenID",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 363,
																		"src": "1597:8:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "1581:25:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 382,
																			"name": "block",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967292,
																			"src": "1609:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_block",
																				"typeString": "block"
																			}
																		},
																		"id": 383,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberName": "timestamp",
																		"nodeType": "MemberAccess",
																		"src": "1609:15:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"hexValue": "35",
																		"id": 384,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1627:6:4",
																		"subdenomination": "days",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_432000_by_1",
																			"typeString": "int_const 432000"
																		},
																		"value": "5"
																	},
																	"src": "1609:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1581:52:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 387,
															"nodeType": "ExpressionStatement",
															"src": "1581:52:4"
														}
													]
												}
											},
											{
												"expression": {
													"expression": {
														"expression": {
															"id": 390,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "1672:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Staking_$396",
																"typeString": "contract Staking"
															}
														},
														"id": 391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "onERC721Received",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 395,
														"src": "1672:21:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
															"typeString": "function (address,address,uint256,bytes memory) external returns (bytes4)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberName": "selector",
													"nodeType": "MemberAccess",
													"src": "1672:30:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"functionReturnParameters": 369,
												"id": 393,
												"nodeType": "Return",
												"src": "1665:37:4"
											}
										]
									},
									"functionSelector": "150b7a02",
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "onERC721Received",
									"nameLocation": "1356:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 359,
												"mutability": "mutable",
												"name": "_operator",
												"nameLocation": "1381:9:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1373:17:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 358,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1373:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 361,
												"mutability": "mutable",
												"name": "_sender",
												"nameLocation": "1400:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1392:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 360,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 363,
												"mutability": "mutable",
												"name": "_tokenID",
												"nameLocation": "1417:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1409:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 362,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1409:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 365,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1427:12:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 364,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1427:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1372:68:4"
									},
									"returnParameters": {
										"id": 369,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "1465:6:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 367,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1465:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1464:8:4"
									},
									"scope": 396,
									"src": "1347:363:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 397,
							"src": "341:1409:4",
							"usedErrors": []
						}
					],
					"src": "35:1715:4"
				},
				"id": 4
			}
		}
	}
}